{"version":3,"sources":["C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src async","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/app.component.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/app.module.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/app.routing.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/alemania.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/api.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/api2023.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/apiRobot.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/australia.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/austria.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/belgica.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/brasil.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/canada.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/china.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/dinamarca.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/eeuu.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/espana.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/francia.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/holanda.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/home.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/india.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/italia.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/mexico.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/noruega.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/portugal.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/recomendadas.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/rusia.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/suecia.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/suiza.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/uk.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/css/styles.css","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/modelos/recomendadas.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/servicios/api.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/servicios/pipe.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/servicios/servicio1.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/alemania.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/api.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/api2023.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/apiRobot.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/australia.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/austria.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/belgica.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/brasil.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/canada.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/china.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/dinamarca.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/eeuu.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/espana.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/francia.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/holanda.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/home.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/index.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/india.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/italia.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/mexico.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/noruega.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/portugal.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/recomendadas.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/rusia.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/suecia.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/suiza.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/uk.html","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/environments/environment.ts","C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './vistas/index.html',\n  styleUrls: ['./css/styles.css']\n})\nexport class AppComponent {\n  title = 'app';\n  titulo = 'Web Midas';\n  descripcion = 'Parseo de mercados';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { Pipi} from './servicios/pipe';\nimport {routing, appRoutingProviders} from './app.routing';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// ssh root@207.154.253.101 // pass: Duplex6969\n/* \nLOS CAMBIOS PARA TODOS LOS TS SON EN APIROBOT, ES LA QUE VALE\n- para producción cambiaríamos la ip de localhost en el servicio api.ts \n- cambiaríamos en package.json lo que hay cambiado // ocean: \"start\": \"nodemon index.js\", local: \"start\": \"node index.js\",\n- En client_dev haríamos ng build --prod y crearía el client en la carpeta dist\n\nnpm run ng build --prod\n\n- ahora dist lo sustituiremos por client poniéndole ese nombre\n- Subimos a github todo menos node_modules y client_dev (se explica abajo como)\n*/\n// borramos en github via web el repositorio midasTop2\n// lo creamos de nuevo y subimos\n// al subir una nueva version al ssh lo haremos así: creamos nueva carpeta, paramos el proceso:\n// pm2 kill para parar el proceso en marcha\n// Borramos la carpeta: rm -r 2024/\n// clonamos lo de github a la nueva carpeta\n// git clone https://github.com/totogarcia/2024.git\n// cd 2024 \n// npm install\n// pm2 start index.js\n// si hay algún fallo probamos a iniciar \n\n// si nos equivocáramos con cotrol Z en vez de ctrol c = sudo lsof -t -i tcp:3678 | xargs kill -9\n\n// importamos componentes\nimport { AppComponent } from './app.component';\nimport { Home } from './componentes/home';\nimport { Api } from './componentes/api';\nimport { Recomendadas } from './componentes/recomendadas';\nimport { ApiRobot } from './componentes/apiRobot';\nimport { Espana } from './componentes/espana';\nimport { Alemania } from './componentes/alemania';\nimport { Australia } from './componentes/australia';\nimport { Austria } from './componentes/austria';\nimport { Belgica } from './componentes/belgica';\nimport { Brasil } from './componentes/brasil';\nimport { Canada } from './componentes/canada';\nimport { China } from './componentes/china';\nimport { Dinamarca } from './componentes/dinamarca';\nimport { EEUU } from './componentes/eeuu';\nimport { api2023 } from './componentes/api2023';\nimport { Francia } from './componentes/francia';\nimport { Holanda } from './componentes/holanda';\nimport { India } from './componentes/india';\nimport { Italia } from './componentes/italia';\nimport { Mexico } from './componentes/mexico';\nimport { Noruega } from './componentes/noruega';\nimport { Portugal } from './componentes/portugal';\nimport { Rusia } from './componentes/rusia';\nimport { Suecia } from './componentes/suecia';\nimport { Suiza } from './componentes/suiza';\nimport { UK } from './componentes/uk';\nimport { makeDecorator } from '@angular/core/src/util/decorators';\nimport {HashLocationStrategy,LocationStrategy} from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Api,\n    Recomendadas,\n    ApiRobot,\n    Pipi,\n    Home,\n    Espana,\n    Alemania,\n    Australia,\n    Austria,\n    Belgica,\n    Brasil,\n    Canada,\n    China,\n    Dinamarca,\n    EEUU,\n    api2023,\n    Francia,\n    Holanda,\n    India,\n    Italia,\n    Mexico,\n    Noruega,\n    Portugal,\n    Rusia,\n    Suecia,\n    Suiza,\n    UK\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule,\n    routing\n  ],\n  providers: [appRoutingProviders,\n              {provide: LocationStrategy, useClass: HashLocationStrategy}\n              ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/app.module.ts","import {ModuleWithProviders} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {Home} from './componentes/home';\nimport {Api} from './componentes/api';\nimport {Recomendadas} from './componentes/recomendadas';\nimport {ApiRobot} from './componentes/apiRobot';\nimport {Espana} from './componentes/espana';\nimport {Alemania} from './componentes/alemania';\nimport {Australia} from './componentes/australia';\nimport {Austria} from './componentes/austria';\nimport {Belgica} from './componentes/belgica';\nimport { Brasil } from './componentes/brasil';\nimport { Canada } from './componentes/canada';\nimport { China } from './componentes/china';\nimport { Dinamarca } from './componentes/dinamarca';\nimport { EEUU } from './componentes/eeuu';\nimport { api2023 } from './componentes/api2023';\nimport { Francia } from './componentes/francia';\nimport { Holanda } from './componentes/holanda';\nimport { India } from './componentes/india';\nimport { Italia } from './componentes/italia';\nimport { Mexico } from './componentes/mexico';\nimport { Noruega } from './componentes/noruega';\nimport { Portugal } from './componentes/portugal';\nimport { Rusia } from './componentes/rusia';\nimport { Suecia } from './componentes/suecia';\nimport { Suiza } from './componentes/suiza';\nimport { UK } from './componentes/uk';\n\nconst appRoutes: Routes = [\n    {path: '', component: Home}, // cuando inicie\n    {path: 'api', component: Api},\n    {path: 'recomendadas', component: Recomendadas},\n    {path: 'apiRobot', component: ApiRobot},\n    {path: 'espana', component: Espana},\n    {path: 'alemania', component: Alemania},\n    {path: 'australia', component: Australia},\n    {path: 'austria', component: Austria},\n    {path: 'belgica', component: Belgica},\n    {path: 'brasil', component: Brasil},\n    {path: 'canada', component: Canada},\n    {path: 'china', component: China},\n    {path: 'dinamarca', component: Dinamarca},\n    {path: 'eeuu', component: EEUU},\n    {path: 'api2023', component: api2023},\n    {path: 'francia', component: Francia},\n    {path: 'holanda', component: Holanda},\n    {path: 'india', component: India},\n    {path: 'italia', component: Italia},\n    {path: 'mexico', component: Mexico},\n    {path: 'noruega', component: Noruega},\n    {path: 'portugal', component: Portugal},\n    {path: 'rusia', component: Rusia},\n    {path: 'suecia', component: Suecia},\n    {path: 'suiza', component: Suiza},\n    {path: 'uk', component: UK},\n\n    {path: '**', component: Home}, // cuando de error\n];\n\nexport const appRoutingProviders: any[] = [];\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/app.routing.ts","import {Component, OnInit} from '@angular/core';\nimport {Pipi} from '../servicios/pipe';\nimport {Router, ActivatedRoute, Params} from '@angular/router'; // fundamental para funcionar con router\n\n// Importamos servicio y modelo\nimport {Servicio1} from '../servicios/servicio1';\nimport {ApiServicio} from '../servicios/api';\nimport {Modelo1} from '../modelos/modelo1';\n\n@Component({\n    selector: 'etiqueta-alemania',\n    templateUrl: '../vistas/alemania.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio]\n})\n\nexport class Alemania implements OnInit {\n    \n    //para pipe\n    // para contador de bucle\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Alemania';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('alemania')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Alemania borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('XETRA').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(270000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(120000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(300000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(500000).then(() => {\n                        this._favoritoService.addPais(stock,'alemania').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Alemania agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,2).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n                        // Aquí metemos el nuevo código del biAnual\n                        this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                            result => {\n                                if(!result){\n                                    alert('No obtenemos resultado en el parseo BiAnual')\n                                } else {\n                                let hoyBi = parseFloat(result[0].adjusted_close);\n                                let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                    if(hoyBi > ayerBi){\n                                        let cuentaResultado = hoyBi - ayerBi;\n                                        let comparacion = cuentaResultado / ayerBi;\n                                        total = comparacion * 100;\n                                        resultado = parseInt(total);\n                                        let biAnual = resultado;\n\n                                        if(biAnual > 150 && biAnual > anual){\n\n\n                                            this._servicio1.getriAnual(tickerRecibido).subscribe(\n                                                result => {\n                                                    if(!result){\n                                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                                    } else {\n                                                    let hoytri = parseFloat(result[0].adjusted_close);\n                                                    let ayertri = parseFloat(result[result.length - 1].adjusted_close);\n                                                        if(hoytri > ayertri){\n                                                            let cuentaResultado = hoytri - ayertri;\n                                                            let comparacion = cuentaResultado / ayertri;\n                                                            total = comparacion * 100;\n                                                            resultado = parseInt(total);\n                                                            let triAnual = resultado;\n                    \n                                                            if(triAnual > 200 && triAnual > biAnual && ayertri <= ayerBi && ayertri < ayer){\n                                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                                  response =>{\n                                                                      if(!response){\n                                                                          console.log('error al recibir confirmacion de guardado');\n                                                                      }\n                                                                      else{\n                                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                                      }\n                                                                  },\n                                                                  error =>{\n                                                                      console.log('Error al guardar datos')\n                                                                  }\n                                                              );\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    )\n                                        }\n                                      }\n                                    }\n                                  }\n                                )}\n                        // Aquí termina el nuevo código del bianual\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = '';\n\n            if (stock.Name.split(' ').slice(0,1).join(' ') === 'Deutsche'){\n                nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n\n                if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                    arrayComprueba.push(nombreComprobar);\n    \n                    console.log('Recopilamos datos del mercado Aleman'); \n                    let nombre: string = stock.Name;\n                    let ticker: string = stock.Code+'.'+stock.Country;\n                    let moneda: string = stock.Currency;\n                    this._servicio1.seleccionarMas3(ticker).subscribe(\n                        result => {\n                            if(!result){\n                                alert('No obtenemos resultados de acciones')\n                            } else { \n                            let hoy = parseFloat(result.close); //[0] \n                            if(hoy > 3){\n                                this.datosFinales.push({\n                                    \"nombre\": nombre,\n                                    \"ticker\": ticker,\n                                    \"moneda\": moneda,\n                                    \"valor\": hoy\n                                  });   \n                            }\n                        }\n                        });\n                }\n            } else {\n                nombreComprobar = stock.Name.split(' ').slice(0,1).join(' ');\n                \n                if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                    arrayComprueba.push(nombreComprobar);\n    \n                    console.log('Recopilamos datos del mercado Aleman'); \n                    let nombre: string = stock.Name;\n                    let ticker: string = stock.Code+'.'+stock.Exchange;\n                    let moneda: string = stock.Currency;\n                    let icono = 'ios-star-outline';\n                    this._servicio1.seleccionarMas3(ticker).subscribe(\n                        result => {\n                            if(!result){\n                                alert('No obtenemos resultados de acciones')\n                            } else { \n                            let hoy = parseFloat(result.close); //[0] \n                            if(hoy > 3){\n                                this.datosFinales.push({\n                                    \"nombre\": nombre,\n                                    \"ticker\": ticker,\n                                    \"moneda\": moneda,\n                                    \"valor\": hoy,\n                                    \"icono\": icono\n                                  });   \n                            }\n                        }\n                        });\n                }\n            }\n        }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n/* export class Alemania implements OnInit {\n\n    //para pipe\n    isDesc : boolean = false;\n    column : String = 'anual';\n    direction : number;\n    public favorito : Modelo1;\n\n    public titulo : string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public mercadoAcciones : any[] = [\n        {nombre: 'Adidas',ticker: 'ADS.XETRA'}, {nombre: 'Aixtron',ticker: 'AIXA.XETRA'}, \n        {nombre: 'Allianz',ticker: 'ALV.XETRA'}, {nombre: 'Basf',ticker: 'BAS.XETRA'}, \n        {nombre: 'BMW',ticker: 'BMW.XETRA'}, {nombre: 'Bayer',ticker: 'BAYN.XETRA'}, \n        {nombre: 'Beiersdorf',ticker: 'BEI.XETRA'}, {nombre: 'Commerzbank',ticker: 'CBK.XETRA'}, \n        {nombre: 'Continental',ticker: 'CON.XETRA'}, {nombre: 'Covestro',ticker: '1COV.XETRA'}, \n        {nombre: 'Daimler',ticker: 'DAI.XETRA'}, {nombre: 'Deutsche Bank',ticker: 'DBK.XETRA'}, \n        {nombre: 'Deutsche Bank',ticker: 'DB1.XETRA'}, {nombre: 'Deutsche Post',ticker: 'DPW.XETRA'}, \n        {nombre: 'Deutsche Wohnen',ticker: 'DWNI.XETRA'}, {nombre: 'Dialog Semicond.',ticker: 'DLG.XETRA'}, \n        {nombre: 'Drillisch',ticker: 'DRI.XETRA'}, {nombre: 'DT. Telekom',ticker: 'DTE.XETRA'},\n        {nombre: 'E.ON',ticker: 'EOAN.XETRA'}, {nombre: 'Evotec',ticker: 'EVT.XETRA'}, \n        {nombre: 'Fresen. Med. Care',ticker: 'FME.XETRA'}, {nombre: 'Fresenius',ticker: 'FRE.XETRA'}, \n        {nombre: 'Heidelbergcement',ticker: 'HEI.XETRA'}, {nombre: 'Henkel',ticker: 'HEN.XETRA'}, \n        {nombre: 'Infineon',ticker: 'IFX.XETRA'}, {nombre: 'K+S',ticker: 'SDF.XETRA'},\n        {nombre: 'Kion Group',ticker: 'KGX.XETRA'}, {nombre: 'Lanxess',ticker: 'LXS.XETRA'}, {nombre: 'Linde',ticker: 'LIN.XETRA'},\n        {nombre: 'Lufthansa',ticker: 'LHA.XETRA'}, {nombre: 'Merck',ticker: 'MRK.XETRA'}, \n        {nombre: 'Mtu Aero Engines',ticker: 'MTX.XETRA'}, {nombre: 'Muench Rueckvers',ticker: 'MUV2.XETRA'},\n        {nombre: 'Osram Licht',ticker: 'OSR.XETRA'}, {nombre: 'Porsche',ticker: 'PAH3.XETRA'}, \n        {nombre: 'Prosiebensat',ticker: 'PSM.XETRA'}, {nombre: 'Rwe',ticker: 'RWE.XETRA'},\n        {nombre: 'Sap',ticker: 'SAP.XETRA'}, {nombre: 'Siemens',ticker: 'SIE.XETRA'},\n        {nombre: 'Siltronic',ticker: 'WAF.XETRA'},{nombre: 'Stabilus',ticker: 'STM.XETRA'}, {nombre: 'Symrise',ticker: 'SY1.XETRA'},\n        {nombre: 'ThyssenKrupp',ticker: 'TKA.XETRA'}, {nombre: 'Uniper Sena',ticker: 'UN01.XETRA'},\n        {nombre: 'Utd. Internet',ticker: 'UTDI.XETRA'}, {nombre: 'Volkswagen',ticker: 'VOW.XETRA'}, \n        {nombre: 'Vonovia',ticker: 'VNA.XETRA'}, {nombre: 'Wirecard',ticker: 'WDI.XETRA'}\n    ]\n\n    constructor(private _servicio1 : Servicio1, private _favoritoService : ApiServicio, private _route : ActivatedRoute, private _router : Router\n    // método: this._servicio1.agregarAApi(this.favorito);\n    ) {\n        this.titulo = 'Top Alemania';\n    }\n\n    ngOnInit() {\n        this\n        ._favoritoService\n        .deletePais('alemania')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        },);;\n        console.log('API de Alemania borrada');\n\n        // Recopilamos datos anual, semestral y mensual\n        for (let stock of this.mercadoAcciones) { \n            this\n                .sleep(10000)\n                .then(() => {\n                    this.valor(stock.ticker);\n                });\n            this\n                .sleep(40000)\n                .then(() => {\n                    this.mensual(stock.ticker);\n                });\n            this\n                .sleep(60000)\n                .then(() => {\n                    this.semestral(stock.ticker);\n                });\n            this\n                .sleep(80000)\n                .then(() => {\n                    this.anual(stock.ticker);\n                });\n\n            this\n                .sleep(100000)\n                .then(() => {\n                    console.log(stock);\n                    this\n                        ._favoritoService\n                        .addPais(stock, 'alemania')\n                        .subscribe(response => {\n                            if (!response) {\n                                console.log('error al recibir confirmacion de guardado');\n                            } else {\n                                console.log('Información de Alemania agregada a base de datos');\n                            }\n                        }, error => {\n                            console.log('Error al guardar datos')\n                        });\n                });\n        }\n        console.log(this.mercadoAcciones);\n    }\n\n    sleep(time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n            this.reverse = !this.reverse;\n        }\n        this.order = value;\n    }\n\n    // Miramos el Anual\n    anual(tickerRecibido) {\n        let resultado;\n        let total;\n        this\n            ._servicio1\n            .getAnual(tickerRecibido)\n            .subscribe(result => {\n                if (!result) {\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                    let hoy = parseFloat(result[0].adjusted_close);\n                    let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if (hoy > ayer) {\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this\n                            .mercadoAcciones\n                            .find((p) => {\n                                return p.ticker === tickerRecibido;\n                            });\n                        datoAnual.anual = anual;\n                        datoAnual.anualD = 'sube';\n                        if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }\n\n                    } else if (hoy < ayer) {\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this\n                            .mercadoAcciones\n                            .find((p) => {\n                                return p.ticker === tickerRecibido;\n                            });\n                        datoAnual.anual = anual;\n                        datoAnual.anualD = 'baja';\n\n                    } else if (hoy == ayer) {\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this\n                            .mercadoAcciones\n                            .find((p) => {\n                                return p.ticker === tickerRecibido;\n                            });\n                        datoAnual.anual = anual;\n                        datoAnual.anualD = 'sube';\n                    }\n                }\n            },);\n    }\n\n    // Miramos el Semestral\n    semestral(tickerRecibido) { //base,mercado\n        let resultado;\n        let total;\n        this\n            ._servicio1\n            .getSemestral(tickerRecibido)\n            .subscribe(result => {\n                if (!result) {\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                    let hoy = parseFloat(result[0].adjusted_close);\n                    let ayer = parseFloat(result[result.length - 1].adjusted_close);\n\n                    if (hoy > ayer) {\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this\n                            .mercadoAcciones\n                            .find((p) => {\n                                return p.ticker === tickerRecibido;\n                            });\n                        datoAnual.semestral = anual;\n                        datoAnual.semestralD = 'sube';\n\n                    } else if (hoy < ayer) {\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this\n                            .mercadoAcciones\n                            .find((p) => {\n                                return p.ticker === tickerRecibido;\n                            });\n                        datoAnual.semestral = anual;\n                        datoAnual.semestralD = 'baja';\n\n                    } else if (hoy == ayer) {\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this\n                            .mercadoAcciones\n                            .find((p) => {\n                                return p.ticker === tickerRecibido;\n                            });\n                        datoAnual.semestral = anual;\n                        datoAnual.semestralD = 'sube';\n                    }\n                }\n            },);\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido) { //base,mercado\n        let resultado;\n        let total;\n        this\n            ._servicio1\n            .getMensual(tickerRecibido)\n            .subscribe(result => {\n                if (!result) {\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                    let hoy = parseFloat(result[0].adjusted_close);\n                    let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if (hoy > 2 && ayer > 2) {\n                        if (hoy > ayer) {\n                            let cuentaResultado = hoy - ayer;\n                            let comparacion = cuentaResultado / ayer;\n                            total = comparacion * 100;\n                            resultado = parseInt(total);\n                            let anual = resultado;\n\n                            let datoAnual = this\n                                .mercadoAcciones\n                                .find((p) => {\n                                    return p.ticker === tickerRecibido;\n                                });\n                            datoAnual.mensual = anual;\n                            datoAnual.mensualD = 'sube';\n\n                        } else if (hoy < ayer) {\n                            let cuentaResultado = ayer - hoy;\n                            let comparacion = cuentaResultado / ayer;\n                            total = comparacion * 100;\n                            resultado = -(parseInt(total));\n                            let anual = resultado;\n\n                            let datoAnual = this\n                                .mercadoAcciones\n                                .find((p) => {\n                                    return p.ticker === tickerRecibido;\n                                });\n                            datoAnual.mensual = anual;\n                            datoAnual.mensualD = 'baja';\n\n                        } else if (hoy == ayer) {\n                            resultado = 0;\n                            let anual = resultado;\n\n                            let datoAnual = this\n                                .mercadoAcciones\n                                .find((p) => {\n                                    return p.ticker === tickerRecibido;\n                                });\n                            datoAnual.mensual = anual;\n                            datoAnual.mensualD = 'sube';\n                        }\n                    }\n                }\n            },);\n    }\n    /* Valor anterior con la eliminación de lo que hay en el array valor(ticker) {\n        this\n            ._servicio1\n            .seleccionarMas3(ticker)\n            .subscribe(result => {\n                if (!result) {\n                    alert('No obtenemos resultados de acciones')\n                } else {\n                    let hoy = parseFloat(result.close);\n\n                    if (hoy < 3) {\n                        for (let i = this.mercadoAcciones.length - 1; i >= 0; i--) {\n                            if (ticker === this.mercadoAcciones[i].ticker) {\n                                this\n                                    .mercadoAcciones\n                                    .splice(i, 1); //this is the part where I 'delete' the object\n                            }\n                        }\n                    } else {\n                        let datoAnual = this\n                            .mercadoAcciones\n                            .find((p) => {\n                                return p.ticker === ticker;\n                            });\n                        datoAnual.valor = hoy;\n                    }\n                    //if(hoy > 3){}\n                }\n            },);\n    } */\n\n    /*\n    valor(ticker) {\n        this\n            ._servicio1\n            .seleccionarMas3(ticker)\n            .subscribe(result => {\n                if (!result) {\n                    alert('No obtenemos resultados de acciones')\n                } else {\n                    let hoy = parseFloat(result.close);\n\n                    if (hoy < 3) {\n                        for (let i = this.mercadoAcciones.length - 1; i >= 0; i--) {\n                            if (ticker === this.mercadoAcciones[i].ticker) {\n                                this\n                                    .mercadoAcciones\n                                    .splice(i, 1); //this is the part where I 'delete' the object\n                            }\n                        }\n                    } else if (hoy > 3) {\n                        let datoAnual = this\n                            .mercadoAcciones\n                            .find((p) => {\n                                return p.ticker === ticker;\n                            });\n                        datoAnual.valor = hoy;\n                    }\n                    //if(hoy > 3){}\n                }\n            },);\n    }\n\n    // Aquí creamos el array de objetos final que luego leemos en el html\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n} */\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/alemania.ts","import {Component, OnInit} from '@angular/core';\nimport {ApiServicio} from '../servicios/api';\n// Importamos servicio y modelo\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\nimport { Pipi} from '../servicios/pipe';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n    selector: 'etiqueta-api',\n    templateUrl: '../vistas/api.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [ApiServicio, Servicio1, Pipi],\n})\n\nexport class Api implements OnInit {\n    reverse : boolean = true;\n    order : String = 'col6';\n    public title: string;\n    //public acciones:any[] = [];\n    public acciones: Modelo1[];\n    public alemania: Modelo1[];\n    public australia: Modelo1[];\n    public austria: Modelo1[];\n    public belgica: Modelo1[];\n    public japon: Modelo1[];\n    public crypto: Modelo1[];\n    public brasil: Modelo1[];\n    public canada: Modelo1[];\n    public china: Modelo1[];\n    public dinamarca: Modelo1[];\n    public eeuu: Modelo1[];\n    public espana: Modelo1[];\n    public francia: Modelo1[];\n    public holanda: Modelo1[];\n    public india: Modelo1[];\n    public mexico: Modelo1[];\n    public noruega: Modelo1[];\n    public portugal: Modelo1[];\n    public rusia: Modelo1[];\n    public suecia: Modelo1[];\n    public suiza: Modelo1[];\n    public uk: Modelo1[];\n\n    \n    public italia: Modelo1[];\n    public topmundo: Modelo1[];\n    public errorMessage;\n\n    constructor(private _servicio1: Servicio1, private _apiServicio: ApiServicio){\n        this.title='Listado de lo que hay en nuestro API';\n    }\n\n    ngOnInit(){\n        // ----------------- ALEMANIA ---------------------\n        this._apiServicio.getPais('crypto').subscribe(\n            result => {\n                console.log(result);\n                this.crypto = result.acciones;\n                console.log('Crypto: ');\n                console.log(this.crypto);\n                if(!this.crypto){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- ALEMANIA ---------------------\n        this._apiServicio.getPais('alemania').subscribe(\n            result => {\n                console.log(result);\n                this.alemania = result.acciones;\n                console.log('Alemania: ');\n                console.log(this.alemania);\n                if(!this.alemania){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- JAPON ---------------------\n        this._apiServicio.getPais('japon').subscribe(\n            result => {\n                console.log(result);\n                this.japon = result.acciones;\n                console.log('Japon: ');\n                console.log(this.japon);\n                if(!this.japon){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- AUSTRALIA ---------------------\n        this._apiServicio.getPais('australia').subscribe(\n            result => {\n                console.log(result);\n                this.australia = result.acciones;\n                console.log('Australia: ');\n                console.log(this.australia);\n                if(!this.australia){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- AUSTRIA ---------------------\n        this._apiServicio.getPais('austria').subscribe(\n            result => {\n                console.log(result);\n                this.austria = result.acciones;\n                console.log('Austria: ');\n                console.log(this.austria);\n                if(!this.austria){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- BÉLGICA ---------------------\n        this._apiServicio.getPais('belgica').subscribe(\n            result => {\n                console.log(result);\n                this.belgica = result.acciones;\n                console.log('belgica: ');\n                console.log(this.belgica);\n                if(!this.belgica){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- BRASIL ---------------------\n        this._apiServicio.getPais('brasil').subscribe(\n            result => {\n                console.log(result);\n                this.brasil = result.acciones;\n                console.log('brasil: ');\n                console.log(this.brasil);\n                if(!this.brasil){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- CANADÁ ---------------------\n        this._apiServicio.getPais('canada').subscribe(\n            result => {\n                console.log(result);\n                this.canada = result.acciones;\n                console.log('canada: ');\n                console.log(this.canada);\n                if(!this.canada){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- CHINA ---------------------\n        this._apiServicio.getPais('china').subscribe(\n            result => {\n                console.log(result);\n                this.china = result.acciones;\n                console.log('china: ');\n                console.log(this.china);\n                if(!this.china){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- DINAMARCA ---------------------\n        this._apiServicio.getPais('dinamarca').subscribe(\n            result => {\n                console.log(result);\n                this.dinamarca = result.acciones;\n                console.log('dinamarca: ');\n                console.log(this.dinamarca);\n                if(!this.dinamarca){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- EEUU ---------------------\n        this._apiServicio.getPais('eeuu').subscribe(\n            result => {\n                console.log(result);\n                this.eeuu = result.acciones;\n                console.log('eeuu: ');\n                console.log(this.eeuu);\n                if(!this.eeuu){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- ESPAÑA ---------------------\n        this._apiServicio.getPais('espana').subscribe(\n            result => {\n                console.log(result);\n                this.espana = result.acciones;\n                console.log('España: ');\n                console.log(this.espana);\n                if(!this.espana){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- FRANCIA ---------------------\n        this._apiServicio.getPais('francia').subscribe(\n            result => {\n                console.log(result);\n                this.francia = result.acciones;\n                console.log('francia: ');\n                console.log(this.francia);\n                if(!this.francia){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- HOLANDA ---------------------\n        this._apiServicio.getPais('holanda').subscribe(\n            result => {\n                console.log(result);\n                this.holanda = result.acciones;\n                console.log('holanda: ');\n                console.log(this.holanda);\n                if(!this.holanda){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- INDIA ---------------------\n        this._apiServicio.getPais('india').subscribe(\n            result => {\n                console.log(result);\n                this.india = result.acciones;\n                console.log('india: ');\n                console.log(this.india);\n                if(!this.india){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n    \n        // ----------------- ITALIA ---------------------\n        this._apiServicio.getPais('italia').subscribe(\n            result => {\n                console.log(result);\n                this.italia = result.acciones;\n                console.log('Italia: ');\n                console.log(this.italia);\n                if(!this.italia){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- MEXICO ---------------------\n        this._apiServicio.getPais('mexico').subscribe(\n            result => {\n                console.log(result);\n                this.mexico = result.acciones;\n                console.log('mexico: ');\n                console.log(this.mexico);\n                if(!this.mexico){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- NORUEGA ---------------------\n        this._apiServicio.getPais('noruega').subscribe(\n            result => {\n                console.log(result);\n                this.noruega = result.acciones;\n                console.log('noruega: ');\n                console.log(this.noruega);\n                if(!this.noruega){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- PORTUGAL ---------------------\n        this._apiServicio.getPais('portugal').subscribe(\n            result => {\n                console.log(result);\n                this.portugal = result.acciones;\n                console.log('portugal: ');\n                console.log(this.portugal);\n                if(!this.portugal){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- RUSIA ---------------------\n        this._apiServicio.getPais('rusia').subscribe(\n            result => {\n                console.log(result);\n                this.rusia = result.acciones;\n                console.log('rusia: ');\n                console.log(this.rusia);\n                if(!this.rusia){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- SUECIA ---------------------\n        this._apiServicio.getPais('suecia').subscribe(\n            result => {\n                console.log(result);\n                this.suecia = result.acciones;\n                console.log('suecia: ');\n                console.log(this.suecia);\n                if(!this.suecia){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- SUIZA ---------------------\n        this._apiServicio.getPais('suiza').subscribe(\n            result => {\n                console.log(result);\n                this.suiza = result.acciones;\n                console.log('suiza: ');\n                console.log(this.suiza);\n                if(!this.suiza){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- UK ---------------------\n        this._apiServicio.getPais('uk').subscribe(\n            result => {\n                console.log(result);\n                this.uk = result.acciones;\n                console.log('uk: ');\n                console.log(this.uk);\n                if(!this.uk){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n        // ----------------- TOPMUNDO ---------------------\n        this._apiServicio.getPais('topmundo').subscribe(\n            result => {\n                console.log(result);\n                this.topmundo = result.acciones;\n                console.log('Top Mundo: ');\n                console.log(this.topmundo);\n                if(!this.topmundo){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n\n        this._apiServicio.getAcciones().subscribe(\n            result => {\n                console.log(result);\n                this.acciones = result.acciones;\n                console.log(this.acciones);\n                if(!this.acciones){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log(this.errorMessage);\n                    alert('Error en la petición');\n                }\n            }\n        );\n        console.log('topmundo '+this.topmundo);\n    }\n\n    borrarPais(pais){\n        this._apiServicio.deletePais(pais).subscribe(\n            result => {\n                console.log(result);\n                if(!result){\n                    alert('Error al borrar');\n                } else{\n                    alert('Borrado TopMundo');\n                }\n            },\n        );\n}\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,3).join(' ');\n          return nombreBien;\n      }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/api.ts","import {Component, OnInit} from '@angular/core';\nimport {ApiServicio} from '../servicios/api';\n// Importamos servicio y modelo\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\nimport { Pipi} from '../servicios/pipe';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n    selector: 'etiqueta-api2023',\n    templateUrl: '../vistas/api2023.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [ApiServicio, Servicio1, Pipi],\n})\n\nexport class api2023 implements OnInit {\n    num1: number;\n    num2: number;\n    num3: number;\n    resultado: string;\n    url: string;\n    reverse : boolean = true;\n    order : String = 'col8';\n    public title: string;\n    //public acciones:any[] = [];\n    public acciones: Modelo1[];\n    public topmundo: Modelo1[];\n    public errorMessage;\n\n    constructor(private _servicio1: Servicio1, private _apiServicio: ApiServicio){\n        this.title='Listado de lo que hay en nuestro API';\n    }\n\n    ngOnInit(){\n        // ----------------- TOPMUNDO ---------------------\n        this._apiServicio.getPais('topmundo').subscribe(\n            result => {\n                console.log(result);\n                this.topmundo = result.acciones;\n                console.log('Top Mundo: ');\n                console.log(this.topmundo);\n                if(!this.topmundo){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n\n        this._apiServicio.getAcciones().subscribe(\n            result => {\n                console.log(result);\n                this.acciones = result.acciones;\n                console.log(this.acciones);\n                if(!this.acciones){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMessage = <any>error;\n                if(this.errorMessage != null){\n                    console.log(this.errorMessage);\n                    alert('Error en la petición');\n                }\n            }\n        );\n        console.log('topmundo '+this.topmundo);\n    }\n\n    borrarPais(pais){\n        this._apiServicio.deletePais(pais).subscribe(\n            result => {\n                console.log(result);\n                if(!result){\n                    alert('Error al borrar');\n                } else{\n                    alert('Borrado TopMundo');\n                }\n            },\n        );\n}\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      sumarUnoAlUltimoNumero(num: number): number {\n        const numStr = num.toString();  // Convertir el número en una cadena de caracteres\n        const ultimoChar = numStr.charAt(numStr.length - 1);  // Obtener el último carácter\n        const ultimoNumero = parseInt(ultimoChar, 10);  // Convertir el último carácter en un número entero\n        if (isNaN(ultimoNumero)) {  // Si el último carácter no es un número (p. ej., si es un punto decimal), devolver el número original sin cambios\n          return num;\n        }\n        const restoNumStr = numStr.slice(0, numStr.length - 1);  // Obtener la cadena de caracteres que representa el número sin el último carácter\n        const nuevoUltimoNumero = ultimoNumero + 1;  // Sumar 1 al último número\n        const nuevoNumStr = restoNumStr + nuevoUltimoNumero.toString();  // Unir la cadena de caracteres que representa el número sin el último carácter con el nuevo último número\n        const nuevoNum = parseFloat(nuevoNumStr);  // Convertir la cadena de caracteres en un número de punto flotante\n        return nuevoNum;\n      }\n      \n      float2int (value) {\n        return value | 0;\n    }\n\n      calcular() {\n        let maximo = this.replaceCommaWithDot(this.num1);\n        let minimo = this.replaceCommaWithDot(this.num2);\n      \n        let precioFinal = this.sumarUnoAlUltimoNumero(maximo);\n        let stopLoss = (minimo * 0.97);\n        let numAcciones = this.float2int(this.num3/(maximo-stopLoss));\n        let pasta = this.float2int((numAcciones * precioFinal));\n      \n        this.resultado = `\n        Compra ${numAcciones} ACCIONES cuando el precio sea ${precioFinal.toFixed(3)} €/$.\n         STOPLOSS en ${stopLoss.toFixed(3)} €/$.\n          VALOR TOTAL de la operación: ${pasta} €/$.\n        `;\n      }\n\n        replaceCommaWithDot(num: number): number {\n        const numStr = num.toString();\n        if (numStr.indexOf(',') !== -1) {\n          num = parseFloat(numStr.replace(',', '.'));\n          return num;\n        } else {\n            num = parseFloat(numStr);\n            return num;  \n        }\n      }\n\n      bandera(texto: string): string {\n        if (texto.includes(\".MC\")) {\n            return \"https://www.banderas-mundo.es/data/flags/h80/es.png\";\n        } else if(texto.includes(\".US\")) {\n            return \"https://www.banderas-mundo.es/data/flags/h80/us.png\";\n        } else if(texto.includes(\".PA\")) {\n            return \"https://www.banderas-mundo.es/data/flags/h80/fr.png\";\n        } else if(texto.includes(\".MI\")) {\n            return \"https://www.banderas-mundo.es/data/flags/h80/it.png\";\n        } else if(texto.includes(\".AU\")) {\n            return \"https://www.banderas-mundo.es/data/flags/h80/au.png\";\n        } else if(texto.includes(\".XETRA\")) {\n            return \"https://www.banderas-mundo.es/data/flags/h80/de.png\";\n         } else if(texto.includes(\".UK\")) {\n            return \"https://www.banderas-mundo.es/data/flags/h80/gb.png\";\n         } else if(texto.includes(\".IR\")) {\n            return \"https://www.banderas-mundo.es/data/flags/h80/ie.png\";}\n\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,3).join(' ');\n          return nombreBien;\n      }\n\n      \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/api2023.ts","import {Component, OnInit} from '@angular/core';\nimport {ApiServicio} from '../servicios/api';\n// Importamos servicio y modelo\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\nimport { Pipi} from '../servicios/pipe';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n    selector: 'etiqueta-apiRobot',\n    templateUrl: '../vistas/apiRobot.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [ApiServicio, Servicio1, Pipi],\n})\n\nexport class ApiRobot implements OnInit {\n\n    public contamoss: number;\n    public contamosHoy: number;\n    public title: string;\n    public contadorTopmundo : number;\n    public arrayAustralia : any[] = [];\n    public contadorAustralia : number;\n    public arrayCrypto : any[] = [];\n    public contadorCrypto : number; \n    public arrayEspana : any[] = [];\n    public contadorEspana : number;\n    public arrayFrancia : any[] = [];\n    public contadorFrancia : number;\n    public arrayJapon : any[] = [];\n    public contadorJapon : number;\n    public arrayAlemania : any[] = [];\n    public contadorAlemania : number;\n    public arrayDinamarca : any[] = [];\n    public contadorDinamarca : number;\n    public arrayAustria : any[] = [];\n    public contadorAustria : number;\n    public arrayBelgica : any[] = [];\n    public contadorBelgica : number;\n    public arraySuecia : any[] = [];\n    public contadorSuecia : number;\n    public arraySuiza : any[] = [];\n    public contadorSuiza : number;  \n    public arrayUk : any[] = [];\n    public contadorUk : number;\n    public arrayMexico : any[] = [];\n    public contadorMexico : number;\n    public arrayPortugal : any[] = [];\n    public contadorPortugal : number;\n    public arrayHolanda : any[] = [];\n    public contadorHolanda : number;\n    public arrayItalia : any[] = [];\n    public contadorItalia : number;\n    public arrayNoruega : any[] = [];\n    public contadorNoruega : number;\n    public arrayRusia : any[] = [];\n    public contadorRusia : number;\n    public arrayBrasil : any[] = [];\n    public contadorBrasil : number;\n    public arrayCanada : any[] = [];\n    public contadorCanada : number;\n    public arrayChina : any[] = [];\n    public contadorChina : number;\n    public arrayIndia : any[] = [];\n    public contadorIndia : number;\n    public arrayEEUU : any[] = [];\n    public contadorEEUU : number;\n\n\n    //public acciones:any[] = [];\n    public modelos: Modelo1[];\n    public errorMen;\n\n    /*public acciones: Modelo1[];\n    public alemania: Modelo1[];\n    public austria: Modelo1[];\n    public belgica: Modelo1[];\n    public brasil: Modelo1[];\n    public canada: Modelo1[];\n    public china: Modelo1[];\n    public dinamarca: Modelo1[];\n    public eeuu: Modelo1[];\n    public francia: Modelo1[];\n    public holanda: Modelo1[];\n    public india: Modelo1[];\n    public mexico: Modelo1[];\n    public noruega: Modelo1[];\n    public portugal: Modelo1[];\n    public rusia: Modelo1[];\n    public suecia: Modelo1[];\n    public suiza: Modelo1[];\n    public uk: Modelo1[];    \n    public italia: Modelo1[];\n    public topmundo: Modelo1[];*/\n\n    public mercadoAcciones : any[] = [ // referencias prorealtime y sp500 2/01/2018\n\n        {icono: 'star-outline', nombre: 'Celsius Holding', ticker: 'CELH.US'},{icono: 'star-outline', nombre: 'Weatherford International', ticker: 'WFRD.US'},\n        // Primero las que sacamos de Barchart\n        {icono: 'star-outline', nombre: 'Ranger Oil Corp', ticker: 'ROCC.US'}, {icono: 'star-outline', nombre: 'Destination XL Group', ticker: 'DXLG.US'},\n        {icono: 'star-outline', nombre: 'Kura Sushi USA Inc Cl A', ticker: 'KRUS.US'},{icono: 'star-outline', nombre: 'Lantheus Holdings', ticker: 'LNTH.US'},\n        {icono: 'star-outline', nombre: 'Obsidian Energy Ltd', ticker: 'OBE.US'},{icono: 'star-outline', nombre: 'Merrimack Pharmaceuticals Inc', ticker: 'MACK.US'},\n        {icono: 'star-outline', nombre: 'CVD Equipment Corp', ticker: 'CVV.US'},{icono: 'star-outline', nombre: 'Impinj Inc', ticker: 'PI.US'},\n        {icono: 'star-outline', nombre: 'Cvr Partners LP', ticker: 'UAN.US'},{icono: 'star-outline', nombre: 'Nextier Oilfield Solutions Inc', ticker: 'NEX.US'},\n        {icono: 'star-outline', nombre: 'Targa Resources', ticker: 'TRGP.US'},{icono: 'star-outline', nombre: 'Murphy Oil Corp', ticker: 'MUR.US'},\n        {icono: 'star-outline', nombre: 'Hallador Energy Company', ticker: 'HNRG.US'},{icono: 'star-outline', nombre: 'Enerplus Corp', ticker: 'ERF.US'},\n        {icono: 'star-outline', nombre: 'Kosmos Energy Ltd', ticker: 'KOS.US'},{icono: 'star-outline', nombre: 'Atkore Inc', ticker: 'ATKR.US'},\n        {icono: 'star-outline', nombre: 'Climb Global Solutions Inc', ticker: 'CLMB.US'},{icono: 'star-outline', nombre: 'Prothena Corp', ticker: 'PRTA.US'},\n        {icono: 'star-outline', nombre: 'Amplify Energy Corp', ticker: 'AMPY.US'},{icono: 'star-outline', nombre: 'L.S. Starrett Company', ticker: 'SCX.US'},\n        {icono: 'star-outline', nombre: 'Builders Firstsource', ticker: 'BLDR.US'},{icono: 'star-outline', nombre: 'Ryerson Holding Corp', ticker: 'RYI.US'},\n        {icono: 'star-outline', nombre: 'Wesco International', ticker: 'WCC.US'},{icono: 'star-outline', nombre: 'Euroseas Ltd', ticker: 'ESEA.US'},\n        {icono: 'star-outline', nombre: 'R C M Tech Inc', ticker: 'RCMT.US'},{icono: 'star-outline', nombre: 'Civitas Resources Inc', ticker: 'CIVI.US'},\n        {icono: 'star-outline', nombre: 'Calumet Specialty Pr', ticker: 'CLMT.US'},{icono: 'star-outline', nombre: 'Axcelis Tech Inc', ticker: 'ACLS.US'},\n        {icono: 'star-outline', nombre: 'Marathon Digital Hldgs Inc', ticker: 'MARA.US'},{icono: 'star-outline', nombre: 'Dicks Sporting Goods Inc', ticker: 'DKS.US'},\n        {icono: 'star-outline', nombre: 'Atlas Lithium Corp', ticker: 'ATLX.US'},{icono: 'star-outline', nombre: 'Perion Network Ltd', ticker: 'PERI.US'},\n        {icono: 'star-outline', nombre: 'CPI Card Group', ticker: 'PMTS.US'},{icono: 'star-outline', nombre: 'Extreme Networks', ticker: 'EXTR.US'},\n        {icono: 'star-outline', nombre: 'Lattice Semicond', ticker: 'LSCC.US'},{icono: 'star-outline', nombre: 'Peabody Energy Corp', ticker: 'BTU.US'},\n        {icono: 'star-outline', nombre: 'Build-A-Bear Workshop', ticker: 'BBW.US'},{icono: 'star-outline', nombre: '374Water Inc', ticker: 'SCWO.US'},\n        {icono: 'star-outline', nombre: 'Tidewater Inc', ticker: 'TDW.US'},{icono: 'star-outline', nombre: 'Teekay Tankers Ltd', ticker: 'TNK.US'},\n        {icono: 'star-outline', nombre: 'Intest Corp', ticker: 'INTT.US'},{icono: 'star-outline', nombre: 'Olympic Steel Inc', ticker: 'ZEUS.US'},\n        {icono: 'star-outline', nombre: 'Hovnanian Enterprises Inc', ticker: 'HOV.US'},{icono: 'star-outline', nombre: 'Iveric Bio Inc', ticker: 'ISEE.US'},\n        {icono: 'star-outline', nombre: 'Allegro Microsystems Inc', ticker: 'ALGM.US'},{icono: 'star-outline', nombre: 'Moonlake Immunotherapeutics', ticker: 'MLTX.US'},\n        {icono: 'star-outline', nombre: 'Birks Group Inc', ticker: 'BGI.US'},{icono: 'star-outline', nombre: 'Aehr Test Systems', ticker: 'AEHR.US'},\n        {icono: 'star-outline', nombre: 'Travelcenters of America Llc', ticker: 'TA.US'},{icono: 'star-outline', nombre: 'Precision Drilling Corp', ticker: 'PDS.US'},\n        {icono: 'star-outline', nombre: 'Verona Pharma Plc ADR', ticker: 'VRNA.US'},{icono: 'star-outline', nombre: 'Matador Resources Company', ticker: 'MTDR.US'},\n        {icono: 'star-outline', nombre: 'Dillard', ticker: 'DDS.US'},{icono: 'star-outline', nombre: 'Frontline Plc', ticker: 'FRO.US'},\n        {icono: 'star-outline', nombre: 'Transmedics Group Inc', ticker: 'TMDX.US'},{icono: 'star-outline', nombre: 'Silverbow Resources Inc', ticker: 'SBOW.US'},\n        {icono: 'star-outline', nombre: 'Lsb Industries Inc', ticker: 'LXU.US'},{icono: 'star-outline', nombre: 'Innodata Inc', ticker: 'INOD.US'},\n        {icono: 'star-outline', nombre: 'Richardson Electrncs', ticker: 'RELL.US'},{icono: 'star-outline', nombre: 'Lightwave Logic Inc', ticker: 'LWLG.US'},\n        {icono: 'star-outline', nombre: 'Vertex Energy', ticker: 'VTNR.US'},{icono: 'star-outline', nombre: 'Tecnoglass Inc', ticker: 'TGLS.US'},\n        {icono: 'star-outline', nombre: 'Permian Basin Royalty Trust', ticker: 'PBT.US'},{icono: 'star-outline', nombre: 'Veritiv Corp', ticker: 'VRTV.US'},\n        {icono: 'star-outline', nombre: 'Nine Energy Service Inc', ticker: 'NINE.US'},{icono: 'star-outline', nombre: 'MYR Group Inc', ticker: 'MYRG.US'},\n        {icono: 'star-outline', nombre: 'Permian Resources Corp', ticker: 'PR.US'},{icono: 'star-outline', nombre: 'Cenovus Energy Inc', ticker: 'CVE.US'},\n        {icono: 'star-outline', nombre: 'Hudson Tech Inc', ticker: 'HDSN.US'},{icono: 'star-outline', nombre: 'Antero Resources Corp', ticker: 'AR.US'},\n        {icono: 'star-outline', nombre: 'Borr Drilling Ltd', ticker: 'BORR.US'},{icono: 'star-outline', nombre: 'San Juan Basin Royalty Trust', ticker: 'SJT.US'},\n        {icono: 'ios-star-oustline', nombre: 'Enlink Midstream Llc', ticker: 'ENLC.US'},{icono: 'star-outline', nombre: 'Natural Resource Partners LP', ticker: 'NRP.US'},\n        {icono: 'star-outline', nombre: 'J. Jill Inc', ticker: 'JILL.US'},{icono: 'star-outline', nombre: 'Sandridge Energy Inc', ticker: 'SD.US'},\n        {icono: 'star-outline', nombre: 'Sandridge Energy Inc', ticker: 'SD.US'},\n        {icono: 'star-outline', nombre: 'Cadre Holdings', ticker: 'CDRE.US'},{icono: 'star-outline', nombre: 'Sterling Infrastructure', ticker: 'STRL.US'},\n        {icono: 'star-outline', nombre: 'Super Micro', ticker: 'SMCI.US'},{icono: 'star-outline', nombre: 'UFP Technologies', ticker: 'UFPT.US'},\n\n        // las que metemos del parseo\n        {icono: 'star-outline',nombre: 'Modine Manufacturing',ticker: 'MOD.US'},\n\n        // Ahora las demas\n        {icono: 'star-outline',nombre: 'Alteryx',ticker: 'AYX.US'},\n        {icono: 'star-outline',nombre: '3m Company',ticker: 'MMM.US'},\n        {icono: 'star-outline',nombre: 'Abiomed Inc.',ticker: 'ABMD.US'},\n        {icono: 'star-outline',nombre: 'Liberty Tripadv',ticker: 'LTRPA.US'},\n        {icono: 'star-outline',nombre: '51Job',ticker: 'JOBS.US'},\n        {icono: 'star-outline',nombre: 'Acorn International',ticker: 'ATV.US'},\n        {icono: 'star-outline',nombre: 'Abbott Laboratories',ticker: 'ABT.US'},\n        {icono: 'star-outline',nombre: 'ABBVIE',ticker: 'ABBV.US'},\n        {icono: 'star-outline',nombre: 'Accenture PLC',ticker: 'ACN.US'},\n        {icono: 'star-outline',nombre: 'Activision Blizzard',ticker: 'ATVI.US'},\n         {icono: 'star-outline',nombre: 'Adobe Systems',ticker: 'ADBE.US'},\n        {icono: 'star-outline',nombre: 'Advanced Micro Devices',ticker: 'AMD.US'},\n         {icono: 'star-outline',nombre: 'AES Corp.',ticker: 'AES.US'},\n          {icono: 'star-outline',nombre: 'Aetna',ticker: 'AET.US'},\n        {icono: 'star-outline',nombre: 'Affiliated Managers Group',ticker: 'AMG.US'},\n        {icono: 'star-outline',nombre: 'AFLAC',ticker: 'AFL.US'},\n{icono: 'star-outline',nombre: 'Agnc Investment',ticker: 'AGNC.US'},\n         {icono: 'star-outline',nombre: 'Agilent Technologies',ticker: 'A.US'},\n        {icono: 'star-outline',nombre: 'Akamai Technologies',ticker: 'AKAM.US'},\n         {icono: 'star-outline',nombre: 'Air Products & Chemicals',ticker: 'APD.US'},\n        {icono: 'star-outline',nombre: 'Alcoa',ticker: 'AA.US'},\n        {icono: 'star-outline',nombre: 'Alexion Pharmaceuticals',ticker: 'ALXN.US'},\n        {icono: 'star-outline',nombre: 'Alibaba Group Holding',ticker: 'BABA.US'},\n         {icono: 'star-outline',nombre: 'Allergan PLC',ticker: 'AGN.US'},\n        {icono: 'star-outline',nombre: 'Align Technology',ticker: 'ALGN.US'},\n         {icono: 'star-outline',nombre: 'Alnylam Pharmaceuticals',ticker: 'ALNY.US'},\n        {icono: 'star-outline',nombre: 'Allstate Corp.',ticker: 'ALL.US'},\n         {icono: 'star-outline',nombre: 'Allegion',ticker: 'ALLE.US'},\n         {icono: 'star-outline',nombre: 'Allergan',ticker: 'AGN.US'},\n        {icono: 'star-outline',nombre: 'Altria Group',ticker: 'MO.US'},\n         {icono: 'star-outline',nombre: 'Alliance Data Systems',ticker: 'ADS.US'},\n        {icono: 'star-outline',nombre: 'Alliant Energy',ticker: 'LNT.US'},\n         {icono: 'star-outline',nombre: 'Allstate',ticker: 'ALL.US'},\n        {icono: 'star-outline',nombre: 'Alphabet (Google)',ticker: 'GOOGL.US'},\n         {icono: 'star-outline',nombre: 'Advansix',ticker: 'ASIX.US'},\n        {icono: 'star-outline',nombre: 'Altaba',ticker: 'AABA.US'},\n         {icono: 'star-outline',nombre: 'Amazon',ticker: 'AMZN.US'},\n         {icono: 'star-outline',nombre: 'Flex LNG',ticker: 'FLNG.US'},\n          {icono: 'star-outline',nombre: 'Ameren',ticker: 'AEE.US'},\n        {icono: 'star-outline',nombre: 'Ametek',ticker: 'AME.US'},\n         {icono: 'star-outline',nombre: 'Amphenol',ticker: 'APH.US'},\n         {icono: 'star-outline',nombre: 'Cambium Learning',ticker: 'ABCD.US'},\n        {icono: 'star-outline',nombre: 'American Airlines Group',ticker: 'AAL.US'},\n         {icono: 'star-outline',nombre: 'American Water Works Company',ticker: 'AWK.US'},\n        {icono: 'star-outline',nombre: 'American Electric Power',ticker: 'AEP.US'},\n         {icono: 'star-outline',nombre: 'American Express',ticker: 'AXP.US'},\n        {icono: 'star-outline',nombre: 'American International Group',ticker: 'AIG.US'},\n         {icono: 'star-outline',nombre: 'American Tower',ticker: 'AMT.US'},\n        {icono: 'star-outline',nombre: 'Ameriprise Financial',ticker: 'AMP.US'},\n         {icono: 'star-outline',nombre: 'AmerisourceBergen',ticker: 'ABC.US'},\n        {icono: 'star-outline',nombre: 'Amgen',ticker: 'AMGN.US'},\n         {icono: 'star-outline',nombre: 'Analog Devices',ticker: 'ADI.US'},\n        {icono: 'star-outline',nombre: 'Anadarko Petroleum',ticker: 'APC.US'},\n         {icono: 'star-outline',nombre: 'Analog Devices',ticker: 'ADI.US'},\n        {icono: 'star-outline',nombre: 'Andeavor',ticker: 'ANDV.US'},\n         {icono: 'star-outline',nombre: 'Anheuser-BUsch Inbev',ticker: 'BUD.US'},\n        {icono: 'star-outline',nombre: 'Anthem',ticker: 'ANTM.US'},\n         {icono: 'star-outline',nombre: 'ANSYS',ticker: 'ANSS.US'},\n        {icono: 'star-outline',nombre: 'Aon plc',ticker: 'AON.US'},\n         {icono: 'star-outline',nombre: 'Apache Corporation',ticker: 'APA.US'},\n         {icono: 'star-outline',nombre: 'Apple',ticker: 'AAPL.US'},\n        {icono: 'star-outline',nombre: 'Applied Materials',ticker: 'AMAT.US'},\n         {icono: 'star-outline',nombre: 'Arconic',ticker: 'ARNC.US'},\n          {icono: 'star-outline',nombre: 'Assurant',ticker: 'AIZ.US'},\n        {icono: 'star-outline',nombre: 'Arista Networks',ticker: 'ANET.US'},\n         {icono: 'star-outline',nombre: 'AT&T',ticker: 'T.US'},\n        {icono: 'star-outline',nombre: 'Asml Holding N.V.',ticker: 'ASML.US'},\n         {icono: 'star-outline',nombre: 'Autodesk',ticker: 'ADSK.US'},\n        {icono: 'star-outline',nombre: 'Automatic Data Processing',ticker: 'ADP.US'},\n         {icono: 'star-outline',nombre: 'Autozone',ticker: 'AZO.US'},\n        {icono: 'star-outline',nombre: 'Avis Budget Group',ticker: 'CAR.US'},\n         {icono: 'star-outline',nombre: 'AvalonBay Communities',ticker: 'AVB.US'},\n         {icono: 'star-outline',nombre: 'Autohome',ticker: 'ATHM.US'},\n         {icono: 'star-outline',nombre: 'Mazor Robotics',ticker: 'MZOR.US'},\n         {icono: 'star-outline',nombre: 'G1 Therapeutics',ticker: 'GTHX.US'},\n         {icono: 'star-outline',nombre: 'Amag Pharmaceuticals',ticker: 'AMAG.US'},\n         {icono: 'star-outline',nombre: 'Lonestar Resources',ticker: 'LONE.US'},\n         {icono: 'star-outline',nombre: 'Sharpspring',ticker: 'SHSP.US'},\n         {icono: 'star-outline',nombre: 'Ultragenyx Pharmaceu',ticker: 'RARE.US'},\n         {icono: 'star-outline',nombre: 'Alpha Metallurgical',ticker: 'AMR.US'},\n         {icono: 'star-outline',nombre: 'Altium Limited',ticker: 'ALU.US'},\n         {icono: 'star-outline',nombre: 'Ambrx Biopharm',ticker: 'AMAM.US'},\n         {icono: 'star-outline',nombre: 'Asp Isotopes',ticker: 'ASPI.US'},\n        // BBBBBBBBBBBBBBBBBB\n        {icono: 'star-outline',nombre: 'Ball',ticker: 'BLL.US'},\n        {icono: 'star-outline',nombre: 'Baidu',ticker: 'BIDU.US'},\n         {icono: 'star-outline',nombre: 'Baker Hughes',ticker: 'BHGE.US'},\n        {icono: 'star-outline',nombre: 'Bank of America',ticker: 'BAC.US'},\n         {icono: 'star-outline',nombre: 'Bank of New York Mellon',ticker: 'BK.US'},\n        {icono: 'star-outline',nombre: 'Baozun',ticker: 'BZUN.US'},\n        {icono: 'star-outline',nombre: 'Bard',ticker: 'BCR.US'},\n        {icono: 'star-outline',nombre: 'Baxter International',ticker: 'BAX.US'},\n        {icono: 'star-outline',nombre: 'BB&T',ticker: 'BBT.US'},\n        {icono: 'star-outline',nombre: 'Bed Bath & Beyond',ticker: 'BBBY.US'},\n        {icono: 'star-outline',nombre: 'Becton Dickinson',ticker: 'BDX.US'},\n        {icono: 'star-outline',nombre: 'Berkshire Hathaway',ticker: 'BRK.B.US'},\n        {icono: 'star-outline',nombre: 'Best Buy.',ticker: 'BBY.US'},\n        {icono: 'star-outline',nombre: 'Biogen',ticker: 'BIIB.US'},\n        {icono: 'star-outline',nombre: 'Biomarin Pharmaceutical',ticker: 'BMRN.US'},\n        {icono: 'star-outline',nombre: 'Boeing Company',ticker: 'BA.US'},\n        {icono: 'star-outline',nombre: 'Blucora',ticker: 'BCOR.US'},\n        {icono: 'star-outline',nombre: 'Blackrock',ticker: 'BLK.US'},\n        {icono: 'star-outline',nombre: 'Bluebird Bio',ticker: 'BLUE.US'},\n        {icono: 'star-outline',nombre: 'Boston Scientific',ticker: 'BSX.US'},\n        {icono: 'star-outline',nombre: 'BP P.L.C.',ticker: 'BP.US'},\n        {icono: 'star-outline',nombre: 'Bristol-Myers Squibb',ticker: 'BMY.US'},\n        {icono: 'star-outline',nombre: 'Brinks Company',ticker: 'BCO.US'},\n        {icono: 'star-outline',nombre: 'Broadcom LTD.',ticker: 'AVGO.US'},\n        {icono: 'star-outline',nombre: 'Broadsoft',ticker: 'BSFT.US'},\n        {icono: 'star-outline',nombre: 'Buffalo Wild Wings',ticker: 'BWLD.US'},\n        {icono: 'star-outline',nombre: 'BWX Technologies',ticker: 'BWXT.US'},\n        {icono: 'star-outline',nombre: 'Avexis',ticker: 'AVXS.US'},\n        {icono: 'star-outline',nombre: 'Beigene',ticker: 'BGNE.US'},\n        {icono: 'star-outline',nombre: 'Blueprint Medicines',ticker: 'BPMC.US'},\n        {icono: 'star-outline',nombre: 'Caredx',ticker: 'CDNA.US'},\n        {icono: 'star-outline',nombre: 'Chegg Inc.',ticker: 'CHGG.US'},\n        {icono: 'star-outline',nombre: 'Stamps.com',ticker: 'STMP.US'},\n        {icono: 'star-outline',nombre: 'Biontech Se.',ticker: 'BNTX.US'},\n        // CCCCCCCCCCCCCCCCCC\n        {icono: 'star-outline',nombre: 'Comfort Systems',ticker: 'FIX.US'},\n        {icono: 'star-outline',nombre: 'Cabaletta Bio',ticker: 'CABA.US'},\n        {icono: 'star-outline',nombre: 'C.H. Robinson Worldwide',ticker: 'CHRW.US'},\n        {icono: 'star-outline',nombre: 'C.R. Bard',ticker: 'BCR.US'},\n        {icono: 'star-outline',nombre: 'Transglobe Energy',ticker: 'TGA.US'},\n        {icono: 'star-outline',nombre: 'Catalyst Bio',ticker: 'CBIO.US'},\n        {icono: 'star-outline',nombre: 'Cadence Design Systems',ticker: 'CDNS.US'},\n        {icono: 'star-outline',nombre: 'Capital One Financial',ticker: 'COF.US'},\n        {icono: 'star-outline',nombre: 'Caesars Entertainment',ticker: 'CZR.US'},\n        {icono: 'star-outline',nombre: 'Cardinal Health',ticker: 'CAH.US'},\n        {icono: 'star-outline',nombre: 'Carnival',ticker: 'CCL.US'},\n        {icono: 'star-outline',nombre: 'Caterpillar',ticker: 'CAT.US'},\n        {icono: 'star-outline',nombre: 'Cavium',ticker: 'CAVM.US'},\n        {icono: 'star-outline',nombre: 'Htg Molecular Dia',ticker: 'HTGM.US'},\n        {icono: 'star-outline',nombre: 'Cboe Global Markets',ticker: 'CBOE.US'},\n        {icono: 'star-outline',nombre: 'CBS',ticker: 'CBS.US'},\n        {icono: 'star-outline',nombre: 'Karyopharm Therapeut',ticker: 'KPTI.US'},\n        {icono: 'star-outline',nombre: 'CDK Global',ticker: 'CDK.US'},\n        {icono: 'star-outline',nombre: 'Celgene',ticker: 'CELG.US'},\n        {icono: 'star-outline',nombre: 'Centurylink',ticker: 'CTL.US'},\n        {icono: 'star-outline',nombre: 'Charles Schwab',ticker: 'SCHW.US'},\n        {icono: 'star-outline',nombre: 'Cerner',ticker: 'CERN.US'},\n        {icono: 'star-outline',nombre: 'Charter Communications',ticker: 'CHTR.US'},\n        {icono: 'star-outline',nombre: 'Check Point Software Technologies',ticker: 'CHKP.US'},\n        {icono: 'star-outline',nombre: 'Chevron',ticker: 'CVX.US'},\n        {icono: 'star-outline',nombre: 'Chipotle Mexican Grill',ticker: 'CMG.US'},\n        {icono: 'star-outline',nombre: 'China Lodging Group',ticker: 'HTHT.US'},\n        {icono: 'star-outline',nombre: 'Chubb LTD.',ticker: 'CB.US'},\n        {icono: 'star-outline',nombre: 'Verastem',ticker: 'VSTM.US'},\n        {icono: 'star-outline',nombre: 'Cigna',ticker: 'CI.US'},\n        {icono: 'star-outline',nombre: 'Cintas',ticker: 'CTAS.US'},\n        {icono: 'star-outline',nombre: 'Kingtone Wirelessinf',ticker: 'KONE.US'},\n        {icono: 'star-outline',nombre: 'Cisco Systems',ticker: 'CSCO.US'},\n        {icono: 'star-outline',nombre: 'Citigroup',ticker: 'C.US'},\n        {icono: 'star-outline',nombre: 'Citizens Financial Group',ticker: 'CFG.US'},\n        {icono: 'star-outline',nombre: 'Citrix Systems',ticker: 'CTXS.US'},\n        {icono: 'star-outline',nombre: 'Clovis Oncology',ticker: 'CLVS.US'},\n        {icono: 'star-outline',nombre: 'CME Group',ticker: 'CME.US'},\n        {icono: 'star-outline',nombre: 'Coca-Cola',ticker: 'KO.US'},\n        {icono: 'star-outline',nombre: 'Colgate-Palmolive',ticker: 'CL.US'},\n        {icono: 'star-outline',nombre: 'Cognex',ticker: 'CGNX.US'},\n        {icono: 'star-outline',nombre: 'Cognizant Technology Solutions',ticker: 'CTSH.US'},\n        {icono: 'star-outline',nombre: 'Conocophillips',ticker: 'COP.US'},\n        {icono: 'star-outline',nombre: 'Comerica',ticker: 'CMA.US'},\n        {icono: 'star-outline',nombre: 'Conagra brands',ticker: 'CAG.US'},\n        {icono: 'star-outline',nombre: 'Concho Resources',ticker: 'CXO.US'},\n        {icono: 'star-outline',nombre: 'Cooper Companies',ticker: 'COO.US'},\n        {icono: 'star-outline',nombre: 'Coty',ticker: 'COTY.US'},\n        {icono: 'star-outline',nombre: 'CSRA',ticker: 'CSRA.US'},\n        {icono: 'star-outline',nombre: 'Coherent',ticker: 'COHR.US'},\n        {icono: 'star-outline',nombre: 'Comcast',ticker: 'CMCSA.US'},\n        {icono: 'star-outline',nombre: 'Commscope Holding',ticker: 'COMM.US'},\n        {icono: 'star-outline',nombre: 'Constellation Brands',ticker: 'STZ.US'},\n        {icono: 'star-outline',nombre: 'Costar Group',ticker: 'CSGP.US'},\n        {icono: 'star-outline',nombre: 'Costco Wholesale',ticker: 'COST.US'},\n        {icono: 'star-outline',nombre: 'Credit Acceptance',ticker: 'CACC.US'},\n        {icono: 'star-outline',nombre: 'Crown Castle International',ticker: 'CCI.US'},\n        {icono: 'star-outline',nombre: 'CSX',ticker: 'CSX.US'},\n        {icono: 'star-outline',nombre: 'Ctrip.com International',ticker: 'CTRP.US'},\n        {icono: 'star-outline',nombre: 'Cummins',ticker: 'CMI.US'},\n        {icono: 'star-outline',nombre: 'CVS Health',ticker: 'CVS.US'},\n        {icono: 'star-outline',nombre: 'Crispr Therapeutics',ticker: 'CRSP.US'},\n        {icono: 'star-outline',nombre: 'E.L.F. Beauty',ticker: 'ELF.US'},\n        {icono: 'star-outline',nombre: 'Cypress Semiconductor',ticker: 'CY.US'},\n        {icono: 'star-outline',nombre: 'Mimecast',ticker: 'MIME.US'},\n        {icono: 'star-outline',nombre: 'Smart Global Holdings',ticker: 'SGH.US'},\n        {icono: 'star-outline',nombre: 'Turtle Beach Corp',ticker: 'HEAR.US'},\n        {icono: 'star-outline',nombre: 'Ptc Therapeutics',ticker: 'PTCT.US'},\n        {icono: 'star-outline',nombre: 'Consol Energy',ticker: 'CEIX.US'},\n        {icono: 'star-outline',nombre: 'Crowstrikes Holdings',ticker: 'CRWD.US'},\n        {icono: 'star-outline',nombre: 'Chesapeake Energy',ticker: 'CHKEZ.US'},\n        {icono: 'star-outline',nombre: 'Constellation Energy',ticker: 'CEG.US'},\n        // DDDDDDDDDDDDDDDDDDDDD\n        {icono: 'star-outline',nombre: 'Dream Finders',ticker: 'DFH.US'},\n        {icono: 'star-outline',nombre: 'Dianthus Therapeutics',ticker: 'DNTH.US'},\n        {icono: 'star-outline',nombre: 'D.R. Horton',ticker: 'DHI.US'},\n        {icono: 'star-outline',nombre: 'Okta',ticker: 'OKTA.US'},\n        {icono: 'star-outline',nombre: 'Danaher',ticker: 'DHR.US'},\n        {icono: 'star-outline',nombre: 'Davita',ticker: 'DVA.US'},\n        {icono: 'star-outline',nombre: 'Dave & Busters Entertainment',ticker: 'PLAY.US'},\n        {icono: 'star-outline',nombre: 'Darden Restaurants',ticker: 'DRI.US'},\n        {icono: 'star-outline',nombre: 'Digital Realty Trust',ticker: 'DLR.US'},\n        {icono: 'star-outline',nombre: 'Deere & Company',ticker: 'DE.US'},\n        {icono: 'star-outline',nombre: 'Dentsply Sirona',ticker: 'XRAY.US'},\n        {icono: 'star-outline',nombre: 'Delphi Technologies',ticker: 'DLPH.US'},\n        {icono: 'star-outline',nombre: 'Delta Air Lines',ticker: 'DAL.US'},\n        {icono: 'star-outline',nombre: 'Devon Energy',ticker: 'DVN.US'},\n        {icono: 'star-outline',nombre: 'Dexcom',ticker: 'DXCM.US'},\n        {icono: 'star-outline',nombre: 'Discover Financial Services',ticker: 'DFS.US'},\n        {icono: 'star-outline',nombre: 'Diamondback Energy',ticker: 'FANG.US'},\n        {icono: 'star-outline',nombre: 'Discovery Communications',ticker: 'DISCA.US'},\n        {icono: 'star-outline',nombre: 'Dish Network',ticker: 'DISH.US'},\n        {icono: 'star-outline',nombre: 'Dollar General',ticker: 'DG.US'},\n        {icono: 'star-outline',nombre: 'Dominion Energy',ticker: 'D.US'},\n        {icono: 'star-outline',nombre: 'Dominos Pizza',ticker: 'DPZ.US'},\n        {icono: 'star-outline',nombre: 'Downdupont',ticker: 'DWDP.US'},\n        {icono: 'star-outline',nombre: 'Aptose Bioscns',ticker: 'APTO.US'},\n        {icono: 'star-outline',nombre: 'Dover',ticker: 'DOV.US'},\n        {icono: 'star-outline',nombre: 'Dr Pepper Snapple Group',ticker: 'DPS.US'},\n        {icono: 'star-outline',nombre: 'Dollar Tree',ticker: 'DLTR.US'},\n        {icono: 'star-outline',nombre: 'Duke Energy',ticker: 'DUK.US'},\n        {icono: 'star-outline',nombre: 'Rafael Holdings',ticker: 'RFL.US'},\n        {icono: 'star-outline',nombre: 'Dxc Technology Company',ticker: 'DXC.US'},\n        {icono: 'star-outline',nombre: 'Tactile Systems Technology',ticker: 'TCMD.US'},\n        {icono: 'star-outline',nombre: 'Anaptysbio Inc.',ticker: 'ANAB.US'},\n        {icono: 'star-outline',nombre: 'Axogen',ticker: 'AXGN.US'},\n        {icono: 'star-outline',nombre: 'Xoxo Group',ticker: 'XOXO.US'},\n        {icono: 'star-outline',nombre: 'Liveperson',ticker: 'LPSN.US'},\n        {icono: 'star-outline',nombre: 'Five9 Inc.',ticker: 'FIVN.US'},\n        {icono: 'star-outline',nombre: 'Galectin Therapeutic',ticker: 'GALT.US'},\n        {icono: 'star-outline',nombre: 'Ingevity Corp.',ticker: 'NGVT.US'},\n        {icono: 'star-outline',nombre: 'The Trade Desk',ticker: 'TTD.US'},\n        {icono: 'star-outline',nombre: 'Loxo Oncology',ticker: 'LOXO.US'},\n        {icono: 'star-outline',nombre: 'Madrigal Pharmaceuticals',ticker: 'MDGL.US'},\n        {icono: 'star-outline',nombre: 'MGP Ingredients',ticker: 'MGPI.US'},\n        {icono: 'star-outline',nombre: 'Ringcentral',ticker: 'RNG.US'},\n        {icono: 'star-outline',nombre: 'Copart',ticker: 'CPRT.US'},\n        {icono: 'star-outline',nombre: 'Iqiyi Inc.',ticker: 'IQ.US'},\n        {icono: 'star-outline',nombre: 'PTC',ticker: 'PTC.US'},\n        {icono: 'star-outline',nombre: 'Shutterfly',ticker: 'SFLY.US'},\n        {icono: 'star-outline',nombre: 'Tandem Diabetes Care',ticker: 'TNDM.US'},\n        {icono: 'star-outline',nombre: 'NII Holdings',ticker: 'NIHD.US'},\n        {icono: 'star-outline',nombre: 'Intelsat S.A.',ticker: 'I.US'},\n        {icono: 'star-outline',nombre: 'Bluelinx Holdings',ticker: 'BXC.US'},\n        {icono: 'star-outline',nombre: 'NF Energy Saving Cor',ticker: 'NFEC.US'},\n        {icono: 'star-outline',nombre: 'Legacy Reserves LP',ticker: 'LGCY.US'},\n        {icono: 'star-outline',nombre: 'Fossil Group',ticker: 'FOSL.US'},\n        {icono: 'star-outline',nombre: 'Vaalco Energy',ticker: 'EGY.US'},\n        {icono: 'star-outline',nombre: 'Whiting Petroleum',ticker: 'WLL.US'},\n        {icono: 'star-outline',nombre: 'Arqule',ticker: 'ARQL.US'},\n        {icono: 'star-outline',nombre: 'Endocyte',ticker: 'ECYT.US'},\n        {icono: 'star-outline',nombre: 'Sesen Bio',ticker: 'SESN.US'},\n        {icono: 'star-outline',nombre: 'Arrowhead Pharma',ticker: 'ARWR.US'},\n        {icono: 'star-outline',nombre: 'Nucana',ticker: 'NCNA.US'},\n        {icono: 'star-outline',nombre: 'Techtarget',ticker: 'TTGT.US'},\n        {icono: 'star-outline',nombre: 'Travelzoo',ticker: 'TZOO.US'},\n        {icono: 'star-outline',nombre: 'Chinanet Online',ticker: 'CNET.US'},\n        {icono: 'star-outline',nombre: 'Shotspotter',ticker: 'SSTI.US'},\n        {icono: 'star-outline',nombre: 'Nuvectra',ticker: 'NVTR.US'},\n        {icono: 'star-outline',nombre: 'Skyline',ticker: 'SKY.US'},\n        {icono: 'star-outline',nombre: 'Egain',ticker: 'EGAN.US'},\n        {icono: 'star-outline',nombre: 'Xencor',ticker: 'XNCR.US'},\n        {icono: 'star-outline',nombre: 'Stein Mart',ticker: 'SMRT.US'},\n        {icono: 'star-outline',nombre: 'Mirati Therapeutics',ticker: 'MRTX.US'},\n        {icono: 'star-outline',nombre: 'Atara Biotherap',ticker: 'ATRA.US'},\n        {icono: 'star-outline',nombre: 'Axon',ticker: 'AAXN.US'},\n        {icono: 'star-outline',nombre: 'Twilio',ticker: 'TWLO.US'},\n        {icono: 'star-outline',nombre: 'Comstock Hldgs',ticker: 'CHCI.US'},\n        {icono: 'star-outline',nombre: 'Tenet Healthcare',ticker: 'THC.US'},\n        {icono: 'star-outline',nombre: 'Viking Thera',ticker: 'VKTX.US'},\n        {icono: 'star-outline',nombre: 'Casi Phrmactcls',ticker: 'CASI.US'},\n        {icono: 'star-outline',nombre: 'Odyssey Marine',ticker: 'OMEX.US'},\n        {icono: 'star-outline',nombre: 'Mei Pharma',ticker: 'MEIP.US'},\n        {icono: 'star-outline',nombre: 'Zymeworks',ticker: 'ZYME.US'},\n        {icono: 'star-outline',nombre: 'RF Industries',ticker: 'RFIL.US'},\n        {icono: 'star-outline',nombre: 'Enova International',ticker: 'ENVA.US'},\n        {icono: 'star-outline',nombre: 'Profire Energy',ticker: 'PFIE.US'},\n        {icono: 'star-outline',nombre: 'Immersion',ticker: 'IMMR.US'},\n        {icono: 'star-outline',nombre: 'Tapimmune',ticker: 'TPIV.US'},\n        {icono: 'star-outline',nombre: 'T2 Biosystems',ticker: 'TTOO.US'},\n        {icono: 'star-outline',nombre: 'Durect',ticker: 'DRRX.US'},\n        {icono: 'star-outline',nombre: 'Pfenex',ticker: 'PFNX.US'},\n        {icono: 'star-outline',nombre: 'Medifast',ticker: 'MED.US'},\n        {icono: 'star-outline',nombre: 'Penn Va',ticker: 'PVAC.US'},\n        {icono: 'star-outline',nombre: 'Penumbra',ticker: 'PEN.US'},\n        {icono: 'star-outline',nombre: 'Town Sports Internat',ticker: 'CLUB.US'},\n        {icono: 'star-outline',nombre: 'Rocket Pharmaceuticals',ticker: 'RCKT.US'},\n        {icono: 'star-outline',nombre: 'World Wrestling Entertainment',ticker: 'WWE.US'},\n        {icono: 'star-outline',nombre: 'Denbury Resources',ticker: 'DNR.US'},\n        // EEEEEEEEEEEEEEEEEEEEEE \n        {icono: 'star-outline',nombre: 'Freshpet',ticker: 'FRPT.US'},\n        {icono: 'star-outline',nombre: 'Etsy',ticker: 'ETSY.US'},\n        {icono: 'star-outline',nombre: 'Eaton',ticker: 'ETN.US'},\n        {icono: 'star-outline',nombre: 'Everbridge',ticker: 'EVBG.US'},\n        {icono: 'star-outline',nombre: 'Staar Surgical',ticker: 'STAA.US'},\n        {icono: 'star-outline',nombre: 'Euro Tech Hldg',ticker: 'CLWT.US'},\n        {icono: 'star-outline',nombre: 'Juniper Pharm',ticker: 'JNP.US'},\n        {icono: 'star-outline',nombre: 'Vince Holding',ticker: 'VNCE.US'},\n        {icono: 'star-outline',nombre: 'Chemocentryx',ticker: 'CCXI.US'},\n        {icono: 'star-outline',nombre: 'Vicor',ticker: 'VICR.US'},\n        {icono: 'star-outline',nombre: 'China Hgs Real Est',ticker: 'HGSH.US'},\n        {icono: 'star-outline',nombre: 'Pain Therapeutics',ticker: 'PTIE.US'},\n        {icono: 'star-outline',nombre: 'Genesis Healthcare',ticker: 'GEN.US'},\n        {icono: 'star-outline',nombre: 'Ebay',ticker: 'EBAY.US'},\n        {icono: 'star-outline',nombre: 'Greentree Hospitality Group',ticker: 'GHG.US'},\n        {icono: 'star-outline',nombre: 'Ascendis Pharma',ticker: 'ASND.US'},\n        {icono: 'star-outline',nombre: 'Coupa Software',ticker: 'COUP.US'},\n        {icono: 'star-outline',nombre: 'Ecolab',ticker: 'ECL.US'},\n        {icono: 'star-outline',nombre: 'Mammoth Energy Services',ticker: 'TUSK.US'},\n        {icono: 'star-outline',nombre: 'Weight Watchers International',ticker: 'WTW.US'},\n        {icono: 'star-outline',nombre: 'Ascena Retail',ticker: 'ASNA.US'},\n        {icono: 'star-outline',nombre: 'Eyepoint Pharmaceuticals',ticker: 'EYPT.US'},\n        {icono: 'star-outline',nombre: 'Fte Networks',ticker: 'FTNW.US'},\n        {icono: 'star-outline',nombre: 'Reeds',ticker: 'REED.US'},\n        {icono: 'star-outline',nombre: 'Edison International',ticker: 'EIX.US'},\n        {icono: 'star-outline',nombre: 'Vericel',ticker: 'VCEL.US'},\n        {icono: 'star-outline',nombre: 'Acelrx Pharmaceutica',ticker: 'ACRX.US'},\n        {icono: 'star-outline',nombre: 'Adaptimmune Ther Ads',ticker: 'ADAP.US'},\n        {icono: 'star-outline',nombre: 'Cerus',ticker: 'CERS.US'},\n        {icono: 'star-outline',nombre: 'Fireman B.V.',ticker: 'IFRX.US'},\n        {icono: 'star-outline',nombre: 'Hailiang Edu Grp Ads',ticker: 'HLG.US'},\n        {icono: 'star-outline',nombre: 'Arcadia Bio',ticker: 'RKDA.US'},\n        {icono: 'star-outline',nombre: 'Carvana',ticker: 'CVNA.US'},\n        {icono: 'star-outline',nombre: 'Carver Bancorp',ticker: 'CARV.US'},\n        {icono: 'star-outline',nombre: 'Edwards Lifesciences',ticker: 'EW.US'},\n        {icono: 'star-outline',nombre: 'Cti Biopharm',ticker: 'CTIC.US'},\n        {icono: 'star-outline',nombre: 'Regenxbio',ticker: 'RGNX.US'},\n        {icono: 'star-outline',nombre: 'Amer Superconductor',ticker: 'AMSC.US'},\n        {icono: 'star-outline',nombre: 'Electronic Arts',ticker: 'EA.US'},\n        {icono: 'star-outline',nombre: 'Nanostring Tech',ticker: 'NSTG.US'},\n        {icono: 'star-outline',nombre: 'Atlassian Corp.',ticker: 'TEAM.US'},\n        {icono: 'star-outline',nombre: 'Intricon',ticker: 'IIN.US'},\n        {icono: 'star-outline',nombre: 'Dynamic Materials',ticker: 'BOOM.US'},\n        {icono: 'star-outline',nombre: 'Funko',ticker: 'FNKO.US'},\n        {icono: 'star-outline',nombre: 'Sailpoint Technologies',ticker: 'SAIL.US'},\n        {icono: 'star-outline',nombre: 'Xenon Pharmace',ticker: 'XENE.US'},\n        {icono: 'star-outline',nombre: 'Catasys',ticker: 'CATS.US'},\n        {icono: 'star-outline',nombre: 'The Container Store Group',ticker: 'TCS.US'},\n        {icono: 'star-outline',nombre: 'Acm Research',ticker: 'ACMR.US'},\n        {icono: 'star-outline',nombre: 'Momenta Pharma',ticker: 'MNTA.US'},\n        {icono: 'star-outline',nombre: 'Proqr Therapeutics',ticker: 'PRQR.US'},\n        {icono: 'star-outline',nombre: 'Genprex',ticker: 'GNPX.US'},\n        {icono: 'star-outline',nombre: 'Myovant Sciences',ticker: 'MYOV.US'},\n        {icono: 'star-outline',nombre: '500Wan.Com',ticker: 'WBAI.US'},\n        {icono: 'star-outline',nombre: 'Codexis',ticker: 'CDXS.US'},\n        {icono: 'star-outline',nombre: 'Geopark Hldgs',ticker: 'GPRK.US'},\n        {icono: 'star-outline',nombre: 'Ceragon Networks',ticker: 'CRNT.US'},\n        {icono: 'star-outline',nombre: 'Transenterix',ticker: 'TRXC.US'},\n        {icono: 'star-outline',nombre: 'Seacor Marine Holdings',ticker: 'SMHI.US'},\n        {icono: 'star-outline',nombre: 'Enphase Energy',ticker: 'ENPH.US'},\n        {icono: 'star-outline',nombre: 'New Relic',ticker: 'NEWR.US'},\n        {icono: 'star-outline',nombre: 'Ubiquiti Networks',ticker: 'UBNT.US'},\n        {icono: 'star-outline',nombre: 'Coherus Bio',ticker: 'CHRS.US'},\n        {icono: 'star-outline',nombre: 'Enanta Pharmaceutica',ticker: 'ENTA.US'},\n        {icono: 'star-outline',nombre: 'Mongodb',ticker: 'MDB.US'},\n        {icono: 'star-outline',nombre: 'Eloxx Pharmaceuticals',ticker: 'ELOX.US'},\n        {icono: 'star-outline',nombre: 'Adverum Biotechnlgs',ticker: 'ADVM.US'},\n        {icono: 'star-outline',nombre: 'Evolus',ticker: 'EOLS.US'},\n        {icono: 'star-outline',nombre: 'Workiva',ticker: 'WK.US'},\n        {icono: 'star-outline',nombre: 'Biolife Solutions',ticker: 'BLFS.US'},\n        {icono: 'star-outline',nombre: 'Pioneer Energy Services',ticker: 'PES.US'},\n        {icono: 'star-outline',nombre: 'American Pub.',ticker: 'APEI.US'},\n        {icono: 'star-outline',nombre: 'Sorrento Therpt',ticker: 'SRNE.US'},\n        {icono: 'star-outline',nombre: 'Surmodics',ticker: 'SRDX.US'},\n        {icono: 'star-outline',nombre: 'Healthequity',ticker: 'HQY.US'},\n        {icono: 'star-outline',nombre: 'W&T Offshore',ticker: 'WTI.US'},\n        {icono: 'star-outline',nombre: 'Bandwidth',ticker: 'BAND.US'},\n        {icono: 'star-outline',nombre: 'R1 Rcm',ticker: 'RCM.US'},\n        {icono: 'star-outline',nombre: 'Match Group',ticker: 'MTCH.US'},\n        {icono: 'star-outline',nombre: 'Wix.Com',ticker: 'WIX.US'},\n        {icono: 'star-outline',nombre: 'Aslan Pharmaceuticals',ticker: 'ASLN.US'},\n        {icono: 'star-outline',nombre: 'California Resources',ticker: 'CRC.US'},\n        {icono: 'star-outline',nombre: 'Intelligent Systems',ticker: 'INS.US'},\n        {icono: 'star-outline',nombre: 'Geron',ticker: 'GERN.US'},\n        {icono: 'star-outline',nombre: 'Eastside Distilling',ticker: 'EAST.US'},\n        {icono: 'star-outline',nombre: 'Sunrun',ticker: 'RUN.US'},\n        {icono: 'star-outline',nombre: 'Fate Therapeutics',ticker: 'FATE.US'},\n        {icono: 'star-outline',nombre: 'Ollie S Bargain',ticker: 'OLLI.US'},\n        {icono: 'star-outline',nombre: 'Innovate Biopharmaceuticals',ticker: 'INNT.US'},\n        {icono: 'star-outline',nombre: 'Exp Realty Internati',ticker: 'EXPI.US'},\n        {icono: 'star-outline',nombre: 'Exp Realty Internati',ticker: 'NDLS.US'},\n        {icono: 'star-outline',nombre: 'Aeglea Biothera',ticker: 'AGLE.US'},\n        {icono: 'star-outline',nombre: 'Cytosorbents Cor',ticker: 'CTSO.US'},\n        {icono: 'star-outline',nombre: 'Innovative Industrial',ticker: 'IIPR.US'},\n        {icono: 'star-outline',nombre: 'Rapid7',ticker: 'RPD.US'},\n        {icono: 'star-outline',nombre: 'Uniqure N.V.',ticker: 'QURE.US'},\n        {icono: 'star-outline',nombre: 'Evolent Health',ticker: 'EVH.US'},\n        {icono: 'star-outline',nombre: 'Planet Fitness',ticker: 'PLNT.US'},\n        {icono: 'star-outline',nombre: 'Tabula Rasa Healthcare',ticker: 'TRHC.US'},\n        {icono: 'star-outline',nombre: 'Eli Lilly',ticker: 'LLY.US'}, {icono: 'star-outline',nombre: 'Emerson Electric',ticker: 'EMR.US'},\n        {icono: 'star-outline',nombre: 'Entergy',ticker: 'ETR.US'}, {icono: 'star-outline',nombre: 'Envision Healthcare Holdings',ticker: 'EVHC.US'}, \n        {icono: 'star-outline',nombre: 'Enterprise Products Partners',ticker: 'EPD.US'}, {icono: 'star-outline',nombre: 'Eog Resources',ticker: 'EOG.US'}, \n        {icono: 'star-outline',nombre: 'EQT',ticker: 'EQT.US'}, {icono: 'star-outline',nombre: 'Equifax',ticker: 'EFX.US'}, {icono: 'star-outline',nombre: 'Equinix',ticker: 'EQIX.US'},\n        {icono: 'star-outline',nombre: 'Equity Residential',ticker: 'EQR.US'}, {icono: 'star-outline',nombre: 'Essex Property Trust',ticker: 'ESS.US'},\n        {icono: 'star-outline',nombre: 'Estee Lauder Companies',ticker: 'EL.US'}, {icono: 'star-outline',nombre: 'Everest Re Group',ticker: 'RE.US'},\n        {icono: 'star-outline',nombre: 'Eversource Energy',ticker: 'ES.US'}, {icono: 'star-outline',nombre: 'Exelon',ticker: 'EXC.US'},\n        {icono: 'star-outline',nombre: 'Exact Sciences',ticker: 'EXAS.US'}, {icono: 'star-outline',nombre: 'Expedia',ticker: 'EXPE.US'},\n        {icono: 'star-outline',nombre: 'Expeditors International ...',ticker: 'EXPD.US'}, {icono: 'star-outline',nombre: 'Express Scripts Holding',ticker: 'ESRX.US'},\n        {icono: 'star-outline',nombre: 'Exxon Mobil',ticker: 'XOM.US'}, {icono: 'star-outline',nombre: 'Extra Space Storage',ticker: 'EXR.US'}, \n        {icono: 'star-outline',nombre: 'ETrade Financial',ticker: 'ETFC.US'},{icono: 'star-outline',nombre: 'Eldorado Resorts',ticker: 'ERI.US'},\n        {icono: 'star-outline',nombre: 'GDS Holdings',ticker: 'GDS.US'}, {icono: 'star-outline',nombre: 'Inogen',ticker: 'INGN.US'},\n        // FFFFFFFFFFFFFFFFFFFFFFF\n        {icono: 'star-outline',nombre: 'F5 Networks',ticker: 'FFIV.US'}, {icono: 'star-outline',nombre: 'Facebook',ticker: 'FB.US'},\n        {icono: 'star-outline',nombre: 'Fastenal Company',ticker: 'FAST.US'}, {icono: 'star-outline',nombre: 'Fifth Third Bancorp',ticker: 'FITB.US'},\n        {icono: 'star-outline',nombre: 'Fedex',ticker: 'FDX.US'}, {icono: 'star-outline',nombre: 'Finisar',ticker: 'FNSR.US'}, {icono: 'star-outline',nombre: 'First Solar',ticker: 'FSLR.US'},\n        {icono: 'star-outline',nombre: 'Fiserv',ticker: 'FISV.US'}, {icono: 'star-outline',nombre: 'Five Below',ticker: 'FIVE.US'},\n        {icono: 'star-outline',nombre: 'Flir Systems',ticker: 'FLIR.US'}, {icono: 'star-outline',nombre: 'Flowserve',ticker: 'FLS.US'},\n        {icono: 'star-outline',nombre: 'Fluor',ticker: 'FLR.US'}, {icono: 'star-outline',nombre: 'FMC',ticker: 'FMC.US'},\n        {icono: 'star-outline',nombre: 'Foot Locker',ticker: 'FL.US'}, {icono: 'star-outline',nombre: 'Fortive',ticker: 'FTV.US'},\n        {icono: 'star-outline',nombre: 'Ford Motor Company',ticker: 'F.US'}, {icono: 'star-outline',nombre: 'FreePort-Mcmoran',ticker: 'FCX.US'},\n        {icono: 'star-outline',nombre: 'Fortune Brands',ticker: 'FBHS.US'}, {icono: 'star-outline',nombre: 'Franklin Resources',ticker: 'BEN.US'},\n        // GGGGGGGGGGGGGGGGGGGGGG \n        {icono: 'star-outline',nombre: 'Gap',ticker: 'GPS.US'}, {icono: 'star-outline',nombre: 'Garmin LTD.',ticker: 'GRMN.US'}, {icono: 'star-outline',nombre: 'General Dynamics',ticker: 'GD.US'},\n        {icono: 'star-outline',nombre: 'Gartner',ticker: 'IT.US'}, {icono: 'star-outline',nombre: 'Genuine Parts',ticker: 'GPC.US'},\n        {icono: 'star-outline',nombre: 'General Electric',ticker: 'GE.US'}, {icono: 'star-outline',nombre: 'General Mills',ticker: 'GIS.US'},\n        {icono: 'star-outline',nombre: 'General Motors',ticker: 'GM.US'}, {icono: 'star-outline',nombre: 'Glaxosmithkline PLC',ticker: 'GSK.US'},\n        {icono: 'star-outline',nombre: 'Gilead Sciences',ticker: 'GILD.US'}, {icono: 'star-outline',nombre: 'GGP',ticker: 'GGP.US'},\n        {icono: 'star-outline',nombre: 'Goldman Sachs',ticker: 'GS.US'}, {icono: 'star-outline',nombre: 'Global Payments',ticker: 'GPN.US'},\n        {icono: 'star-outline',nombre: 'Goodyear Tire Rubber',ticker: 'GT.US'}, {icono: 'star-outline',nombre: 'Grubhub Inc.',ticker: 'GRUB.US'},\n        // HHHHHHHHHHHHHHHHHHHHHH\n        {icono: 'star-outline',nombre: 'Halliburton',ticker: 'HAL.US'}, {icono: 'star-outline',nombre: 'Hca Healthcare',ticker: 'HCA.US'},\n        {icono: 'star-outline',nombre: 'Hasbro',ticker: 'HAS.US'}, {icono: 'star-outline',nombre: 'HD Supply Holdings',ticker: 'HDS.US'},\n        {icono: 'star-outline',nombre: 'Hanesbrands',ticker: 'HBI.US'}, {icono: 'star-outline',nombre: 'Harley-Davidson',ticker: 'HOG.US'},\n        {icono: 'star-outline',nombre: 'Harris',ticker: 'HRS.US'}, {icono: 'star-outline',nombre: 'Hartford Financial Services Group',ticker: 'HIG.US'},\n        {icono: 'star-outline',nombre: 'HCP',ticker: 'HCP.US'}, {icono: 'star-outline',nombre: 'Helmerich & Payne',ticker: 'HP.US'},\n        {icono: 'star-outline',nombre: 'Henry Schein',ticker: 'HSIC.US'}, {icono: 'star-outline',nombre: 'Himax Technologies',ticker: 'HIMX.US'},\n        {icono: 'star-outline',nombre: 'Hess',ticker: 'HES.US'}, {icono: 'star-outline',nombre: 'Hewlett Packard Enterprise',ticker: 'HPE.US'}, \n        {icono: 'star-outline',nombre: 'Hilton',ticker: 'HLT.US'}, {icono: 'star-outline',nombre: 'Hormel Foods',ticker: 'HRL.US'},\n        {icono: 'star-outline',nombre: 'Home Depot',ticker: 'HD.US'}, {icono: 'star-outline',nombre: 'Host Marriott Financial Trust',ticker: 'HST.US'},\n        {icono: 'star-outline',nombre: 'Hologic',ticker: 'HOLX.US'}, {icono: 'star-outline',nombre: 'Huntington Bancshares',ticker: 'HBAN.US'},\n        {icono: 'star-outline',nombre: 'Honeywell International',ticker: 'HON.US'}, {icono: 'star-outline',nombre: 'HP',ticker: 'HPQ.US'}, \n        {icono: 'star-outline',nombre: 'Humana',ticker: 'HUM.US'}, {icono: 'star-outline',nombre: 'H&R Block',ticker: 'HRB.US'},\n        {icono: 'star-outline',nombre: 'Helia Group',ticker: 'HLI.US'}, {icono: 'star-outline',nombre: 'H&R Block',ticker: 'HRB.US'},\n        // IIIIIIIIIIIIIIIIIIIIII\n        {icono: 'star-outline',nombre: 'Illinois Tool Works',ticker: 'ITW.US'}, {icono: 'star-outline',nombre: 'Intercontinental Exchange',ticker: 'ICE.US'},\n        {icono: 'star-outline',nombre: 'International Business Machines (IBM)',ticker: 'IBM.US'}, {icono: 'star-outline',nombre: 'Iac/Interactivecorp',ticker: 'IAC.US'},\n        {icono: 'star-outline',nombre: 'Idexx Laboratories',ticker: 'IDXX.US'}, {icono: 'star-outline',nombre: 'IHS Markit',ticker: 'INFO.US'},\n        {icono: 'star-outline',nombre: 'Illumina',ticker: 'ILMN.US'}, {icono: 'star-outline',nombre: 'Incyte',ticker: 'INCY.US'}, \n        {icono: 'star-outline',nombre: 'Intel',ticker: 'INTC.US'}, {icono: 'star-outline',nombre: 'Intuit',ticker: 'INTU.US'}, \n        {icono: 'star-outline',nombre: 'Intuitive Surgical',ticker: 'ISRG.US'}, {icono: 'star-outline',nombre: 'IPG Photonics',ticker: 'IPGP.US'},\n        {icono: 'star-outline',nombre: 'Irobot',ticker: 'IRBT.US'}, {icono: 'star-outline',nombre: 'Invesco',ticker: 'IVZ.US'},\n        {icono: 'star-outline',nombre: 'International Flavors & Fragances',ticker: 'IFF.US'}, {icono: 'star-outline',nombre: 'International Paper Company',ticker: 'IP.US'}, \n        {icono: 'star-outline',nombre: 'Interpublic Group of Companies',ticker: 'IPG.US'},\n        {icono: 'star-outline',nombre: 'Iqvia Holdings',ticker: 'IQV.US'}, {icono: 'star-outline',nombre: 'Iron Mountain',ticker: 'IRM.US'},\n        // JJJJJJJJJJJJJJJJJJJJJJ\n        {icono: 'star-outline',nombre: 'Johnson & Johnson',ticker: 'JNJ.US'}, {icono: 'star-outline',nombre: 'Johnson Controls International',ticker: 'JCI.US'},\n        {icono: 'star-outline',nombre: 'JP Morgan',ticker: 'JPM.US'}, {icono: 'star-outline',nombre: 'J.B. Hunt Transport Services',ticker: 'JBHT.US'},\n        {icono: 'star-outline',nombre: 'Jack in the box',ticker: 'JACK.US'}, {icono: 'star-outline',nombre: 'JD.COM',ticker: 'JD.US'},\n        {icono: 'star-outline',nombre: 'Jetblue Airways',ticker: 'JBLU.US'}, {icono: 'star-outline',nombre: 'Juno Therapeurtics',ticker: 'JUNO.US'},\n        {icono: 'star-outline',nombre: 'Juniper Networks',ticker: 'JNPR.US'}, {icono: 'star-outline',nombre: 'John Bean',ticker: 'JBT.US'},\n        // KKKKKKKKKKKKKKKKKKKKK\n        {icono: 'star-outline',nombre: 'Kellogg',ticker: 'K.US'}, {icono: 'star-outline',nombre: 'Keycorp',ticker: 'KEY.US'},\n        {icono: 'star-outline',nombre: 'Kimberly-Clark',ticker: 'KMB.US'}, {icono: 'star-outline',nombre: 'Kinder Morgan',ticker: 'KMI.US'},\n        {icono: 'star-outline',nombre: 'Khol',ticker: 'KSS.US'}, {icono: 'star-outline',nombre: 'Kroger',ticker: 'KR.US'},\n        {icono: 'star-outline',nombre: 'Kla-Tencor',ticker: 'KLAC.US'}, {icono: 'star-outline',nombre: 'Kansas City Southern',ticker: 'KSU.US'},\n        {icono: 'star-outline',nombre: 'Kimco Realty',ticker: 'KIM.US'}, {icono: 'star-outline',nombre: 'Kraft Heinz',ticker: 'KHC.US'},\n        // LLLLLLLLLLLLLLLLLLLLLL\n        {icono: 'star-outline',nombre: 'L3 Communications',ticker: 'LLL.US'}, {icono: 'star-outline',nombre: 'Laboratory Corporation of America',ticker: 'LH.US'},\n        {icono: 'star-outline',nombre: 'L Brands',ticker: 'LB.US'}, {icono: 'star-outline',nombre: 'Las Vegas Sands',ticker: 'LVS.US'},\n        {icono: 'star-outline',nombre: 'Lam Research',ticker: 'LRCX.US'}, {icono: 'star-outline',nombre: 'Lendingtree',ticker: 'TREE.US'},\n        {icono: 'star-outline',nombre: 'Leggett & Platt',ticker: 'LEG.US'}, {icono: 'star-outline',nombre: 'Leucadia National',ticker: 'LUK.US'},\n        {icono: 'star-outline',nombre: 'Lennar Corp',ticker: 'LEN.US'}, {icono: 'star-outline',nombre: 'Liberty Broadband',ticker: 'LBRDK.US'},\n        {icono: 'star-outline',nombre: 'Liberty Global PLC',ticker: 'LBTYK.US'}, {icono: 'star-outline',nombre: 'Liberty Interactive',ticker: 'QVCA.US'},\n        {icono: 'star-outline',nombre: 'Lincoln National',ticker: 'LNC.US'}, {icono: 'star-outline',nombre: 'Loews',ticker: 'L.US'},\n        {icono: 'star-outline',nombre: 'Lockheed Martin',ticker: 'LMT.US'}, {icono: 'star-outline',nombre: 'Liberty Media',ticker: 'FWONK.US'},\n        {icono: 'star-outline',nombre: 'Lowe',ticker: 'LOW.US'}, {icono: 'star-outline',nombre: 'Lyondellbasell Industries',ticker: 'LYB.US'},\n        {icono: 'star-outline',nombre: 'LKQ',ticker: 'LKQ.US'}, {icono: 'star-outline',nombre: 'Lululemon Athletica',ticker: 'LULU.US'},\n        {icono: 'star-outline',nombre: 'Lumentum Holdings',ticker: 'LITE.US'},{icono: 'star-outline',nombre: 'Trupanion',ticker: 'TRUP.US'},\n        // MMMMMMMMMMMMMMMMMMMMMM\n        {icono: 'star-outline',nombre: 'Direxion Daily',ticker: 'MSFU.US'},{icono: 'star-outline',nombre: 'Meta Platforms',ticker: 'META.US'},\n        {icono: 'star-outline',nombre: 'Macys',ticker: 'M.US'}, {icono: 'star-outline',nombre: 'Marathon Oil',ticker: 'MRO.US'},\n        {icono: 'star-outline',nombre: 'Marathon Petroleum',ticker: 'MPC.US'}, {icono: 'star-outline',nombre: 'Marsh & Mclennan',ticker: 'MMC.US'},\n        {icono: 'star-outline',nombre: 'Marriott',ticker: 'MAR.US'}, {icono: 'star-outline',nombre: 'Marvell Technology Group',ticker: 'MRVL.US'},\n        {icono: 'star-outline',nombre: 'Mastercard',ticker: 'MA.US'}, {icono: 'star-outline',nombre: 'McDonalds',ticker: 'MCD.US'},\n        {icono: 'star-outline',nombre: 'Mattel',ticker: 'MAT.US'}, {icono: 'star-outline',nombre: 'Maxim Integrated Products',ticker: 'MXIM.US'},\n        {icono: 'star-outline',nombre: 'Macerich',ticker: 'MAC.US'}, {icono: 'star-outline',nombre: 'Martin Marietta',ticker: 'MLM.US'}, {icono: 'star-outline',nombre: 'Masco',ticker: 'MAS.US'}, \n        {icono: 'star-outline',nombre: 'McKesson',ticker: 'MCK.US'}, {icono: 'star-outline',nombre: 'Medtronic',ticker: 'MDT.US'},\n        {icono: 'star-outline',nombre: 'Merck & Company',ticker: 'MRK.US'}, {icono: 'star-outline',nombre: 'Metlife',ticker: 'MET.US'},\n        {icono: 'star-outline',nombre: 'Melco Resorts',ticker: 'MLCO.US'}, {icono: 'star-outline',nombre: 'Mercadolibre',ticker: 'MELI.US'},\n        {icono: 'star-outline',nombre: 'Microchip Technology',ticker: 'MCHP.US'}, {icono: 'star-outline',nombre: 'Micron Technology',ticker: 'MU.US'},\n        {icono: 'star-outline',nombre: 'Microsoft',ticker: 'MSFT.US'}, {icono: 'star-outline',nombre: 'Michael Kors',ticker: 'KORS.US'}, \n        {icono: 'star-outline',nombre: 'Momo',ticker: 'MOMO.US'}, {icono: 'star-outline',nombre: 'Mohawk Industries',ticker: 'MHK.US'},\n        {icono: 'star-outline',nombre: 'MGM Resorts',ticker: 'MGM.US'}, {icono: 'star-outline',nombre: 'Monsanto',ticker: 'MON.US'},\n        {icono: 'star-outline',nombre: 'Morgan Stanley',ticker: 'MS.US'}, {icono: 'star-outline',nombre: 'Mondelez',ticker: 'MDLZ.US'},\n        {icono: 'star-outline',nombre: 'Monster Beverage',ticker: 'MNST.US'}, {icono: 'star-outline',nombre: 'Mylan N.V.',ticker: 'MYL.US'},\n        {icono: 'star-outline',nombre: 'Molson Coors',ticker: 'TAP.US'}, {icono: 'star-outline',nombre: 'Moodys',ticker: 'MCO.US'},\n        {icono: 'star-outline',nombre: 'Mosaic',ticker: 'MOS.US'}, {icono: 'star-outline',nombre: 'Motorola',ticker: 'MSI.US'},{icono: 'star-outline',nombre: 'Moderna INC.',ticker: 'MRNA.US'},\n        // NNNNNNNNNNNNNNNNNNNNNN\n        {icono: 'star-outline',nombre: 'Nasdaq',ticker: 'NDAQ.US'}, {icono: 'star-outline',nombre: 'Nektar Therapeutics',ticker: 'NKTR.US'},\n        {icono: 'star-outline',nombre: 'National-Oilwell',ticker: 'NOV.US'}, {icono: 'star-outline',nombre: 'Navient',ticker: 'NAVI.US'},\n        {icono: 'star-outline',nombre: 'Netapp',ticker: 'NTAP.US'}, {icono: 'star-outline',nombre: 'Netease',ticker: 'NTES.US'},\n        {icono: 'star-outline',nombre: 'Netflix',ticker: 'NFLX.US'}, {icono: 'star-outline',nombre: 'Newell Brands',ticker: 'NWL.US'},\n        {icono: 'star-outline',nombre: 'Newmont Mining',ticker: 'NEM.US'}, {icono: 'star-outline',nombre: 'Nextera Energy',ticker: 'NEE.US'},\n        {icono: 'star-outline',nombre: 'NiSource',ticker: 'NI.US'}, {icono: 'star-outline',nombre: 'Noble Energy',ticker: 'NBL.US'},\n        {icono: 'star-outline',nombre: 'Nike',ticker: 'NKE.US'}, {icono: 'star-outline',nombre: 'Northern Trust',ticker: 'NTRS.US'},\n        {icono: 'star-outline',nombre: 'Norfolk Southern',ticker: 'NSC.US'}, {icono: 'star-outline',nombre: 'Northrop Grumman',ticker: 'NOC.US'},\n        {icono: 'star-outline',nombre: 'Nordstrom',ticker: 'JWN.US'}, {icono: 'star-outline',nombre: 'NRG Energy',ticker: 'NRG.US'},\n        {icono: 'star-outline',nombre: 'Nucor',ticker: 'NUE.US'}, {icono: 'star-outline',nombre: 'Nutanix',ticker: 'NTNX.US'}, \n        {icono: 'star-outline',nombre: 'Nvidia',ticker: 'NVDA.US'}, {icono: 'star-outline',nombre: 'NXP Semiconductors',ticker: 'NXPI.US'},\n        {icono: 'star-outline',nombre: 'Novanta',ticker: 'NOVT.US'},{icono: 'star-outline',nombre: 'Transunion',ticker: 'TRU.US'},\n        // OOOOOOOOOOOOOOOOOOOOOO\n        {icono: 'star-outline',nombre: 'O Reilly Automotiv',ticker: 'ORLY.US'}, {icono: 'star-outline',nombre: 'Old Dominion Freight Line',ticker: 'ODFL.US'}, {icono: 'star-outline',nombre: 'On Semiconductor',ticker: 'ON.US'}, {icono: 'star-outline',nombre: 'Overstock.com',ticker: 'OSTK.US'},\n        {icono: 'star-outline',nombre: 'Occidental Petroleum',ticker: 'OXY.US'}, {icono: 'star-outline',nombre: 'Omnicom Group',ticker: 'OMC.US'}, {icono: 'star-outline',nombre: 'Oracle',ticker: 'ORCL.US'}, {icono: 'star-outline',nombre: 'Oneok',ticker: 'OKE.US'},\n        // PPPPPPPPPPPPPPPPPPPPPP\n        {icono: 'star-outline',nombre: 'Paccar',ticker: 'PCAR.US'}, {icono: 'star-outline',nombre: 'Patterson-uti Energy',ticker: 'PTEN.US'}, {icono: 'star-outline',nombre: 'Paychex',ticker: 'PAYX.US'}, {icono: 'star-outline',nombre: 'Paypal Holdings',ticker: 'PYPL.US'},\n        {icono: 'star-outline',nombre: 'Pacific Gas & Electric',ticker: 'PCG.US'}, {icono: 'star-outline',nombre: 'Pfizer',ticker: 'PFE.US'}, {icono: 'star-outline',nombre: 'Philip Morris',ticker: 'PM.US'}, {icono: 'star-outline',nombre: 'Phillips 66',ticker: 'PSX.US'},\n        {icono: 'star-outline',nombre: 'Pepsico',ticker: 'PEP.US'}, {icono: 'star-outline',nombre: 'Pioneer Natural resources',ticker: 'PXD.US'}, {icono: 'star-outline',nombre: 'PNC Financial Services',ticker: 'PNC.US'},\n        {icono: 'star-outline',nombre: 'Pentair',ticker: 'PNR.US'}, {icono: 'star-outline',nombre: 'Perkinelmer',ticker: 'PKI.US'}, {icono: 'star-outline',nombre: 'Perrigo',ticker: 'PRGO.US'}, {icono: 'star-outline',nombre: 'Pinacle West Capital',ticker: 'PNW.US'},\n        {icono: 'star-outline',nombre: 'PPL',ticker: 'PPL.US'}, {icono: 'star-outline',nombre: 'Praxair',ticker: 'PX.US'}, {icono: 'star-outline',nombre: 'Procter & Gamble',ticker: 'PG.US'}, {icono: 'star-outline',nombre: 'Prudential Financial',ticker: 'PRU.US'},\n        {icono: 'star-outline',nombre: 'Public Service Enterprise Group',ticker: 'PEG.US'}, {icono: 'star-outline',nombre: 'Public Storage',ticker: 'PSA.US'}, {icono: 'star-outline',nombre: 'Puma Biotechnology',ticker: 'PBYI.US'},\n        {icono: 'star-outline',nombre: 'Parsons Corp.',ticker: 'PSN.US'},{icono: 'star-outline',nombre: 'Priceline',ticker: 'PCLN.US'}, {icono: 'star-outline',nombre: 'Pultegroup',ticker: 'PHM.US'},\n        // QQQQQQQQQQQQQQQQQQQQQQ\n        {icono: 'star-outline',nombre: 'Qorvo',ticker: 'QRVO.US'}, {icono: 'star-outline',nombre: 'Qualcomm',ticker: 'QCOM.US'},\n        {icono: 'star-outline',nombre: 'Quanta Services',ticker: 'PWR.US'}, {icono: 'star-outline',nombre: 'Quests Diagnostics',ticker: 'DGX.US'}, \n        // RRRRRRRRRRRRRRRRRRRRRR\n        {icono: 'star-outline',nombre: 'Raytheon',ticker: 'RTN.US'}, {icono: 'star-outline',nombre: 'Ralph Lauren',ticker: 'RL.US'},\n        {icono: 'star-outline',nombre: 'Range Resources',ticker: 'RRC.US'}, {icono: 'star-outline',nombre: 'Raymond James Financial',ticker: 'RJF.US'},\n        {icono: 'star-outline',nombre: 'Realty Income',ticker: 'O.US'}, {icono: 'star-outline',nombre: 'Republic Services',ticker: 'RSG.US'},\n        {icono: 'star-outline',nombre: 'Regeneron Pharmaceuticals',ticker: 'REGN.US'}, {icono: 'star-outline',nombre: 'Riot Blockchain',ticker: 'RIOT.US'},\n        {icono: 'star-outline',nombre: 'Roku',ticker: 'ROKU.US'}, {icono: 'star-outline',nombre: 'Ross Stores',ticker: 'ROST.US'},\n        {icono: 'star-outline',nombre: 'Red Hat',ticker: 'RHT.US'}, {icono: 'star-outline',nombre: 'Regions Financial',ticker: 'RF.US'},\n        {icono: 'star-outline',nombre: 'Resmed',ticker: 'RMD.US'}, {icono: 'star-outline',nombre: 'Robert Half International',ticker: 'RHI.US'},\n        {icono: 'star-outline',nombre: 'Royal Caribbean Cruises',ticker: 'RCL.US'}, {icono: 'star-outline',nombre: 'Royal Dutch Shell',ticker: 'RDS.A.US'},\n        {icono: 'star-outline',nombre: 'Rockwell Automation',ticker: 'ROK.US'}, {icono: 'star-outline',nombre: 'Rockwell Collins',ticker: 'COL.US'},\n        {icono: 'star-outline',nombre: 'Rxsight',ticker: 'RXST.US'},{icono: 'star-outline',nombre: 'Roper Industries',ticker: 'ROP.US'},{icono: 'star-outline',nombre: 'Solaredge Technologies',ticker: 'SEDG.US'},\n        // SSSSSSSSSSSSSSSSSSSSS\n        {icono: 'star-outline',nombre: 'Global Semiconductor',ticker: 'SEMI.US'},\n        {icono: 'star-outline',nombre: 'S&P Global',ticker: 'SPGI.US'}, {icono: 'star-outline',nombre: 'Salesforce.com',ticker: 'CRM.US'},\n        {icono: 'star-outline',nombre: 'Sage Therapeutics',ticker: 'SAGE.US'}, {icono: 'star-outline',nombre: 'Sanderson Farms',ticker: 'SAFM.US'},\n        {icono: 'star-outline',nombre: 'Sarepta Therapeutics',ticker: 'SRPT.US'}, {icono: 'star-outline',nombre: 'SBA Communications',ticker: 'SBAC.US'},\n        {icono: 'star-outline',nombre: 'Scripps Networks Interactive',ticker: 'SNI.US'}, {icono: 'star-outline',nombre: 'Seagate Technology',ticker: 'STX.US'},\n        {icono: 'star-outline',nombre: 'Schlumberger',ticker: 'SLB.US'}, {icono: 'star-outline',nombre: 'Sempra Energy',ticker: 'SRE.US'},\n        {icono: 'star-outline',nombre: 'Servicenow',ticker: 'NOW.US'}, {icono: 'star-outline',nombre: 'Sherwin-Williams',ticker: 'SHW.US'},\n        {icono: 'star-outline',nombre: 'Shire PLC',ticker: 'SHPG.US'}, {icono: 'star-outline',nombre: 'Sina',ticker: 'SINA.US'},\n        {icono: 'star-outline',nombre: 'Sirius XM Holdings',ticker: 'SIRI.US'}, {icono: 'star-outline',nombre: 'Skyworks Solutions',ticker: 'SWKS.US'},\n        {icono: 'star-outline',nombre: 'Splunk',ticker: 'SPLK.US'}, {icono: 'star-outline',nombre: 'Starbucks',ticker: 'SBUX.US'},\n        {icono: 'star-outline',nombre: 'Simon Property Group',ticker: 'SPG.US'}, {icono: 'star-outline',nombre: 'Snap',ticker: 'SNAP.US'},\n        {icono: 'star-outline',nombre: 'Southern Company',ticker: 'SO.US'}, {icono: 'star-outline',nombre: 'Southwest Airlines',ticker: 'LUV.US'},\n        {icono: 'star-outline',nombre: 'Square',ticker: 'SQ.US'}, {icono: 'star-outline',nombre: 'State Street',ticker: 'STT.US'},\n        {icono: 'star-outline',nombre: 'Stryker',ticker: 'SYK.US'}, {icono: 'star-outline',nombre: 'Suntrust Banks',ticker: 'STI.US'},\n        {icono: 'star-outline',nombre: 'Synchrony Financial',ticker: 'SYF.US'}, {icono: 'star-outline',nombre: 'Sysco',ticker: 'SYY.US'},\n        {icono: 'star-outline',nombre: 'Steel Dynamics',ticker: 'STLD.US'}, {icono: 'star-outline',nombre: 'SVB Financial Group',ticker: 'SIVB.US'},\n        {icono: 'star-outline',nombre: 'Symantec',ticker: 'SYMC.US'}, {icono: 'star-outline',nombre: 'Synopsys',ticker: 'SNPS.US'},\n        {icono: 'star-outline',nombre: 'Scana',ticker: 'SCG.US'}, {icono: 'star-outline',nombre: 'SPX',ticker: 'SPXC.US'}, {icono: 'star-outline',nombre: 'Shopify',ticker: 'SHOP.US'},\n        {icono: 'star-outline',nombre: 'Shockwave Medical',ticker: 'SWAV.US'},{icono: 'star-outline',nombre: 'Sigma Lithium',ticker: 'SGML.US'},{icono: 'star-outline',nombre: 'SEA LTD.',ticker: 'SE.US'},\n        // TTTTTT\n        {icono: 'star-outline',nombre: 'Temple & Webster',ticker: 'TPW.US'},\n        {icono: 'star-outline',nombre: 'Tapestry',ticker: 'TPR.US'}, {icono: 'star-outline',nombre: 'Taiwan Semiconductor',ticker: 'TSM.US'},\n        {icono: 'star-outline',nombre: 'Target',ticker: 'TGT.US'}, {icono: 'star-outline',nombre: 'Te Connectivity',ticker: 'TEL.US'},\n        {icono: 'star-outline',nombre: 'Take-Two Interactive Software',ticker: 'TTWO.US'}, {icono: 'star-outline',nombre: 'TD Ameritrade Holding',ticker: 'AMTD.US'},\n        {icono: 'star-outline',nombre: 'Technipfmc',ticker: 'FTI.US'}, {icono: 'star-outline',nombre: 'Texas Instruments',ticker: 'TXN.US'},\n        {icono: 'star-outline',nombre: 'Textron',ticker: 'TXT.US'}, {icono: 'star-outline',nombre: 'Teva Pharmaceutical',ticker: 'TEVA.US'},\n        {icono: 'star-outline',nombre: 'Thermo Fisher Scientific',ticker: 'TMO.US'}, {icono: 'star-outline',nombre: 'Time Warner',ticker: 'TWX.US'},\n        {icono: 'star-outline',nombre: 'TJX Companies',ticker: 'TJX.US'}, {icono: 'star-outline',nombre: 'Twitter',ticker: 'TWTR.US'},\n        {icono: 'star-outline',nombre: 'Tyson Foods',ticker: 'TSN.US'}, {icono: 'star-outline',nombre: 'T. Rowe Price Group',ticker: 'TROW.US'},\n        {icono: 'star-outline',nombre: 'T-Mobile US',ticker: 'TMUS.US'}, {icono: 'star-outline',nombre: 'The goodyear Tire & Rubber',ticker: 'GT.US'},\n        {icono: 'star-outline',nombre: 'Tesla',ticker: 'TSLA.US'}, {icono: 'star-outline',nombre: 'The Kraft Heinz',ticker: 'KHC.US'},\n        {icono: 'star-outline',nombre: 'The Middleby',ticker: 'MIDD.US'}, {icono: 'star-outline',nombre: 'The Priceline Group',ticker: 'PCLN.US'},\n        {icono: 'star-outline',nombre: 'Tractor Supply',ticker: 'TSCO.US'}, {icono: 'star-outline',nombre: 'Tripadvisor',ticker: 'TRIP.US'},\n        {icono: 'star-outline',nombre: 'Twenty-First Century Fox',ticker: 'FOX.US'}, \n        {icono: 'star-outline',nombre: 'The Aes Corp',ticker: 'AES.US'}, {icono: 'star-outline',nombre: 'Tiffany & Co.',ticker: 'TIF.US'},\n        {icono: 'star-outline',nombre: 'Torchmark',ticker: 'TMK.US'}, {icono: 'star-outline',nombre: 'Total System Services',ticker: 'TSS.US'},\n        {icono: 'star-outline',nombre: '2U Inc.',ticker: 'TWOU.US'}, {icono: 'star-outline',nombre: 'Tal Education Group',ticker: 'TAL.US'},\n        {icono: 'star-outline',nombre: 'Topbuild Corp.',ticker: 'BLD.US'},{icono: 'star-outline',nombre: 'Centene',ticker: 'CNC.US'},\n        {icono: 'star-outline',nombre: 'Atlassian Corp.',ticker: 'TEAM.US'},{icono: 'star-outline',nombre: 'Total System Services',ticker: 'TSS.US'},\n        {icono: 'star-outline',nombre: 'Vista Energy',ticker: 'VIST.US'},\n        // UUUUUU\n        {icono: 'star-outline',nombre: 'U.S. Bancorp',ticker: 'USB.US'}, {icono: 'star-outline',nombre: 'Union Pacific',ticker: 'UNP.US'},\n        {icono: 'star-outline',nombre: 'United Continental Holdings',ticker: 'UAL.US'}, {icono: 'star-outline',nombre: 'United Parcel Service',ticker: 'UPS.US'},\n        {icono: 'star-outline',nombre: 'United Rentals',ticker: 'URI.US'}, {icono: 'star-outline',nombre: 'United States Steel',ticker: 'X.US'},\n        {icono: 'star-outline',nombre: 'United Technologies',ticker: 'UTX.US'}, {icono: 'star-outline',nombre: 'Unitedhealth Group',ticker: 'UNH.US'},\n        {icono: 'star-outline',nombre: 'Ulta Beauty',ticker: 'ULTA.US'}, {icono: 'star-outline',nombre: 'Universal Display',ticker: 'OLED.US'},\n        {icono: 'star-outline',nombre: 'Urban Outfitters',ticker: 'URBN.US'}, {icono: 'star-outline',nombre: 'Under Armour',ticker: 'UAA.US'},\n        // VVVVVV\n        {icono: 'star-outline',nombre: 'V.F.',ticker: 'VFC.US'}, {icono: 'star-outline',nombre: 'Vale S.A.',ticker: 'VALE.US'},\n        {icono: 'star-outline',nombre: 'Valeant Pharmaceuticals',ticker: 'VRX.US'}, {icono: 'star-outline',nombre: 'Valero Energy',ticker: 'VLO.US'},\n        {icono: 'star-outline',nombre: 'Vantiv',ticker: 'VNTV.US'}, {icono: 'star-outline',nombre: 'Verizon Communications',ticker: 'VZ.US'},\n        {icono: 'star-outline',nombre: 'Visa',ticker: 'V.US'}, {icono: 'star-outline',nombre: 'Vmware',ticker: 'VMW.US'}, {icono: 'star-outline',nombre: 'Vedanta',ticker: 'VEDL.US'},\n        {icono: 'star-outline',nombre: 'Vulcan Materials',ticker: 'VMC.US'}, {icono: 'star-outline',nombre: 'Vertex Pharmaceuticals',ticker: 'VRTX.US'},\n        {icono: 'star-outline',nombre: 'Verisign',ticker: 'VRSN.US'}, {icono: 'star-outline',nombre: 'Verisk Analytics',ticker: 'VRSK.US'},\n        {icono: 'star-outline',nombre: 'Vertiv HLD',ticker: 'VRT.US'},{icono: 'star-outline',nombre: 'Viacom',ticker: 'VIAB.US'}, {icono: 'star-outline',nombre: 'Vodafone',ticker: 'VOD.US'},\n        // WWWWWW\n        {icono: 'star-outline',nombre: 'Wal-Mart Stores',ticker: 'WMT.US'}, {icono: 'star-outline',nombre: 'Walt Disney',ticker: 'DIS.US'},\n        {icono: 'star-outline',nombre: 'Wells Fargo',ticker: 'WFC.US'}, {icono: 'star-outline',nombre: 'Walgreens Boots Alliance',ticker: 'WBA.US'},\n        {icono: 'star-outline',nombre: 'Wendys',ticker: 'WEN.US'}, {icono: 'star-outline',nombre: 'Western Digital',ticker: 'WDC.US'},\n        {icono: 'star-outline',nombre: 'Willis Towers Watson Public',ticker: 'WLTW.US'}, {icono: 'star-outline',nombre: 'Workday',ticker: 'WDAY.US'},\n        {icono: 'star-outline',nombre: 'Wynn Resorts',ticker: 'WYNN.US'}, {icono: 'star-outline',nombre: 'Weibo',ticker: 'WB.US'},\n        // XXXXXX\n        {icono: 'star-outline',nombre: 'Xcel Energy',ticker: 'XEL.US'}, {icono: 'star-outline',nombre: 'Xilinx',ticker: 'XLNX.US'},\n        {icono: 'star-outline',nombre: 'Xunlei',ticker: 'XNET.US'}, {icono: 'star-outline',nombre: 'Xerox',ticker: 'XRX.US'},\n        {icono: 'star-outline',nombre: 'XL Company Switzerland',ticker: 'XL.US'}, {icono: 'star-outline',nombre: 'Xylem',ticker: 'XYL.US'},\n        // ZZZZZZ\n        {icono: 'star-outline',nombre: 'Zimmer Biomet Holdings',ticker: 'ZBH.US'}, {icono: 'star-outline',nombre: 'Zions Bancorp',ticker: 'ZION.US'},\n        {icono: 'star-outline',nombre: 'Yandex',ticker: 'YNDX.US'}, {icono: 'star-outline',nombre: 'YY Inc.',ticker: 'YY.US'},\n        {icono: 'star-outline',nombre: 'Yum! brands',ticker: 'YUM.US'}, {icono: 'star-outline',nombre: 'Zoetis',ticker: 'ZTS.US'},\n    ];\n\n    public mercadoCrypto : any[] = [ // referencias prorealtime y sp500 2/01/2018\n        {icono: 'star-outline',nombre: 'Cardano',ticker: 'ADA-USD.CC'},\n        {icono: 'star-outline',nombre: 'AdEx',ticker: 'ADX-USD.CC'},\n        {icono: 'star-outline',nombre: 'Aeternity',ticker: 'AE-USD.CC'},\n        {icono: 'star-outline',nombre: 'Aragon',ticker: 'ANT-USD.CC'},\n        {icono: 'star-outline',nombre: 'Ardor',ticker: 'ARDR-USD.CC'},\n        {icono: 'star-outline',nombre: 'Avalanche',ticker: 'AVAX-USD.CC'},\n         {icono: 'star-outline',nombre: 'ARK',ticker: 'ARK-USD.CC'},\n         {icono: 'star-outline',nombre: 'Aave',ticker: 'AAVE-USD.CC'},\n        {icono: 'star-outline',nombre: 'ATB coin',ticker: 'ATB-USD.CC'},\n         {icono: 'star-outline',nombre: 'Autumncoin',ticker: 'ATM-USD.CC'},\n          {icono: 'star-outline',nombre: 'Basic Attention Token',ticker: 'BAT-USD.CC'},\n          {icono: 'star-outline',nombre: 'BitConnect Coin',ticker: 'BCCOIN-USD.CC'},\n        {icono: 'star-outline',nombre: 'Bitcoin Cash / BCC',ticker: 'BCH-USD.CC'},\n        {icono: 'star-outline',nombre: 'ByteCoin',ticker: 'BCN-USD.CC'},\n        {icono: 'star-outline',nombre: 'BlockNet',ticker: 'BLOCK-USD.CC'},\n        {icono: 'star-outline',nombre: 'Binance Coin',ticker: 'BNB-USD.CC'},\n         {icono: 'star-outline',nombre: 'Bancor Network Token',ticker: 'BNT-USD.CC'},\n        {icono: 'star-outline',nombre: 'Bitquence',ticker: 'BQX-USD.CC'},\n         {icono: 'star-outline',nombre: 'BitcoinDark',ticker: 'BTCD-USD.CC'},\n          {icono: 'star-outline',nombre: 'Bitcoin',ticker: 'BTC-USD.CC'},\n          {icono: 'star-outline',nombre: 'Bitcoin Gold',ticker: 'BTG-USD.CC'},\n        {icono: 'star-outline',nombre: 'BTM',ticker: 'BTM-USD.CC'},\n        {icono: 'star-outline',nombre: 'Bitshares',ticker: 'BTS-USD.CC'},\n        {icono: 'star-outline',nombre: 'Civic',ticker: 'CVC-USD.CC'},\n        {icono: 'star-outline',nombre: 'DigitalCash',ticker: 'DASH-USD.CC'},\n         {icono: 'star-outline',nombre: 'Dentacoin',ticker: 'DCN-USD.CC'},\n        {icono: 'star-outline',nombre: 'Decred',ticker: 'DCR-USD.CC'},\n         {icono: 'star-outline',nombre: 'DigiByte',ticker: 'DGB-USD.CC'},\n          {icono: 'star-outline',nombre: 'Digix DAO',ticker: 'DGD-USD.CC'},\n          {icono: 'star-outline',nombre: 'district0x',ticker: 'DNT-USD.CC'},\n        {icono: 'star-outline',nombre: 'Dogecoin',ticker: 'DOGE-USD.CC'},\n        {icono: 'star-outline',nombre: 'Edgeless',ticker: 'EDG-USD.CC'},\n        {icono: 'star-outline',nombre: 'EOS',ticker: 'EOS-USD.CC'},\n        {icono: 'star-outline',nombre: 'Ethereum Classic',ticker: 'ETC-USD.CC'},\n         {icono: 'star-outline',nombre: 'Ethereum',ticker: 'ETH-USD.CC'},\n        {icono: 'star-outline',nombre: 'Metaverse',ticker: 'ETP-USD.CC'},\n         {icono: 'star-outline',nombre: 'FairCoin',ticker: 'FAIR-USD.CC'},\n          {icono: 'star-outline',nombre: 'Factoids',ticker: 'FCT-USD.CC'},\n          {icono: 'star-outline',nombre: 'FirstCoin',ticker: 'FRST-USD.CC'},\n        {icono: 'star-outline',nombre: 'FunFair',ticker: 'FUN-USD.CC'},\n        {icono: 'star-outline',nombre: 'Gamecredits',ticker: 'GAME-USD.CC'},\n        {icono: 'star-outline',nombre: 'Gas',ticker: 'GAS-USD.CC'},\n        {icono: 'star-outline',nombre: 'Byteball',ticker: 'GBYTE-USD.CC'},\n         {icono: 'star-outline',nombre: 'Gnosis',ticker: 'GNO-USD.CC'},\n        {icono: 'star-outline',nombre: 'Golem Network Token',ticker: 'GNT-USD.CC'},\n         {icono: 'star-outline',nombre: 'Hshare',ticker: 'HSR-USD.CC'},\n          {icono: 'star-outline',nombre: 'Iconomi',ticker: 'ICN-USD.CC'},\n          {icono: 'star-outline',nombre: 'ICON Project',ticker: 'ICX-USD.CC'},\n        {icono: 'star-outline',nombre: 'IOCoin',ticker: 'IOC-USD.CC'},\n        {icono: 'star-outline',nombre: 'IOTA',ticker: 'IOT-USD.CC'},\n        {icono: 'star-outline',nombre: 'Kin',ticker: 'KIN-USD.CC'},\n        {icono: 'star-outline',nombre: 'Komodo',ticker: 'KMD-USD.CC'},\n         {icono: 'star-outline',nombre: 'Kyber Network',ticker: 'KNC-USD.CC'},\n        {icono: 'star-outline',nombre: 'ChainLink',ticker: 'LINK-USD.CC'},\n         {icono: 'star-outline',nombre: 'Lykke',ticker: 'LKK-USD.CC'},\n          {icono: 'star-outline',nombre: 'Loopring',ticker: 'LRC-USD.CC'},\n          {icono: 'star-outline',nombre: 'Lisk',ticker: 'LSK-USD.CC'},\n        {icono: 'star-outline',nombre: 'Litecoin',ticker: 'LTC-USD.CC'},\n        {icono: 'star-outline',nombre: 'MaidSafe Coin',ticker: 'MAID-USD.CC'},\n        {icono: 'star-outline',nombre: 'MCAP',ticker: 'MCAP-USD.CC'},\n        {icono: 'star-outline',nombre: 'Monaco',ticker: 'MCO-USD.CC'},\n        {icono: 'star-outline',nombre: 'MultiversX',ticker: 'EGLD-USD.CC'},\n         {icono: 'star-outline',nombre: 'MobileGo',ticker: 'MGO-USD.CC'},\n        {icono: 'star-outline',nombre: 'Melon',ticker: 'MLN-USD.CC'},\n         {icono: 'star-outline',nombre: 'MonaCoin',ticker: 'MONA-USD.CC'},\n          {icono: 'star-outline',nombre: 'Metal',ticker: 'MTL-USD.CC'},\n          {icono: 'star-outline',nombre: 'NavCoin',ticker: 'NAV-USD.CC'},\n        {icono: 'star-outline',nombre: 'Neblio',ticker: 'NEBL-USD.CC'},\n        {icono: 'star-outline',nombre: 'NEO',ticker: 'NEO-USD.CC'},\n        {icono: 'star-outline',nombre: 'NoLimitCoin',ticker: 'NLC2-USD.CC'},\n        {icono: 'star-outline',nombre: 'Nexus',ticker: 'NXS-USD.CC'},\n         {icono: 'star-outline',nombre: 'Nxt',ticker: 'NXT-USD.CC'},\n        {icono: 'star-outline',nombre: 'OmiseGo',ticker: 'OMG-USD.CC'},\n         {icono: 'star-outline',nombre: 'Particl',ticker: 'PART-USD.CC'},\n          {icono: 'star-outline',nombre: 'TenX',ticker: 'PAY-USD.CC'},\n          {icono: 'star-outline',nombre: 'Private Instant Verified Transaction',ticker: 'PIVX-USD.CC'},\n        {icono: 'star-outline',nombre: 'Populous',ticker: 'PPT-USD.CC'},\n        {icono: 'star-outline',nombre: 'Quoine Liquid',ticker: 'QASH-USD.CC'},\n        {icono: 'star-outline',nombre: 'Quantum Resistant Ledger',ticker: 'QRL-USD.CC'},\n        {icono: 'star-outline',nombre: 'Quant',ticker: 'QNT-USD.CC'},\n        {icono: 'star-outline',nombre: 'QTUM',ticker: 'QTUM-USD.CC'},\n         {icono: 'star-outline',nombre: 'Augur',ticker: 'REP-USD.CC'},\n        {icono: 'star-outline',nombre: 'iExec',ticker: 'RLC-USD.CC'},\n         {icono: 'star-outline',nombre: 'Salt Lending',ticker: 'SALT-USD.CC'},\n          {icono: 'star-outline',nombre: 'Siacoin',ticker: 'SC-USD.CC'},\n          {icono: 'star-outline',nombre: 'SmartCash',ticker: 'SMART-USD.CC'},\n          {icono: 'star-outline',nombre: 'Rocket Pool',ticker: 'RETH-USD.CC'},\n        {icono: 'star-outline',nombre: 'SingularDTV',ticker: 'SNGLS-USD.CC'},\n        {icono: 'star-outline',nombre: 'SONM',ticker: 'SNM-USD.CC'},\n        {icono: 'star-outline',nombre: 'Status Network Token',ticker: 'SNT-USD.CC'},\n        {icono: 'star-outline',nombre: 'Steem',ticker: 'STEEM-USD.CC'},\n         {icono: 'star-outline',nombre: 'Storj',ticker: 'STORJ-USD.CC'},\n        {icono: 'star-outline',nombre: 'Stratis',ticker: 'STRAT-USD.CC'},\n         {icono: 'star-outline',nombre: 'Substratum Network',ticker: 'SUB-USD.CC'},\n          {icono: 'star-outline',nombre: 'SysCoin',ticker: 'SYS-USD.CC'},\n          {icono: 'star-outline',nombre: 'Token as a Service',ticker: 'TAAS-USD.CC'},\n        {icono: 'star-outline',nombre: 'Tronix',ticker: 'TRX-USD.CC'},\n        {icono: 'star-outline',nombre: 'Ubiq',ticker: 'UBQ-USD.CC'},\n        {icono: 'star-outline',nombre: 'Tether',ticker: 'USDT-USD.CC'},\n        {icono: 'star-outline',nombre: 'Vechain',ticker: 'VEN-USD.CC'},\n         {icono: 'star-outline',nombre: 'Veritaseum',ticker: 'VERI-USD.CC'},\n        {icono: 'star-outline',nombre: 'VertCoin',ticker: 'VTC-USD.CC'},\n         {icono: 'star-outline',nombre: 'Waves',ticker: 'WAVES-USD.CC'},\n          {icono: 'star-outline',nombre: 'Wings DAO',ticker: 'WINGS-USD.CC'},\n          {icono: 'star-outline',nombre: 'Waltonchain',ticker: 'WTC-USD.CC'},\n        {icono: 'star-outline',nombre: 'CounterParty',ticker: 'XCP-USD.CC'},\n        {icono: 'star-outline',nombre: 'NEM',ticker: 'XEM-USD.CC'},\n        {icono: 'star-outline',nombre: 'Solana',ticker: 'SOL-USD.CC'},\n        {icono: 'star-outline',nombre: 'Stellar',ticker: 'XLM-USD.CC'},\n        {icono: 'star-outline',nombre: 'Monero',ticker: 'XMR-USD.CC'},\n         {icono: 'star-outline',nombre: 'RaiBlocks',ticker: 'XRB-USD.CC'},\n        {icono: 'star-outline',nombre: 'Ripple',ticker: 'XRP-USD.CC'},\n         {icono: 'star-outline',nombre: 'Exchange Union',ticker: 'XUC-USD.CC'},\n          {icono: 'star-outline',nombre: 'Verge',ticker: 'XVG-USD.CC'},\n          {icono: 'star-outline',nombre: 'ZCoin',ticker: 'XZC-USD.CC'},\n        {icono: 'star-outline',nombre: 'ZCash',ticker: 'ZEC-USD.CC'},\n        {icono: 'star-outline',nombre: 'ZenCash',ticker: 'ZEN-USD.CC'},\n        {icono: 'star-outline',nombre: '0x',ticker: 'ZRX-USD.CC'},\n        ];\n\n    public errorMessage;\n\n    constructor(private _servicio1: Servicio1,\n                private _favoritoService: ApiServicio\n                ){\n        this.title='Parseador total de mercados:';\n        this.contamoss = 0;\n    }\n\n    ngOnInit(){\n        // ----------------- Top Mundo ---------------------\n        \n\n        this.sleep(1000).then(() => {\n\n            this\n        ._favoritoService\n        .deletePais('topmundo')\n        .subscribe(result => {\n          console.log(result);\n             if (!result) {\n               console.log('Error al borrar');\n             }\n        }\n        ,);\n        console.log('API de TopMundo borrado');\n\n        this.contadorTopmundo = 0;\n\n        //this.crypto();\n        \n        this.espana();\n        \n        this.sleep(300000).then(() => {\n            this.eeuu();\n        });\n        this.sleep(1510000).then(() => {\n            this.australia();\n        });\n        this.sleep(2800000).then(() => {\n            this.alemania();\n        });\n        this.sleep(4020000).then(() => {\n            this.canada();\n        });\n        this.sleep(5500000).then(() => { // 1 hora 3600000\n            this.italia();\n        });\n        this.sleep(6700000).then(() => { // 1 hora 3600000\n            this.francia();\n        });\n        this.sleep(7980000).then(() => {\n            this.austria();//Meter Argentina aquí \n        });\n        this.sleep(8180000).then(() => {\n            this.belgica();// metemos irlanda aquí\n        });\n        this.sleep(9390000).then(() => {\n            this.portugal();\n        });\n        this.sleep(10000000).then(() => {\n            this.mexico();\n        });\n        this.sleep(13500000).then(() => {\n            this.brasil();\n        });\n        this.sleep(14700000).then(() => {\n            this.dinamarca();\n        });\n        this.sleep(15490000).then(() => {\n            this.holanda();\n        });\n        /*this.sleep(7200000).then(() => { // 2 horas, 7200000\n            this.suecia();\n        });\n        this.sleep(54390000).then(() => { \n            this.uk();\n        });\n        this.sleep(8200000).then(() => {\n            this.suiza();\n        });\n        \n        this.sleep(13390000).then(() => { // 3 horas 13000000\n            this.noruega();\n        });\n        this.sleep(14000000).then(() => {\n            this.rusia();\n        });\n        this.sleep(16610000).then(() => { // 4 horas 16000000\n            this.china();\n        });\n        this.sleep(17910000).then(() => {\n            this.india();\n        });*/\n        /* this.sleep(19000000).then(() => {\n            this.japon();\n        }); \n        this.sleep(18490000).then(() => {\n            this.crypto();\n        });\n        */\n    });\n        \n        //});\n}\n\n// ------------------------------- EMPIEZAN PAISES\n\nespana(){\n    this.contadorEspana = 0;\n    this\n    ._favoritoService\n    .deletePais('espana')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    },);\n    console.log('API de Espana borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('MC').subscribe(\n        result => {\n            this.modelos = result;\n            this.recopilarDatos(result, this.arrayEspana);\n            // Esperamos que seleccione los mayores de 3\n            this.sleep(40000).then(() => {\n                // Recopilamos datos anual, semetral y mensual\n                for (let stock of this.arrayEspana) {\n                this.sleep(30000).then(() => {\n                    this.mensual(stock.ticker, this.arrayEspana, 'Espana');\n                });\n                this.sleep(130000).then(() => {\n                    this.semestral(stock.ticker, this.arrayEspana, 'Espana');\n                });\n                this.sleep(230000).then(() => {\n                    this.datoGrafica1(stock.ticker, this.arrayEspana, 'Espana');\n                    this.datoGrafica2(stock.ticker, this.arrayEspana, 'Espana');\n                    this.anual(stock.ticker, this.arrayEspana, 'Espana');\n                });\n                this.sleep(340000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayEspana, 'Espana');\n                });\n                this.sleep(450000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayEspana, 'Espana');\n                });\n            \n                this.sleep(750000).then(() => {\n                    console.log(stock, 'Vemos por ejemplo que sube en espana');\n                    this._favoritoService.addPais(stock,'espana').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            }\n                            else{\n                                console.log('Información de España agregada a base de datos');\n                                this.contadorEspana = this.contadorEspana + 1;\n                            }\n                        },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                    );\n                });\n            }\n        });\n            console.log(this.arrayEspana);\n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\naustralia(){\nthis.contadorAustralia = 0;\nthis\n._favoritoService\n.deletePais('australia')\n.subscribe(result => {\n    console.log(result);\n    if (!result) {\n        console.log('Error al borrar');\n    }\n}\n,);\nconsole.log('API de Australia borrada');\nthis._servicio1.getModelos('AU').subscribe(\n    result => { \n        this.recopilarDatos(result,this.arrayAustralia);\n        this.sleep(520000).then(() => {\n            for (let stock of this.arrayAustralia) {                 \n                this.mensual(stock.ticker, this.arrayAustralia, 'Australia'); \n            this.sleep(190000).then(() => {\n                this.semestral(stock.ticker, this.arrayAustralia, 'Australia');\n            });\n                               \n            this.sleep(370000).then(() => {\n                this.datoGrafica1(stock.ticker, this.arrayAustralia, 'Australia');\n                this.datoGrafica2(stock.ticker, this.arrayAustralia, 'Australia');\n                this.anual(stock.ticker,this.arrayAustralia, 'Australia');\n            });\n            this.sleep(440000).then(() => {\n                this.biAnual(stock.ticker, this.arrayAustralia, 'Australia');\n            });\n            this.sleep(560000).then(() => {            \n                this.triAnual(stock.ticker, this.arrayAustralia, 'Australia');\n            });\n            this.sleep(850000).then(() => {\n                this._favoritoService.addPais(stock,'australia').subscribe(\n                response =>{\n                    if(!response){\n                        console.log('error al recibir confirmacion de guardado');\n                    } else{\n                        console.log('Información de Australia agregada a base de datos');\n                        this.contadorAustralia = this.contadorAustralia + 1;\n                        }\n                    },\n                error =>{\n                    console.log('Error al guardar datos')\n                }\n                );\n            });\n        }                             \n    }); \n        console.log(this.arrayAustralia); \n        \n        if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n    },\n    error => {\n        this.errorMen = <any>error;\n        if(this.errorMen != null){\n            console.log(this.errorMen);\n            console.log('Error en la peticion2');\n        }\n    }\n);\n}\n/*\njapon(){\n    this.contadorJapon = 0;\n    this\n    ._favoritoService\n    .deletePais('japon')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de japon borrada');\n    this._servicio1.getModelos('TSE').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arrayJapon);\n            this.sleep(520000).then(() => {\n                for (let stock of this.arrayJapon) {                 \n                    this.mensual(stock.ticker, this.arrayJapon, 'Japon'); \n                this.sleep(190000).then(() => {\n                    this.semestral(stock.ticker, this.arrayJapon, 'Japon');\n                });\n                                   \n                this.sleep(370000).then(() => {\n                    this.datoGrafica1(stock.ticker, this.arrayJapon, 'Japon');\n                    this.datoGrafica2(stock.ticker, this.arrayJapon, 'Japon');\n                    this.anual(stock.ticker,this.arrayJapon, 'Japon');\n                });\n                this.sleep(420000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayJapon, 'Japon');\n                });\n                this.sleep(540000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayJapon, 'Japon');\n                });\n                this.sleep(750000).then(() => {\n                    this._favoritoService.addPais(stock,'japon').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Japon agregada a base de datos');\n                            this.contadorJapon = this.contadorJapon + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arrayJapon); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n    }*/\n\nfrancia(){\n    this.contadorFrancia = 0;\n    this\n    ._favoritoService\n    .deletePais('francia')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de Francia borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('PA').subscribe(\n        result => {\n            this.recopilarDatos(result,this.arrayFrancia);\n            // Esperamos que seleccione los mayores de 3\n            this.sleep(350000).then(() => {\n                // Recopilamos datos anual, semetral y mensual\n                for (let stock of this.arrayFrancia) {                 \n                //this.sleep(100000).then(() => {\n                    this.mensual(stock.ticker, this.arrayFrancia, 'Francia'); \n                //});\n                this.sleep(150000).then(() => {\n                    this.semestral(stock.ticker, this.arrayFrancia, 'Francia');\n                });\n                                   \n                this.sleep(300000).then(() => {\n                    this.datoGrafica1(stock.ticker, this.arrayFrancia, 'Francia');\n                    this.datoGrafica2(stock.ticker, this.arrayFrancia, 'Francia');\n                    this.anual(stock.ticker, this.arrayFrancia, 'Francia');\n                });\n                this.sleep(400000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayFrancia, 'Francia');\n                });\n                this.sleep(500000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayFrancia, 'Francia');\n                });\n                this.sleep(800000).then(() => {\n                    this._favoritoService.addPais(stock,'francia').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Francia agregada a base de datos');\n                            this.contadorFrancia = this.contadorFrancia + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        });\n            console.log(this.arrayFrancia); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\nalemania(){\n    this.contadorAlemania = 0;\n    this\n        ._favoritoService\n        .deletePais('alemania')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                console.log('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Alemania borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('XETRA').subscribe(\n            result => {\n                /*let resultado = result.push({Name: 'Siltronic', Code: 'WAF', Exchange: 'XETRA', Currency: 'EUR'},\n                {Name: 'Stabilus', Code: 'STM', Exchange: 'XETRA', Currency: 'EUR'}); */\n                this.recopilarDatos(result,this.arrayAlemania);\n                this.sleep(270000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.arrayAlemania) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker, this.arrayAlemania, 'Alemania'); \n                    //});\n                    this.sleep(230000).then(() => {\n                        this.semestral(stock.ticker, this.arrayAlemania, 'Alemania');\n                    });\n                                       \n                    this.sleep(420000).then(() => {\n                        this.datoGrafica1(stock.ticker, this.arrayAlemania, 'Alemania');\n                        this.datoGrafica2(stock.ticker, this.arrayAlemania, 'Alemania');\n                        this.anual(stock.ticker, this.arrayAlemania, 'Alemania');\n                    });\n                    this.sleep(500000).then(() => {\n                        this.biAnual(stock.ticker, this.arrayAlemania, 'Alemania');\n                    });\n                    this.sleep(630000).then(() => {            \n                        this.triAnual(stock.ticker, this.arrayAlemania, 'Alemania');\n                    });\n                    this.sleep(890000).then(() => {\n                        this._favoritoService.addPais(stock,'alemania').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Alemania agregada a base de datos');\n                                this.contadorAlemania = this.contadorAlemania + 1;\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.arrayAlemania); \n                \n                if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    console.log('Error en la peticion2');\n                }\n            }\n        );\n}\n\ndinamarca(){\n    this.contadorDinamarca = 0;\n    this\n    ._favoritoService\n    .deletePais('dinamarca')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de Dinamarca borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('CO').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arrayDinamarca);\n            this.sleep(70000).then(() => {\n                for (let stock of this.arrayDinamarca) {                 \n                    this.mensual(stock.ticker, this.arrayDinamarca, 'Dinamarca'); \n                this.sleep(100000).then(() => {\n                    this.semestral(stock.ticker, this.arrayDinamarca, 'Dinamarca');\n                });\n                                   \n                this.sleep(160000).then(() => {\n                    this.datoGrafica1(stock.ticker,this.arrayDinamarca, 'Dinamarca');\n                    this.datoGrafica2(stock.ticker,this.arrayDinamarca, 'Dinamarca');\n                    this.anual(stock.ticker, this.arrayDinamarca, 'Dinamarca');\n                });\n                this.sleep(190000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayDinamarca, 'Dinamarca');\n                });\n                this.sleep(210000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayDinamarca, 'Dinamarca');\n                });\n                this.sleep(350000).then(() => {\n                    this._favoritoService.addPais(stock,'dinamarca').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Dinamarca agregada a base de datos');\n                            this.contadorDinamarca = this.contadorDinamarca + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        });\n            console.log(this.arrayDinamarca); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\naustria(){// en realidad es argentina\n    this.contadorAustria = 0;\n    this\n    ._favoritoService\n    .deletePais('austria')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de Austria borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('BA').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arrayAustria);\n            this.sleep(30000).then(() => {\n                // Recopilamos datos anual, semetral y mensual\n                for (let stock of this.arrayAustria) {                 \n                //this.sleep(100000).then(() => {\n                    this.mensual(stock.ticker, this.arrayAustria, 'Austria'); \n                //});\n                this.sleep(80000).then(() => {\n                    this.semestral(stock.ticker, this.arrayAustria, 'Austria');\n                });\n                                   \n                this.sleep(150000).then(() => {\n                    this.datoGrafica1(stock.ticker, this.arrayAustria, 'Austria');\n                    this.datoGrafica2(stock.ticker, this.arrayAustria, 'Austria');\n                    this.anual(stock.ticker, this.arrayAustria, 'Austria');\n                });\n                this.sleep(180000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayAustria, 'Austria');\n                });\n                this.sleep(240000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayAustria, 'Austria');\n                });\n                this.sleep(370000).then(() => {\n                    this._favoritoService.addPais(stock,'austria').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Austria agregada a base de datos');\n                            this.contadorAustria = this.contadorAustria + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arrayAustria); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\nbelgica(){ // es irlanda\n    this.contadorBelgica = 0;\n    this\n    ._favoritoService\n    .deletePais('belgica')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de Belgica borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('IR').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arrayBelgica);\n            this.sleep(35000).then(() => {\n                // Recopilamos datos anual, semetral y mensual\n                for (let stock of this.arrayBelgica) {                 \n                this.mensual(stock.ticker, this.arrayBelgica, 'Belgica');\n                this.sleep(75000).then(() => {\n                    this.semestral(stock.ticker, this.arrayBelgica, 'Belgica');\n                });\n                this.sleep(145000).then(() => {\n                    this.datoGrafica1(stock.ticker,this.arrayBelgica, 'Belgica');\n                    this.datoGrafica2(stock.ticker,this.arrayBelgica, 'Belgica');\n                    this.anual(stock.ticker, this.arrayBelgica, 'Belgica');\n                });\n                this.sleep(250000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayBelgica, 'Belgica');\n                });\n                this.sleep(360000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayBelgica, 'Belgica');\n                });\n                this.sleep(575000).then(() => {\n                    this._favoritoService.addPais(stock,'belgica').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Belgica agregada a base de datos');\n                            this.contadorBelgica = this.contadorBelgica + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arrayBelgica); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n/*\nsuecia(){\n    this.contadorSuecia = 0;\n    this\n    ._favoritoService\n    .deletePais('suecia')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de Suecia borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('ST').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arraySuecia);\n            this.sleep(300000).then(() => {\n                for (let stock of this.arraySuecia) {                 \n                    this.mensual(stock.ticker, this.arraySuecia, 'Suecia'); \n                this.sleep(225000).then(() => {\n                    this.semestral(stock.ticker, this.arraySuecia, 'Suecia');\n                });\n                                   \n                this.sleep(425000).then(() => {\n                    this.datoGrafica1(stock.ticker, this.arraySuecia, 'Suecia');\n                    this.datoGrafica2(stock.ticker, this.arraySuecia, 'Suecia');\n                    this.anual(stock.ticker, this.arraySuecia, 'Suecia');\n                });\n                this.sleep(480000).then(() => {\n                    this.biAnual(stock.ticker, this.arraySuecia, 'Suecia');\n                });\n                this.sleep(530000).then(() => {            \n                    this.triAnual(stock.ticker, this.arraySuecia, 'Suecia');\n                });\n                this.sleep(600000).then(() => {\n                    this._favoritoService.addPais(stock,'suecia').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Suecia agregada a base de datos');\n                            this.contadorSuecia = this.contadorSuecia + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arraySuecia); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\nsuiza(){\n    this.contadorSuiza = 0;\n    this\n    ._favoritoService\n    .deletePais('suiza')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de Suiza borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('SW').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arraySuiza);\n            this.sleep(350000).then(() => {\n                for (let stock of this.arraySuiza) {                 \n                    this.mensual(stock.ticker, this.arraySuiza, 'Suiza'); \n                this.sleep(230000).then(() => {\n                    this.semestral(stock.ticker, this.arraySuiza, 'Suiza');\n                });                   \n                this.sleep(430000).then(() => {\n                    this.datoGrafica1(stock.ticker, this.arraySuiza, 'Suiza');\n                    this.datoGrafica2(stock.ticker, this.arraySuiza, 'Suiza');\n                    this.anual(stock.ticker, this.arraySuiza, 'Suiza');\n                });\n                this.sleep(480000).then(() => {\n                    this.biAnual(stock.ticker, this.arraySuiza, 'Suiza');\n                });\n                this.sleep(530000).then(() => {            \n                    this.triAnual(stock.ticker, this.arraySuiza, 'Suiza');\n                });\n                this.sleep(650000).then(() => {\n                    this._favoritoService.addPais(stock,'suiza').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Suiza agregada a base de datos');\n                            this.contadorSuiza = this.contadorSuiza + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arraySuiza); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\nuk(){\n    this.contadorUk = 0;\n    this\n        ._favoritoService\n        .deletePais('uk')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                console.log('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de UK borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('LSE').subscribe(\n            result => { \n                this.recopilarDatos(result,this.arrayUk);\n                this.sleep(400000).then(() => {\n                    for (let stock of this.arrayUk) {                 \n                        this.mensual(stock.ticker, this.arrayUk, 'UK'); \n                    this.sleep(320000).then(() => {\n                        this.semestral(stock.ticker, this.arrayUk, 'UK');\n                    });\n                                       \n                    this.sleep(620000).then(() => {\n                        this.datoGrafica1(stock.ticker, this.arrayUk, 'UK');\n                        this.datoGrafica2(stock.ticker, this.arrayUk, 'UK');\n                        this.anual(stock.ticker, this.arrayUk, 'UK');\n                    });\n                    this.sleep(700000).then(() => {\n                        this.biAnual(stock.ticker, this.arrayUk, 'UK');\n                    });\n                    this.sleep(800000).then(() => {            \n                        this.triAnual(stock.ticker, this.arrayUk, 'UK');\n                    });\n                    this.sleep(920000).then(() => {\n                        this._favoritoService.addPais(stock,'uk').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de UK agregada a base de datos');\n                                this.contadorUk = this.contadorUk + 1;\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            });\n                console.log(this.arrayUk); \n                \n                if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    console.log('Error en la peticion2');\n                }\n            }\n        );\n}*/\n\nmexico(){\n    this.contadorMexico = 0;\n    this\n    ._favoritoService\n    .deletePais('mexico')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de Mexico borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('MX').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arrayMexico);\n            this.sleep(400000).then(() => {\n                // Recopilamos datos anual, semetral y mensual\n                for (let stock of this.arrayMexico) {                 \n                //this.sleep(100000).then(() => {\n                    this.mensual(stock.ticker, this.arrayMexico, 'Mexico'); \n                //});\n                this.sleep(330000).then(() => {\n                    this.semestral(stock.ticker, this.arrayMexico, 'Mexico');\n                });\n                                   \n                this.sleep(660000).then(() => {\n                    this.datoGrafica1(stock.ticker,this.arrayMexico, 'Mexico');\n                    this.datoGrafica2(stock.ticker,this.arrayMexico, 'Mexico');\n                    this.anual(stock.ticker, this.arrayMexico, 'Mexico');\n                });\n                this.sleep(700000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayMexico, 'Mexico');\n                });\n                this.sleep(800000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayMexico, 'Mexico');\n                });\n                this.sleep(1190000).then(() => {\n                    this._favoritoService.addPais(stock,'mexico').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Mexico agregada a base de datos');\n                            this.contadorMexico = this.contadorMexico + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        });\n            console.log(this.arrayMexico); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\nportugal(){\n    this.contadorPortugal = 0;\n    this\n    ._favoritoService\n    .deletePais('portugal')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de Portugal borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('LS').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arrayPortugal);\n            this.sleep(20000).then(() => {\n                for (let stock of this.arrayPortugal) {                 \n                    this.mensual(stock.ticker, this.arrayPortugal, 'Portugal'); \n                this.sleep(20000).then(() => {\n                    this.semestral(stock.ticker, this.arrayPortugal, 'Portugal');\n                });\n                                   \n                this.sleep(55000).then(() => {\n                    this.datoGrafica1(stock.ticker,this.arrayPortugal, 'Portugal');\n                    this.datoGrafica2(stock.ticker, this.arrayPortugal, 'Portugal');\n                    this.anual(stock.ticker, this.arrayPortugal, 'Portugal');\n                });\n                this.sleep(700000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayPortugal, 'Portugal');\n                });\n                this.sleep(800000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayPortugal, 'Portugal');\n                });\n                this.sleep(105000).then(() => {\n                    this._favoritoService.addPais(stock,'portugal').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Portugal agregada a base de datos');\n                            this.contadorPortugal = this.contadorPortugal + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arrayPortugal); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\nholanda(){\n    this.contadorHolanda = 0;\n    this\n    ._favoritoService\n    .deletePais('holanda')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,); \n    console.log('API de Holanda borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('AS').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arrayHolanda);\n            this.sleep(120000).then(() => {\n                for (let stock of this.arrayHolanda) {                 \n                    this.mensual(stock.ticker, this.arrayHolanda, 'Holanda'); \n                this.sleep(180000).then(() => {\n                    this.semestral(stock.ticker, this.arrayHolanda, 'Holanda');\n                });\n                                   \n                this.sleep(350000).then(() => {\n                    this.datoGrafica1(stock.ticker,this.arrayHolanda, 'Holanda');\n                    this.datoGrafica2(stock.ticker,this.arrayHolanda, 'Holanda');\n                    this.anual(stock.ticker, this.arrayHolanda, 'Holanda');\n                });\n                this.sleep(400000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayHolanda, 'Holanda');\n                });\n                this.sleep(450000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayHolanda, 'Holanda');\n                });\n                this.sleep(630000).then(() => {\n                    this._favoritoService.addPais(stock,'holanda').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Holanda agregada a base de datos');\n                            this.contadorHolanda = this.contadorHolanda + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arrayHolanda); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\nitalia(){\n    this.contadorItalia = 0;\n    this\n    ._favoritoService\n    .deletePais('italia')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de Italia borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('MI').subscribe(\n        result => {\n            /*let resultado = result.push({Name: 'Ferrari', Code: 'RACE', Exchange: 'MI', Currency: 'EUR'});*/ \n            this.recopilarDatos(result,this.arrayItalia);\n            this.sleep(300000).then(() => {\n                // Recopilamos datos anual, semetral y mensual\n                for (let stock of this.arrayItalia) {                 \n                    this.mensual(stock.ticker, this.arrayItalia, 'Italia'); \n                this.sleep(300000).then(() => {\n                    this.semestral(stock.ticker, this.arrayItalia, 'Italia');\n                });\n                                   \n                this.sleep(600000).then(() => {\n                    this.datoGrafica1(stock.ticker, this.arrayItalia, 'Italia');\n                    this.datoGrafica2(stock.ticker, this.arrayItalia, 'Italia');\n                    this.anual(stock.ticker, this.arrayItalia, 'Italia');\n                });\n                this.sleep(700000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayItalia, 'Italia');\n                });\n                this.sleep(800000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayItalia, 'Italia');\n                });\n                this.sleep(110000).then(() => {\n                    this._favoritoService.addPais(stock,'italia').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Italia agregada a base de datos');\n                            this.contadorItalia = this.contadorItalia + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arrayItalia); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\nnoruega(){\n    this.contadorNoruega = 0;\n    this\n    ._favoritoService\n    .deletePais('noruega')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de Noruega borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('OL').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arrayNoruega);\n            this.sleep(100000).then(() => {\n                for (let stock of this.arrayNoruega) {                 \n                    this.mensual(stock.ticker, this.arrayNoruega, 'Noruega'); \n                this.sleep(110000).then(() => {\n                    this.semestral(stock.ticker, this.arrayNoruega, 'Noruega');\n                });\n                                   \n                this.sleep(210000).then(() => {\n                    this.datoGrafica1(stock.ticker,this.arrayNoruega, 'Noruega');\n                    this.datoGrafica2(stock.ticker,this.arrayNoruega, 'Noruega');\n                    this.anual(stock.ticker, this.arrayNoruega, 'Noruega');\n                });\n                this.sleep(290000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayNoruega, 'Noruega');\n                });\n                this.sleep(340000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayNoruega, 'Noruega');\n                });\n                this.sleep(510000).then(() => {\n                    this._favoritoService.addPais(stock,'noruega').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Noruega agregada a base de datos');\n                            this.contadorNoruega = this.contadorNoruega + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arrayNoruega); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\nrusia(){\n    this.contadorRusia = 0;\n    this\n    ._favoritoService\n    .deletePais('rusia')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de Rusia borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('MCX').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arrayRusia);\n            this.sleep(200000).then(() => {\n                // Recopilamos datos anual, semetral y mensual\n                for (let stock of this.arrayRusia) {                 \n                //this.sleep(100000).then(() => {\n                    this.mensual(stock.ticker, this.arrayRusia, 'Rusia'); \n                //});\n                this.sleep(210000).then(() => {\n                    this.semestral(stock.ticker, this.arrayRusia, 'Rusia');\n                });\n                                   \n                this.sleep(350000).then(() => {\n                    this.datoGrafica1(stock.ticker,this.arrayRusia, 'Rusia');\n                    this.datoGrafica2(stock.ticker,this.arrayRusia, 'Rusia');\n                    this.anual(stock.ticker, this.arrayRusia, 'Rusia');\n                });\n                this.sleep(400000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayRusia, 'Rusia');\n                });\n                this.sleep(460000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayRusia, 'Rusia');\n                });\n                this.sleep(690000).then(() => {\n                    this._favoritoService.addPais(stock,'rusia').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de Rusia agregada a base de datos');\n                            this.contadorRusia = this.contadorRusia + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arrayRusia); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\nbrasil(){\n    this.contadorBrasil = 0;\n    this\n        ._favoritoService\n        .deletePais('brasil')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                console.log('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Brasil borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('SA').subscribe( \n            result => { \n                this.recopilarDatos(result,this.arrayBrasil);\n                this.sleep(90000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.arrayBrasil) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker, this.arrayBrasil, 'Brasil'); \n                    //});\n                    this.sleep(100000).then(() => {\n                        this.semestral(stock.ticker, this.arrayBrasil, 'Brasil');\n                    });\n                                       \n                    this.sleep(210000).then(() => {\n                        this.datoGrafica1(stock.ticker, this.arrayBrasil, 'Brasil');\n                        this.datoGrafica2(stock.ticker, this.arrayBrasil, 'Brasil');\n                        this.anual(stock.ticker, this.arrayBrasil, 'Brasil');\n                    });\n                    this.sleep(260000).then(() => {\n                        this.biAnual(stock.ticker, this.arrayBrasil, 'Brasil');\n                    });\n                    this.sleep(310000).then(() => {            \n                        this.triAnual(stock.ticker, this.arrayBrasil, 'Brasil');\n                    });\n                    this.sleep(680000).then(() => {\n                        this._favoritoService.addPais(stock,'brasil').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Brasil agregada a base de datos');\n                                this.contadorBrasil = this.contadorBrasil + 1;\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.arrayBrasil); \n                \n                if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    console.log('Error en la peticion2');\n                }\n            }\n        );\n}\n\ncanada(){\n    this.contadorCanada = 0;\n    this\n        ._favoritoService\n        .deletePais('canada')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                console.log('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Canada borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('TO').subscribe(\n            result => { \n                this.recopilarDatos(result,this.arrayCanada);\n                this.sleep(320000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.arrayCanada) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker, this.arrayCanada, 'Canada'); \n                    //});\n                    this.sleep(160000).then(() => {\n                        this.semestral(stock.ticker, this.arrayCanada, 'Canada');\n                    });\n                                       \n                    this.sleep(330000).then(() => {\n                        this.datoGrafica1(stock.ticker, this.arrayCanada, 'Canada');\n                        this.datoGrafica2(stock.ticker, this.arrayCanada, 'Canada');\n                        this.anual(stock.ticker, this.arrayCanada, 'Canada');\n                    });\n                    this.sleep(400000).then(() => {\n                        this.biAnual(stock.ticker, this.arrayCanada, 'Canada');\n                    });\n                    this.sleep(500000).then(() => {            \n                        this.triAnual(stock.ticker, this.arrayCanada, 'Canada');\n                    });\n                    this.sleep(800000).then(() => {\n                        this._favoritoService.addPais(stock,'canada').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Canada agregada a base de datos');\n                                this.contadorCanada = this.contadorCanada + 1;\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.arrayCanada); \n                \n                if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    console.log('Error en la peticion2');\n                }\n            }\n        );\n}\n\nchina(){\n    this.contadorChina = 0;\n    this\n    ._favoritoService\n    .deletePais('china')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de China borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('SHG').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arrayChina);\n            this.sleep(320000).then(() => {\n                // Recopilamos datos anual, semetral y mensual\n                for (let stock of this.arrayChina) {                 \n                //this.sleep(100000).then(() => {\n                    this.mensual(stock.ticker, this.arrayChina, 'China'); \n                //});\n                this.sleep(170000).then(() => {\n                    this.semestral(stock.ticker, this.arrayChina, 'China');\n                });\n                                   \n                this.sleep(350000).then(() => {\n                    this.datoGrafica1(stock.ticker, this.arrayChina, 'China');\n                    this.datoGrafica2(stock.ticker, this.arrayChina, 'China');\n                    this.anual(stock.ticker, this.arrayChina, 'China');\n                });\n                this.sleep(450000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayChina, 'China');\n                });\n                this.sleep(550000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayChina, 'China');\n                });\n                this.sleep(750000).then(() => {\n                    this._favoritoService.addPais(stock,'china').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de China agregada a base de datos');\n                            this.contadorChina = this.contadorChina + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arrayChina); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\nindia(){\n    this.contadorIndia = 0;\n    this\n    ._favoritoService\n    .deletePais('india')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    }\n    ,);\n    console.log('API de India borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('NSE').subscribe(\n        result => { \n            this.recopilarDatos(result,this.arrayIndia);\n            this.sleep(120000).then(() => {\n                // Recopilamos datos anual, semetral y mensual\n                for (let stock of this.arrayIndia) {                 \n                //this.sleep(100000).then(() => {\n                    this.mensual(stock.ticker, this.arrayIndia, 'India'); \n                //});\n                this.sleep(120000).then(() => {\n                    this.semestral(stock.ticker, this.arrayIndia, 'India');\n                });\n                                   \n                this.sleep(220000).then(() => {\n                    this.datoGrafica1(stock.ticker, this.arrayIndia, 'India');\n                    this.datoGrafica2(stock.ticker, this.arrayIndia, 'India');\n                    this.anual(stock.ticker, this.arrayIndia, 'India');\n                });\n                this.sleep(320000).then(() => {\n                    this.biAnual(stock.ticker, this.arrayIndia, 'India');\n                });\n                this.sleep(420000).then(() => {            \n                    this.triAnual(stock.ticker, this.arrayIndia, 'India');\n                });\n                this.sleep(600000).then(() => {\n                    this._favoritoService.addPais(stock,'india').subscribe(\n                    response =>{\n                        if(!response){\n                            console.log('error al recibir confirmacion de guardado');\n                        } else{\n                            console.log('Información de India agregada a base de datos');\n                            this.contadorIndia = this.contadorIndia + 1;\n                            }\n                        },\n                    error =>{\n                        console.log('Error al guardar datos')\n                    }\n                    );\n                });\n            }                             \n        }); \n            console.log(this.arrayIndia); \n            \n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\neeuu(){\n    this.contadorEEUU = 0;\n    this\n    ._favoritoService\n    .deletePais('eeuu')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    },);;\n    console.log('API de EEUU borrada');\n\n    // Recopilamos datos anual, semestral y mensual\n    for (let stock of this.mercadoAcciones) { \n        \n            \n        this.valor(stock.ticker);\n           \n        this\n            .sleep(200000)\n            .then(() => {\n                this.mensual(stock.ticker, this.mercadoAcciones, 'EEUU');\n            });\n        this\n            .sleep(400000)\n            .then(() => {\n                this.semestral(stock.ticker, this.mercadoAcciones, 'EEUU');\n            });\n        this\n            .sleep(600000)\n            .then(() => {\n                this.datoGrafica1(stock.ticker, this.mercadoAcciones, 'EEUU');\n                this.datoGrafica2(stock.ticker, this.mercadoAcciones, 'EEUU');\n                this.anual(stock.ticker, this.mercadoAcciones, 'EEUU');\n            });\n\n            this.sleep(800000).then(() => {\n                this.biAnual(stock.ticker, this.mercadoAcciones, 'EEUU');\n            });\n            this.sleep(1000000).then(() => {            \n                this.triAnual(stock.ticker, this.mercadoAcciones, 'EEUU');\n            });\n\n        this\n            .sleep(1500000)\n            .then(() => {\n                console.log(stock);\n                this\n                    ._favoritoService\n                    .addPais(stock, 'eeuu')\n                    .subscribe(response => {\n                        if (!response) {\n                            console.log('error al recibir confirmacion de guardado');\n                        } else {\n                            console.log('Información de EEUU agregada a base de datos');\n                            this.contadorEEUU = this.contadorEEUU + 1;\n                        }\n                    }, error => {\n                        console.log('Error al guardar datos')\n                    });\n            });\n    }\n    console.log(this.mercadoAcciones);\n}\n\n\ncrypto(){\n    this.contadorCrypto = 0;\n    this\n    ._favoritoService\n    .deletePais('crypto')\n    .subscribe(result => {\n        console.log(result);\n        if (!result) {\n            console.log('Error al borrar');\n        }\n    },);\n    console.log('API de crypto borrada');\n    // Aquí le pasamos el mercado que queremos parsear\n    this._servicio1.getModelos('CC').subscribe(\n        result => {\n            this.modelos = result;\n            this.recopilarDatos(result, this.mercadoCrypto);\n            // Esperamos que seleccione los mayores de 3\n            this.sleep(40000).then(() => {\n                // Recopilamos datos anual, semetral y mensual\n                for (let stock of this.mercadoCrypto) {\n                this.sleep(30000).then(() => {\n                    this.mensual(stock.ticker, this.mercadoCrypto, 'crypto');\n                });\n                this.sleep(80000).then(() => {\n                    this.semestral(stock.ticker, this.mercadoCrypto, 'crypto');\n                });\n                this.sleep(140000).then(() => {\n                    this.datoGrafica2(stock.ticker, this.mercadoCrypto, 'crypto');\n                    this.datoGrafica1(stock.ticker, this.mercadoCrypto, 'crypto');\n                    this.anual(stock.ticker, this.mercadoCrypto, 'crypto');\n                });\n                this.sleep(160000).then(() => {\n                    this.biAnual(stock.ticker, this.mercadoCrypto, 'crypto');\n                });\n                this.sleep(180000).then(() => {            \n                    this.triAnual(stock.ticker, this.mercadoCrypto, 'crypto');\n                });\n            \n                this.sleep(200000).then(() => {\n                    console.log(stock, 'Vemos por ejemplo que sube en espana');\n                    this._favoritoService.addPais(stock,'crypto').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            }\n                            else{\n                                console.log('Información de criptos agregada a base de datos');\n                                this.contadorCrypto = this.contadorCrypto + 1;\n                            }\n                        },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                    );\n                });\n            }\n        });\n            console.log(this.mercadoCrypto);\n            if(!this.modelos){console.log('Error en la petición de datos de este mercado')}\n        },\n        error => {\n            this.errorMen = <any>error;\n            if(this.errorMen != null){\n                console.log(this.errorMen);\n                console.log('Error en la peticion2');\n            }\n        }\n    );\n}\n\n// -------------------------------------- ACABAN PAISES\n\nsleep (time) {\n    return new Promise((resolve) => setTimeout(resolve, time));\n}\n\n// Miramos el Anual\nanual(tickerRecibido, array, mercado){\n    console.log('Empieza anual de '+mercado); \n    let resultado;\n    let total;\n    this._servicio1.getAnual(tickerRecibido).subscribe(\n        result => {\n            if(!result){\n                console.log('No obtenemos resultado en el parseo Anual');\n            } else { \n            let hoy = parseFloat(result[0].adjusted_close);\n            this.contamosHoy = 0;\n            while(hoy === 0 || hoy === null || hoy === undefined){\n                this.contamosHoy = this.contamosHoy + 1;\n                hoy = parseFloat(result[this.contamosHoy].adjusted_close);\n            }\n\n            let ayer = parseFloat(result[result.length - 1].adjusted_close);\n            let grafica1 = ayer;\n            this.contamoss = 1;\n            while(ayer === 0 || ayer === null || ayer === undefined){\n                this.contamoss = this.contamoss + 1;\n                ayer = parseFloat(result[result.length - this.contamoss].adjusted_close);\n            }\n            //if (tickerRecibido.indexOf('XRB-USD.CC') != -1 || tickerRecibido.indexOf('ICX-USD.CC') != -1){\n            //console.log('HOYAno',hoy,'AyerAno',ayer,tickerRecibido);\n            //}\n\n                if(hoy > ayer){\n                    let cuentaResultado = hoy - ayer;\n                    let comparacion = cuentaResultado / ayer;\n                    total = comparacion * 100;\n                    resultado = parseInt(total);\n                    let anual = resultado;\n                    \n                    if (anual < 2000){// || tickerRecibido.indexOf('.CC') != -1\n                        let grafica6m;\n                        let datoAnual = array.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        grafica6m = datoAnual.grafica6m;\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n                        datoAnual.grafica1 = grafica1;\n\n                        /*if(tickerRecibido.indexOf('.LS') === -1 && tickerRecibido.indexOf('.BA') === -1 && tickerRecibido.indexOf('.TO') === -1 && tickerRecibido.indexOf('.ST') === -1 && tickerRecibido.indexOf('USD.CC') === -1 && tickerRecibido.indexOf('.VI') === -1 && tickerRecibido.indexOf('.BR') === -1 && tickerRecibido.indexOf('.SW') === -1 && tickerRecibido.indexOf('.CO') === -1 && tickerRecibido.indexOf('.OL') === -1 && tickerRecibido.indexOf('.SHG') === -1 && tickerRecibido.indexOf('.NSE') === -1 && tickerRecibido.indexOf('.SA') === -1 && tickerRecibido.indexOf('.MX') === -1 && tickerRecibido.indexOf('.MCX') === -1){\n                        this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                            result => {\n                                if(!result){\n                                    alert('No obtenemos resultado en el parseo BiAnual')\n                                } else {\n                                let hoyBi = parseFloat(result[0].adjusted_close);\n                                let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                let grafica2 = ayerBi;\n                                    if(hoyBi > ayerBi){\n                                        let cuentaResultado = hoyBi - ayerBi;\n                                        let comparacion = cuentaResultado / ayerBi;\n                                        total = comparacion * 100;\n                                        resultado = parseInt(total);\n                                        let biAnual = resultado;\n                                        datoAnual.biAnual=biAnual;\n\n                                        if(biAnual > 150 && biAnual > anual && tickerRecibido != 'ES.PA' && tickerRecibido != 'TDW.US' && tickerRecibido != 'DIS.MI'){\n\n                                            this.datoGrafica1(tickerRecibido, array, mercado);\n                                            this.datoGrafica2(tickerRecibido, array, mercado);\n                                            this._servicio1.getriAnual(tickerRecibido).subscribe(\n                                                result => {\n                                                    if(!result){\n                                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                                    } else {\n                                                    let hoytri = parseFloat(result[0].adjusted_close);\n                                                    let ayertri = parseFloat(result[result.length - 1].adjusted_close);\n                                                    let grafica3 = ayertri;\n                                                        if(hoytri > ayertri){\n                                                            let cuentaResultado = hoytri - ayertri;\n                                                            let comparacion = cuentaResultado / ayertri;\n                                                            total = comparacion * 100;\n                                                            resultado = parseInt(total);\n                                                            let triAnual = resultado;\n                                                            datoAnual.triAnual=triAnual;\n                                                            let datosGrafica = array.find((p) => {\n                                                                return p.ticker === tickerRecibido;\n                                                            });\n                                                            let grafica18m = datosGrafica.grafica18m;\n                                                            let grafica23m = datosGrafica.grafica23m;\n                    \n                                                            if(triAnual > 350 && triAnual >= biAnual && ayertri <= ayerBi && ayertri < ayer){\n                                                                // && tickerRecibido.indexOf('.AS') === -1 && anual > datoAnual.semestral && datoAnual.semestral > datoAnual.mensual && tickerRecibido.indexOf('.LS') === -1 && tickerRecibido.indexOf('.NSE') === -1 && tickerRecibido.indexOf('.SA') === -1 && tickerRecibido.indexOf('.MX') === -1 && tickerRecibido.indexOf('.MCX') === -1\n                                                                if(anual > 40 && anual < 400 && datoAnual.semestral < 330 && datoAnual.mensual < 90){\n                                                                    let stock = {nombre: datoAnual.nombre, ticker: tickerRecibido, icono: 'star-outline', moneda: 'EUR', valor: datoAnual.valor, grafica18m : grafica18m, grafica23m : grafica23m, grafica6m: grafica6m, grafica3: grafica3, grafica2: grafica2, grafica1: grafica1, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual, biAnual: datoAnual.biAnual, triAnual: datoAnual.triAnual};\n                                                                    this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                                        response =>{\n                                                                            if(!response){\n                                                                                console.log('error al recibir confirmacion de guardado');\n                                                                            }\n                                                                            else{\n                                                                                console.log('Información de '+mercado+' agregada a Top Mundo');\n                                                                                this.contadorTopmundo = this.contadorTopmundo + 1;\n                                                                                }\n                                                                        },\n                                                                        error =>{\n                                                                            console.log('Error al guardar datos')\n                                                                        }\n                                                                    );\n                                                                }                                                             \n                                                            }\n                                                        }\n                                                    }\n                                                  }\n                                        )}\n                                    }\n                                }\n                            }\n                        )}\n                    }*/\n                }}\n                else if(hoy < ayer){\n                    let cuentaResultado = ayer - hoy;\n                    let comparacion = cuentaResultado / ayer;\n                    total = comparacion * 100;\n                    resultado = -(parseInt(total));\n                    let anual = resultado;\n\n                    let datoAnual = array.find((p) => {\n                        return p.ticker === tickerRecibido;\n                    });\n                    datoAnual.anual=anual;\n                    datoAnual.anualD='baja';\n                    datoAnual.grafica1 = grafica1;\n                    \n                } else if(hoy == ayer){\n                    resultado = 0;\n                    let anual = resultado;\n\n                    let datoAnual = array.find((p) => {\n                        return p.ticker === tickerRecibido;\n                    });\n                    datoAnual.anual=anual;\n                    datoAnual.anualD='sube';\n                    datoAnual.grafica1 = grafica1; \n                } \n            }\n        },\n    );\n}\n\nbiAnual(tickerRecibido, array, mercado){\n    console.log('Empieza biAnual de '+mercado); \n    let resultado;\n    let total;\n    this._servicio1.getbiAnual(tickerRecibido).subscribe(\n        result => {\n            if(!result){\n                console.log('No obtenemos resultado en el parseo biAnual');\n            } else {     \n            let hoyBi = parseFloat(result[0].adjusted_close);\n            this.contamosHoy = 0;\n            while(hoyBi === 0 || hoyBi === null || hoyBi === undefined){\n                this.contamosHoy = this.contamosHoy + 1;\n                hoyBi = parseFloat(result[this.contamosHoy].adjusted_close);\n            }\n            let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n            let grafica2 = ayerBi;\n            this.contamoss = 1;\n            while(ayerBi === 0 || ayerBi === null || ayerBi === undefined){\n                this.contamoss = this.contamoss + 1;\n                ayerBi = parseFloat(result[result.length - this.contamoss].adjusted_close);       \n            }\n            if(hoyBi > ayerBi){\n                let cuentaResultado = hoyBi - ayerBi;\n                let comparacion = cuentaResultado / ayerBi;\n                total = comparacion * 100;\n                resultado = parseInt(total);\n                let biAnual = resultado;\n                    \n                    if (biAnual < 3000){//|| tickerRecibido.indexOf('.CC') != -1\n                        let datobiAnual = array.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datobiAnual.biAnual=biAnual;\n                        datobiAnual.biAnualD='sube';\n                        datobiAnual.grafica2 = grafica2;\n                    }\n            }          \n            else if(hoyBi < ayerBi){\n                    let cuentaResultado = ayerBi - hoyBi;\n                    let comparacion = cuentaResultado / ayerBi;\n                    total = comparacion * 100;\n                    resultado = -(parseInt(total));\n                    let biAnual = resultado;\n\n                    let datobiAnual = array.find((p) => {\n                        return p.ticker === tickerRecibido;\n                    });\n                    datobiAnual.biAnual=biAnual;\n                    datobiAnual.biAnualD='baja';\n                    datobiAnual.grafica2 = grafica2;\n                    \n                } else if(hoyBi == ayerBi){\n                    resultado = 0;\n                    let biAnual = resultado;\n\n                    let datobiAnual = array.find((p) => {\n                          return p.ticker === tickerRecibido;\n                    });\n                    datobiAnual.biAnual=biAnual;\n                    datobiAnual.biAnualD='sube';\n                    datobiAnual.grafica2 = grafica2; \n                } \n            }\n        },\n    );\n}\n\ntriAnual(tickerRecibido, array, mercado){\n    console.log('Empieza triAnual de '+mercado);\n    let resultado;\n    let total;\n    this._servicio1.getriAnual(tickerRecibido).subscribe(\n        result => {\n            if(!result){\n                console.log('No obtenemos resultado en el parseo biAnual');\n            } else {     \n            let hoyTri = parseFloat(result[0].adjusted_close);\n            this.contamosHoy = 0;\n            while(hoyTri === 0 || hoyTri === null || hoyTri === undefined){\n                this.contamosHoy = this.contamosHoy + 1;\n                hoyTri = parseFloat(result[this.contamosHoy].adjusted_close);\n            }\n            let ayerTri = parseFloat(result[result.length - 1].adjusted_close);\n            let grafica3 = ayerTri;\n            this.contamoss = 1;\n            while(ayerTri === 0 || ayerTri === null || ayerTri === undefined){\n                this.contamoss = this.contamoss + 1;\n                ayerTri = parseFloat(result[result.length - this.contamoss].adjusted_close);\n            }\n            if(hoyTri > ayerTri){     \n                let cuentaResultado = hoyTri - ayerTri;\n                let comparacion = cuentaResultado / ayerTri;\n                total = comparacion * 100;\n                resultado = parseInt(total);\n                let triAnual = resultado;\n                // Hago aquí el cambio\n                if(triAnual < 20000){\n                let dameDatos = array.find((p) => {\n                    return p.ticker === tickerRecibido;\n                });\n                dameDatos.triAnual = triAnual;\n                dameDatos.triAnualD='sube';\n                dameDatos.grafica3 = grafica3;\n                if(tickerRecibido.indexOf('.LS') === -1 && tickerRecibido.indexOf('.BA') === -1 && tickerRecibido.indexOf('.TO') === -1 && tickerRecibido.indexOf('.ST') === -1 && tickerRecibido.indexOf('USD.CC') === -1 &&\n                    tickerRecibido.indexOf('.VI') === -1 && tickerRecibido.indexOf('.BR') === -1 && tickerRecibido.indexOf('.SW') === -1 && tickerRecibido.indexOf('.CO') === -1 && tickerRecibido.indexOf('.OL') === -1 && tickerRecibido.indexOf('.SHG') === -1 && \n                    tickerRecibido.indexOf('.NSE') === -1 && tickerRecibido.indexOf('.SA') === -1 && tickerRecibido.indexOf('.MX') === -1 && tickerRecibido.indexOf('.MCX') === -1 && tickerRecibido != 'ES.PA' && tickerRecibido != 'TDW.US' && \n                    tickerRecibido != 'DIS.MI' && tickerRecibido != '1NVDA.MI' && tickerRecibido != 'NVD.XETRA' && tickerRecibido != '3LMS.PA' && tickerRecibido != 'TNK.US' && tickerRecibido != 'TLX.AU' && tickerRecibido != '3LSA.PA' && tickerRecibido != 'UCG.MI' && \n                    tickerRecibido != 'SLX.AU' && tickerRecibido != 'NRP.US' && tickerRecibido != 'XPBRA.MC' && tickerRecibido != 'HMSB.XETRA' && tickerRecibido != 'LLY.XETRA'){\n                    let biAnual = dameDatos.biAnual;\n                    let anual = dameDatos.anual;\n                    let grafica18m = dameDatos.grafica18m;\n                    let grafica23m = dameDatos.grafica23m;\n                    let ayerBi = dameDatos.grafica2;\n                    let ayer = dameDatos.grafica1;\n                    let semestral = dameDatos.semestral;\n                    let nombre = dameDatos.nombre;\n                    let mensual = dameDatos.mensual;\n                    let valor = dameDatos.valor;\n                    let grafica6m = dameDatos.grafica6m;\n                        if(biAnual > 150 && biAnual >= anual){\n                            if(triAnual > 300 && ayerTri < ayer){ //&& triAnual >= biAnual && ayerTri <= ayerBi\n                                // && tickerRecibido.indexOf('.AS') === -1 && anual > datoAnual.semestral && datoAnual.semestral > datoAnual.mensual && tickerRecibido.indexOf('.LS') === -1 && tickerRecibido.indexOf('.NSE') === -1 && tickerRecibido.indexOf('.SA') === -1 && tickerRecibido.indexOf('.MX') === -1 && tickerRecibido.indexOf('.MCX') === -1\n                                if(anual > 30 && anual < 600 && semestral < 330 && mensual < 120){\n                                    let stock = {nombre: nombre, ticker: tickerRecibido, icono: 'star-outline', moneda: 'EUR', valor: valor, grafica18m : grafica18m, grafica23m : grafica23m, grafica6m: grafica6m, grafica3: grafica3, grafica2: ayerBi, grafica1: ayer, anual: anual,semestral: semestral,mensual: mensual, biAnual: biAnual, triAnual: triAnual};\n                                        this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                            response =>{\n                                                if(!response){\n                                                    console.log('error al recibir confirmacion de guardado');\n                                                }\n                                                else{\n                                                    console.log('Información de '+mercado+' agregada a Top Mundo');\n                                                    this.contadorTopmundo = this.contadorTopmundo + 1;\n                                                }\n                                            },\n                                            error =>{\n                                                console.log('Error al guardar datos')\n                                            }\n                                        );    \n                                }\n                            }\n                        }\n                    }\n             }}\n                           \n            else if(hoyTri < ayerTri){\n                    let cuentaResultado = ayerTri - hoyTri;\n                    let comparacion = cuentaResultado / ayerTri;\n                    total = comparacion * 100;\n                    resultado = -(parseInt(total));\n                    let triAnual = resultado;\n                    let datoTriAnual = array.find((p) => {\n                        return p.ticker === tickerRecibido;\n                    });\n                    datoTriAnual.triAnual=triAnual;\n                    datoTriAnual.triAnualD='baja';\n                    datoTriAnual.grafica3 = grafica3;\n                    \n                } else if(hoyTri == ayerTri){\n                    resultado = 0;\n                    let triAnual = resultado;\n                    let datoTriAnual = array.find((p) => {\n                        return p.ticker === tickerRecibido;\n                    });\n                    datoTriAnual.triAnual=triAnual;\n                    datoTriAnual.triAnualD='sube';\n                    datoTriAnual.grafica3 = grafica3; \n                } \n            }\n        },\n    );\n}\n\ndatoGrafica1(tickerRecibido, array, mercado){\n    let caca = mercado;\n    this._servicio1.getDatoGrafica1(tickerRecibido).subscribe(\n        result => {\n            if(!result){\n                console.log('No obtenemos resultado en el parseo biAnual');\n            } else {     \n            let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n            let grafica1 = ayerBi;\n            let datoFalta = array.find((p) => {\n                return p.ticker === tickerRecibido;\n            });\n            datoFalta.grafica18m = grafica1;\n                    }\n             })}\n\n\n             datoGrafica2(tickerRecibido, array, mercado){\n                let caca = mercado;\n                this._servicio1.getDatoGrafica2(tickerRecibido).subscribe(\n                    result => {\n                        if(!result){\n                            console.log('No obtenemos resultado en el parseo biAnual');\n                        } else {     \n                        let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                        let grafica1 = ayerBi;\n                        let datoFalta = array.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoFalta.grafica23m = grafica1;\n                                }\n                         })}               \n            \n// Miramos el Semestral\nsemestral(tickerRecibido, array, mercado){ //base,mercado\n    console.log('Empieza Semestral de '+mercado); \n    let resultado;\n    let total;\n    this._servicio1.getSemestral(tickerRecibido).subscribe(\n        result => {\n            if(!result){\n                console.log('No obtenemos resultado en el parseo Anual');\n            } else {\n            let hoy = parseFloat(result[0].adjusted_close);\n            this.contamosHoy = 0;\n            while(hoy === 0 || hoy === null || hoy === undefined){\n                this.contamosHoy = this.contamosHoy + 1;\n                hoy = parseFloat(result[this.contamosHoy].adjusted_close);\n            }\n\n            let ayer = parseFloat(result[result.length - 1].adjusted_close);\n            let grafica6m = ayer;\n            this.contamoss = 1;\n            while(ayer === 0 || ayer === null || ayer === undefined){\n                this.contamoss = this.contamoss + 1;\n                ayer = parseFloat(result[result.length - this.contamoss].adjusted_close);\n            }\n            \n                if(hoy > ayer){\n                    let cuentaResultado = hoy - ayer;\n                    let comparacion = cuentaResultado / ayer;\n                    total = comparacion * 100;\n                    resultado = parseInt(total);\n                    let anual = resultado;\n\n                if (anual < 600){ //|| tickerRecibido.indexOf('.CC') != -1\n\n                    let datoAnual = array.find((p) => {\n                        return p.ticker === tickerRecibido;\n                    });\n                    datoAnual.semestral=anual;\n                    datoAnual.semestralD='sube';\n                    datoAnual.grafica6m = grafica6m; \n                }\n\n                } else if(hoy < ayer){\n                    let cuentaResultado = ayer - hoy;\n                    let comparacion = cuentaResultado / ayer;\n                    total = comparacion * 100;\n                    resultado = -(parseInt(total));\n                    let anual = resultado;\n\n                    let datoAnual = array.find((p) => {\n                        return p.ticker === tickerRecibido;\n                    });\n                    datoAnual.semestral=anual;\n                    datoAnual.semestralD='baja';\n                    datoAnual.grafica6m = grafica6m;\n                    \n                } else if(hoy == ayer){\n                    resultado = 0;\n                    let anual = resultado;\n\n                    let datoAnual = array.find((p) => {\n                        return p.ticker === tickerRecibido;\n                    });\n                    datoAnual.semestral=anual;\n                    datoAnual.semestralD='sube';\n                    datoAnual.grafica6m = grafica6m;\n                } \n            }\n        },\n    );\n}\n\n// Miramos el Anual\nmensual(tickerRecibido, array, mercado){ //base,mercado\n    console.log('Empieza mensual de '+mercado);\n    let resultado;\n    let total;\n    this._servicio1.getMensual(tickerRecibido).subscribe(\n        result => {\n            if(!result){\n                console.log('DE DONDE VENDERA',result);\n                console.log('No obtenemos resultado en el parseo Anual por lo que le damos valor 0');\n            } else {\n            let hoy = parseFloat(result[0].adjusted_close);\n            this.contamosHoy = 0;\n            while(hoy === 0 || hoy === null || hoy === undefined){\n                this.contamosHoy = this.contamosHoy + 1;\n                hoy = parseFloat(result[this.contamosHoy].adjusted_close);\n            }\n\n            let ayer = parseFloat(result[result.length - 1].adjusted_close);\n            this.contamoss = 1;\n            while(ayer === 0 || ayer === null || ayer === undefined){\n                this.contamoss = this.contamoss + 1;\n                ayer = parseFloat(result[result.length - this.contamoss].adjusted_close);\n            }\n            //this.contamoss = this.contamoss + 1;\n            //console.log('HOY',hoy,'Ayer',ayer,tickerRecibido,this.contamoss);\n            \n                if(hoy > ayer){\n                    let cuentaResultado = hoy - ayer;\n                    let comparacion = cuentaResultado / ayer;\n                    total = comparacion * 100;\n                    resultado = parseInt(total);\n                    let anual = resultado;\n                    if (anual < 300){//|| tickerRecibido.indexOf('.CC') != -1\n                    let datoAnual = array.find((p) => {\n                        return p.ticker === tickerRecibido;\n                    });\n                    datoAnual.mensual=anual;\n                    datoAnual.mensualD='sube';\n                }\n\n                } else if(hoy < ayer){\n                    let cuentaResultado = ayer - hoy;\n                    let comparacion = cuentaResultado / ayer;\n                    total = comparacion * 100;\n                    resultado = -(parseInt(total));\n                    let anual = resultado;\n\n                    let datoAnual = array.find((p) => {\n                        return p.ticker === tickerRecibido;\n                    });\n                    datoAnual.mensual=anual;\n                    datoAnual.mensualD='baja';\n                    \n                } else if(hoy == ayer){\n                    resultado = 0;\n                    let anual = resultado;\n\n                    let datoAnual = array.find((p) => {\n                        return p.ticker === tickerRecibido;\n                    });\n                    datoAnual.mensual=anual;\n                    datoAnual.mensualD='sube';\n                }\n            }\n        },\n    );\n}\n\n// Aquí creamos el array de objetos final que luego leemos en el html\nrecopilarDatos(result, array){ // mirar aquí y descartar acciones con precios bajos         \n    for (let stock of result) {\n        let ticker: String;\n        console.log('Recopilamos datos de este mercado'); \n                let nombre: string = stock.Name;\n                if(stock.Exchange === 'ASX'){\n                 ticker = stock.Code+'.AU';\n                 console.log(ticker);\n                } else{\n                 ticker = stock.Code+'.'+stock.Exchange;\n                }\n                let moneda: string = stock.Currency;\n                let icono = 'star-outline';\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            console.log('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            array.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy,\n                                \"icono\": icono,\n                              });   \n                        \n                        }\n                    }\n                    });\n            }                 \n}\n\nvalor(ticker) {\n    this\n        ._servicio1\n        .seleccionarMas3(ticker)\n        .subscribe(result => {\n            if (!result) {\n                console.log('No obtenemos resultados de acciones')\n            } else {\n                let hoy = parseFloat(result.previousClose);\n\n                if(ticker.indexOf('USD.CC') === -1){\n                if (hoy < 3) {\n                    for (let i = this.mercadoAcciones.length - 1; i >= 0; i--) {\n                        if (ticker === this.mercadoAcciones[i].ticker) {\n                            this\n                                .mercadoAcciones\n                                .splice(i, 1); //this is the part where I 'delete' the object\n                        }\n                    }\n                } else {\n                    let datoAnual = this\n                        .mercadoAcciones\n                        .find((p) => {\n                            return p.ticker === ticker;\n                        });\n                    datoAnual.valor = hoy;\n                }\n                // Si no es accion es cryptomoneda y pasamos de su valor monetario\n            } else {\n                let datoAnual = this\n                        .mercadoCrypto\n                        .find((p) => {\n                            return p.ticker === ticker;\n                        });\n                    datoAnual.valor = hoy;\n            }\n                //if(hoy > 3){}\n            }\n        },);\n}\n\nparseFloat(value) {\n    let decimales = parseFloat(value).toFixed(1);\n    return decimales;\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/apiRobot.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-australia',\n    templateUrl: '../vistas/australia.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Australia implements OnInit {\n    \n    //para pipe\n    // para contador de bucle\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top australia';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('australia')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Australia borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('AU').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(520000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(150000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(300000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(490000).then(() => {\n                        this._favoritoService.addPais(stock,'australia').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Australia agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,3).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'AUS', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'AUS', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos         \n        for (let stock of result) {\n            console.log('Recopilamos datos del mercado Australiano'); \n                    let nombre: string = stock.Name;\n                    let ticker: string = stock.Code+'.'+stock.Country;\n                    let moneda: string = stock.Currency;\n                    this._servicio1.seleccionarMas3(ticker).subscribe(\n                        result => {\n                            if(!result){\n                                alert('No obtenemos resultados de acciones')\n                            } else { \n                            let hoy = parseFloat(result.close); //[0] \n                            if(hoy > 3){\n                                this.datosFinales.push({\n                                    \"nombre\": nombre,\n                                    \"ticker\": ticker,\n                                    \"moneda\": moneda,\n                                    \"valor\": hoy\n                                  });   \n                            \n                            }\n                        }\n                        });\n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/australia.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-austria',\n    templateUrl: '../vistas/austria.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Austria implements OnInit {\n    \n    //para pipe\n    // para contador de bucle\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Austria';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('austria')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Austria borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('VI').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(10000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(10000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(20000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(50000).then(() => {\n                        this._favoritoService.addPais(stock,'austria').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Austria agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado Austriaco'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/austria.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-belgica',\n    templateUrl: '../vistas/belgica.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Belgica implements OnInit {\n    \n    //para pipe\n    // para contador de bucle\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Belgica';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('belgica')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Belgica borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('BR').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(20000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    this.sleep(30000).then(() => {\n                        this.mensual(stock.ticker);\n                    });\n                    this.sleep(70000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                    this.sleep(130000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(160000).then(() => {\n                        this._favoritoService.addPais(stock,'belgica').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Belgica agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado Belga'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/belgica.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-brasil',\n    templateUrl: '../vistas/brasil.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Brasil implements OnInit {\n    \n    //para pipe\n    // para contador de bucle\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Brasil';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('brasil')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Brasil borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('SA').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(80000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(80000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(160000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(240000).then(() => {\n                        this._favoritoService.addPais(stock,'brasil').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Brasil agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'DolarBrasil', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado Brasileño'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/brasil.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-canada',\n    templateUrl: '../vistas/canada.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Canada implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Canada';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('canada')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Canada borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('TO').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(320000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(150000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(300000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(500000).then(() => {\n                        this._favoritoService.addPais(stock,'canada').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Canada agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'CanadaDOLAR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado Canadiense'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/canada.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-china',\n    templateUrl: '../vistas/china.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class China implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top China';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('china')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de China borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('SHG').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(320000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(150000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(300000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(500000).then(() => {\n                        this._favoritoService.addPais(stock,'china').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de China agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n                        // Aquí metemos el nuevo código del biAnual\n                        this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                            result => {\n                                if(!result){\n                                    alert('No obtenemos resultado en el parseo BiAnual')\n                                } else {\n                                let hoyBi = parseFloat(result[0].adjusted_close);\n                                let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                    if(hoyBi > ayerBi){\n                                        let cuentaResultado = hoyBi - ayerBi;\n                                        let comparacion = cuentaResultado / ayerBi;\n                                        total = comparacion * 100;\n                                        resultado = parseInt(total);\n                                        let biAnual = resultado;\n\n                                        if(biAnual > 150 && biAnual > anual){\n                                          let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'CanadaDOLAR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                          this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                              response =>{\n                                                  if(!response){\n                                                      console.log('error al recibir confirmacion de guardado');\n                                                  }\n                                                  else{\n                                                      console.log('Información de Topmundo agregada a base de datos');\n                                                  }\n                                              },\n                                              error =>{\n                                                  console.log('Error al guardar datos')\n                                              }\n                                          );\n                                        }\n                                      }\n                                    }\n                                  }\n                                )\n                        // Aquí termina el nuevo código del bianual\n                    }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'CanadaDOLAR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado Chino'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/china.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-dinamarca',\n    templateUrl: '../vistas/dinamarca.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Dinamarca implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Dinamarca';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('dinamarca')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Dinamarca borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('CO').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(70000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(40000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(80000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(100000).then(() => {\n                        this._favoritoService.addPais(stock,'dinamarca').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Dinamarca agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            });\n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'CanadaDOLAR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'CanadaDOLAR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado Danés'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/dinamarca.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-eeuu',\n    templateUrl: '../vistas/eeuu.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class EEUU implements OnInit {\n    \n        //para pipe\n        isDesc : boolean = false;\n        column : String = 'anual';\n        direction : number;\n        public favorito : Modelo1;\n    \n        public titulo : string;\n        reverse : boolean = false;\n        order : String = 'anual';\n        public errorMen;\n        public mercadoAcciones : any[] = [ // referencias prorealtime y sp500 2/01/2018\n            {icono: 'ios-star-outline',nombre: '3m Company',ticker: 'MMM.US'},\n            {icono: 'ios-star-outline',nombre: 'Abbott Laboratories',ticker: 'ABT.US'},\n            {icono: 'ios-star-outline',nombre: 'ABBVIE',ticker: 'ABBV.US'},\n            {icono: 'ios-star-outline',nombre: 'Accenture PLC',ticker: 'ACN.US'},\n            {icono: 'ios-star-outline',nombre: 'Activision Blizzard',ticker: 'ATVI.US'},\n             {icono: 'ios-star-outline',nombre: 'Adobe Systems',ticker: 'ADBE.US'},\n            {icono: 'ios-star-outline',nombre: 'Advanced Micro Devices',ticker: 'AMD.US'},\n             {icono: 'ios-star-outline',nombre: 'AES Corp.',ticker: 'AES.US'},\n              {icono: 'ios-star-outline',nombre: 'Aetna',ticker: 'AET.US'},\n            {icono: 'ios-star-outline',nombre: 'Affiliated Managers Group',ticker: 'AMG.US'},\n            {icono: 'ios-star-outline',nombre: 'AFLAC',ticker: 'AFL.US'},\n    {icono: 'ios-star-outline',nombre: 'Agnc Investment',ticker: 'AGNC.US'},\n             {icono: 'ios-star-outline',nombre: 'Agilent Technologies',ticker: 'A.US'},\n            {icono: 'ios-star-outline',nombre: 'Akamai Technologies',ticker: 'AKAM.US'},\n             {icono: 'ios-star-outline',nombre: 'Air Products & Chemicals',ticker: 'APD.US'},\n            {icono: 'ios-star-outline',nombre: 'Alcoa',ticker: 'AA.US'},\n            {icono: 'ios-star-outline',nombre: 'Alexion Pharmaceuticals',ticker: 'ALXN.US'},\n            {icono: 'ios-star-outline',nombre: 'Alibaba Group Holding',ticker: 'BABA.US'},\n             {icono: 'ios-star-outline',nombre: 'Allergan PLC',ticker: 'AGN.US'},\n            {icono: 'ios-star-outline',nombre: 'Align Technology',ticker: 'ALGN.US'},\n             {icono: 'ios-star-outline',nombre: 'Alnylam Pharmaceuticals',ticker: 'ALNY.US'},\n            {icono: 'ios-star-outline',nombre: 'Allstate Corp.',ticker: 'ALL.US'},\n             {icono: 'ios-star-outline',nombre: 'Allegion',ticker: 'ALLE.US'},\n             {icono: 'ios-star-outline',nombre: 'Allergan',ticker: 'AGN.US'},\n            {icono: 'ios-star-outline',nombre: 'Altria Group',ticker: 'MO.US'},\n             {icono: 'ios-star-outline',nombre: 'Alliance Data Systems',ticker: 'ADS.US'},\n            {icono: 'ios-star-outline',nombre: 'Alliant Energy',ticker: 'LNT.US'},\n             {icono: 'ios-star-outline',nombre: 'Allstate',ticker: 'ALL.US'},\n            {icono: 'ios-star-outline',nombre: 'Alphabet (Google)',ticker: 'GOOGL.US'},\n             {icono: 'ios-star-outline',nombre: 'Advansix',ticker: 'ASIX.US'},\n            {icono: 'ios-star-outline',nombre: 'Altaba',ticker: 'AABA.US'},\n             {icono: 'ios-star-outline',nombre: 'Amazon',ticker: 'AMZN.US'},\n              {icono: 'ios-star-outline',nombre: 'Ameren',ticker: 'AEE.US'},\n            {icono: 'ios-star-outline',nombre: 'Ametek',ticker: 'AME.US'},\n             {icono: 'ios-star-outline',nombre: 'Amphenol',ticker: 'APH.US'},\n            {icono: 'ios-star-outline',nombre: 'American Airlines Group',ticker: 'AAL.US'},\n             {icono: 'ios-star-outline',nombre: 'American Water Works Company',ticker: 'AWK.US'},\n            {icono: 'ios-star-outline',nombre: 'American Electric Power',ticker: 'AEP.US'},\n             {icono: 'ios-star-outline',nombre: 'American Express',ticker: 'AXP.US'},\n            {icono: 'ios-star-outline',nombre: 'American International Group',ticker: 'AIG.US'},\n             {icono: 'ios-star-outline',nombre: 'American Tower',ticker: 'AMT.US'},\n            {icono: 'ios-star-outline',nombre: 'Ameriprise Financial',ticker: 'AMP.US'},\n             {icono: 'ios-star-outline',nombre: 'AmerisourceBergen',ticker: 'ABC.US'},\n            {icono: 'ios-star-outline',nombre: 'Amgen',ticker: 'AMGN.US'},\n             {icono: 'ios-star-outline',nombre: 'Analog Devices',ticker: 'ADI.US'},\n            {icono: 'ios-star-outline',nombre: 'Anadarko Petroleum',ticker: 'APC.US'},\n             {icono: 'ios-star-outline',nombre: 'Analog Devices',ticker: 'ADI.US'},\n            {icono: 'ios-star-outline',nombre: 'Andeavor',ticker: 'ANDV.US'},\n             {icono: 'ios-star-outline',nombre: 'Anheuser-BUsch Inbev',ticker: 'BUD.US'},\n            {icono: 'ios-star-outline',nombre: 'Anthem',ticker: 'ANTM.US'},\n             {icono: 'ios-star-outline',nombre: 'ANSYS',ticker: 'ANSS.US'},\n            {icono: 'ios-star-outline',nombre: 'Aon plc',ticker: 'AON.US'},\n             {icono: 'ios-star-outline',nombre: 'Apache Corporation',ticker: 'APA.US'},\n             {icono: 'ios-star-outline',nombre: 'Apple',ticker: 'AAPL.US'},\n            {icono: 'ios-star-outline',nombre: 'Applied Materials',ticker: 'AMAT.US'},\n             {icono: 'ios-star-outline',nombre: 'Arconic',ticker: 'ARNC.US'},\n              {icono: 'ios-star-outline',nombre: 'Assurant',ticker: 'AIZ.US'},\n            {icono: 'ios-star-outline',nombre: 'Arista Networks',ticker: 'ANET.US'},\n             {icono: 'ios-star-outline',nombre: 'AT&T',ticker: 'T.US'},\n            {icono: 'ios-star-outline',nombre: 'Asml Holding N.V.',ticker: 'ASML.US'},\n             {icono: 'ios-star-outline',nombre: 'Autodesk',ticker: 'ADSK.US'},\n            {icono: 'ios-star-outline',nombre: 'Automatic Data Processing',ticker: 'ADP.US'},\n             {icono: 'ios-star-outline',nombre: 'Autozone',ticker: 'AZO.US'},\n            {icono: 'ios-star-outline',nombre: 'Avis Budget Group',ticker: 'CAR.US'},\n             {icono: 'ios-star-outline',nombre: 'AvalonBay Communities',ticker: 'AVB.US'},\n             {icono: 'ios-star-outline',nombre: 'Alpha Metallurgical',ticker: 'AMR.US'},\n            // BBBBBBBBBBBBBBBBBB\n            {icono: 'ios-star-outline',nombre: 'Ball',ticker: 'BLL.US'},\n            {icono: 'ios-star-outline',nombre: 'Baidu',ticker: 'BIDU.US'},\n             {icono: 'ios-star-outline',nombre: 'Baker Hughes',ticker: 'BHGE.US'},\n            {icono: 'ios-star-outline',nombre: 'Bank of America',ticker: 'BAC.US'},\n             {icono: 'ios-star-outline',nombre: 'Bank of New York Mellon',ticker: 'BK.US'},\n            {icono: 'ios-star-outline',nombre: 'Baozun',ticker: 'BZUN.US'},\n            {icono: 'ios-star-outline',nombre: 'Bard',ticker: 'BCR.US'},\n            {icono: 'ios-star-outline',nombre: 'Baxter International',ticker: 'BAX.US'},\n            {icono: 'ios-star-outline',nombre: 'BB&T',ticker: 'BBT.US'},\n            {icono: 'ios-star-outline',nombre: 'Bed Bath & Beyond',ticker: 'BBBY.US'},\n            {icono: 'ios-star-outline',nombre: 'Becton Dickinson',ticker: 'BDX.US'},\n            {icono: 'ios-star-outline',nombre: 'Berkshire Hathaway',ticker: 'BRK.B.US'},\n            {icono: 'ios-star-outline',nombre: 'Best Buy.',ticker: 'BBY.US'},\n            {icono: 'ios-star-outline',nombre: 'Biogen',ticker: 'BIIB.US'},\n            {icono: 'ios-star-outline',nombre: 'Biomarin Pharmaceutical',ticker: 'BMRN.US'},\n            {icono: 'ios-star-outline',nombre: 'Boeing Company',ticker: 'BA.US'},\n            {icono: 'ios-star-outline',nombre: 'Blackrock',ticker: 'BLK.US'},\n            {icono: 'ios-star-outline',nombre: 'Bluebird Bio',ticker: 'BLUE.US'},\n            {icono: 'ios-star-outline',nombre: 'Boston Scientific',ticker: 'BSX.US'},\n            {icono: 'ios-star-outline',nombre: 'BP P.L.C.',ticker: 'BP.US'},\n            {icono: 'ios-star-outline',nombre: 'Bristol-Myers Squibb',ticker: 'BMY.US'},\n            {icono: 'ios-star-outline',nombre: 'Brinks Company',ticker: 'BCO.US'},\n            {icono: 'ios-star-outline',nombre: 'Broadcom LTD.',ticker: 'AVGO.US'},\n            {icono: 'ios-star-outline',nombre: 'Broadsoft',ticker: 'BSFT.US'},\n            {icono: 'ios-star-outline',nombre: 'Buffalo Wild Wings',ticker: 'BWLD.US'},\n            {icono: 'ios-star-outline',nombre: 'BWX Technologies',ticker: 'BWXT.US'},\n            {icono: 'ios-star-outline',nombre: 'Biontech Se.',ticker: 'BNTX.US'},\n            // CCCCCCCCCCCCCCCCCC\n            {icono: 'ios-star-outline',nombre: 'C.H. Robinson Worldwide',ticker: 'CHRW.US'},\n            {icono: 'ios-star-outline',nombre: 'C.R. Bard',ticker: 'BCR.US'},\n            {icono: 'ios-star-outline',nombre: 'Cadence Design Systems',ticker: 'CDNS.US'},\n            {icono: 'ios-star-outline',nombre: 'Capital One Financial',ticker: 'COF.US'},\n            {icono: 'ios-star-outline',nombre: 'Caesars Entertainment',ticker: 'CZR.US'},\n            {icono: 'ios-star-outline',nombre: 'Cardinal Health',ticker: 'CAH.US'},\n            {icono: 'ios-star-outline',nombre: 'Carnival',ticker: 'CCL.US'},\n            {icono: 'ios-star-outline',nombre: 'Caterpillar',ticker: 'CAT.US'},\n            {icono: 'ios-star-outline',nombre: 'Cavium',ticker: 'CAVM.US'},\n            {icono: 'ios-star-outline',nombre: 'Cboe Global Markets',ticker: 'CBOE.US'},\n            {icono: 'ios-star-outline',nombre: 'CBS',ticker: 'CBS.US'},\n            {icono: 'ios-star-outline',nombre: 'CDK Global',ticker: 'CDK.US'},\n            {icono: 'ios-star-outline',nombre: 'Celgene',ticker: 'CELG.US'},\n            {icono: 'ios-star-outline',nombre: 'Centurylink',ticker: 'CTL.US'},\n            {icono: 'ios-star-outline',nombre: 'Charles Schwab',ticker: 'SCHW.US'},\n            {icono: 'ios-star-outline',nombre: 'Cerner',ticker: 'CERN.US'},\n            {icono: 'ios-star-outline',nombre: 'Charter Communications',ticker: 'CHTR.US'},\n            {icono: 'ios-star-outline',nombre: 'Check Point Software Technologies',ticker: 'CHKP.US'},\n            {icono: 'ios-star-outline',nombre: 'Chevron',ticker: 'CVX.US'},\n            {icono: 'ios-star-outline',nombre: 'Chipotle Mexican Grill',ticker: 'CMG.US'},\n            {icono: 'ios-star-outline',nombre: 'China Lodging Group',ticker: 'HTHT.US'},\n            {icono: 'ios-star-outline',nombre: 'Chubb LTD.',ticker: 'CB.US'},\n            {icono: 'ios-star-outline',nombre: 'Cigna',ticker: 'CI.US'},\n            {icono: 'ios-star-outline',nombre: 'Cintas',ticker: 'CTAS.US'},\n            {icono: 'ios-star-outline',nombre: 'Cisco Systems',ticker: 'CSCO.US'},\n            {icono: 'ios-star-outline',nombre: 'Citigroup',ticker: 'C.US'},\n            {icono: 'ios-star-outline',nombre: 'Citizens Financial Group',ticker: 'CFG.US'},\n            {icono: 'ios-star-outline',nombre: 'Citrix Systems',ticker: 'CTXS.US'},\n            {icono: 'ios-star-outline',nombre: 'Clovis Oncology',ticker: 'CLVS.US'},\n            {icono: 'ios-star-outline',nombre: 'CME Group',ticker: 'CME.US'},\n            {icono: 'ios-star-outline',nombre: 'Coca-Cola',ticker: 'KO.US'},\n            {icono: 'ios-star-outline',nombre: 'Colgate-Palmolive',ticker: 'CL.US'},\n            {icono: 'ios-star-outline',nombre: 'Cognex',ticker: 'CGNX.US'},\n            {icono: 'ios-star-outline',nombre: 'Cognizant Technology Solutions',ticker: 'CTSH.US'},\n            {icono: 'ios-star-outline',nombre: 'Conocophillips',ticker: 'COP.US'},\n            {icono: 'ios-star-outline',nombre: 'Comerica',ticker: 'CMA.US'},\n            {icono: 'ios-star-outline',nombre: 'Conagra brands',ticker: 'CAG.US'},\n            {icono: 'ios-star-outline',nombre: 'Concho Resources',ticker: 'CXO.US'},\n            {icono: 'ios-star-outline',nombre: 'Cooper Companies',ticker: 'COO.US'},\n            {icono: 'ios-star-outline',nombre: 'Coty',ticker: 'COTY.US'},\n            {icono: 'ios-star-outline',nombre: 'CSRA',ticker: 'CSRA.US'},\n            {icono: 'ios-star-outline',nombre: 'Coherent',ticker: 'COHR.US'},\n            {icono: 'ios-star-outline',nombre: 'Comcast',ticker: 'CMCSA.US'},\n            {icono: 'ios-star-outline',nombre: 'Commscope Holding',ticker: 'COMM.US'},\n            {icono: 'ios-star-outline',nombre: 'Constellation Brands',ticker: 'STZ.US'},\n            {icono: 'ios-star-outline',nombre: 'Costar Group',ticker: 'CSGP.US'},\n            {icono: 'ios-star-outline',nombre: 'Costco Wholesale',ticker: 'COST.US'},\n            {icono: 'ios-star-outline',nombre: 'Credit Acceptance',ticker: 'CACC.US'},\n            {icono: 'ios-star-outline',nombre: 'Crown Castle International',ticker: 'CCI.US'},\n            {icono: 'ios-star-outline',nombre: 'CSX',ticker: 'CSX.US'},\n            {icono: 'ios-star-outline',nombre: 'Ctrip.com International',ticker: 'CTRP.US'},\n            {icono: 'ios-star-outline',nombre: 'Cummins',ticker: 'CMI.US'},\n            {icono: 'ios-star-outline',nombre: 'CVS Health',ticker: 'CVS.US'},\n            {icono: 'ios-star-outline',nombre: 'Cypress Semiconductor',ticker: 'CY.US'},\n            {icono: 'ios-star-outline',nombre: 'Consol Energy',ticker: 'CEIX.US'},{icono: 'ios-star-outline',nombre: 'Crowstrikes Holdings',ticker: 'CRWD.US'},\n            // DDDDDDDDDDDDDDDDDDDDD\n            {icono: 'ios-star-outline',nombre: 'D.R. Horton',ticker: 'DHI.US'},\n            {icono: 'ios-star-outline',nombre: 'Danaher',ticker: 'DHR.US'},\n            {icono: 'ios-star-outline',nombre: 'Davita',ticker: 'DVA.US'},\n            {icono: 'ios-star-outline',nombre: 'Dave & Busters Entertainment',ticker: 'PLAY.US'},\n            {icono: 'ios-star-outline',nombre: 'Darden Restaurants',ticker: 'DRI.US'},\n            {icono: 'ios-star-outline',nombre: 'Digital Realty Trust',ticker: 'DLR.US'},\n            {icono: 'ios-star-outline',nombre: 'Deere & Company',ticker: 'DE.US'},\n            {icono: 'ios-star-outline',nombre: 'Dentsply Sirona',ticker: 'XRAY.US'},\n            {icono: 'ios-star-outline',nombre: 'Delphi Technologies',ticker: 'DLPH.US'},\n            {icono: 'ios-star-outline',nombre: 'Delta Air Lines',ticker: 'DAL.US'},\n            {icono: 'ios-star-outline',nombre: 'Devon Energy',ticker: 'DVN.US'},\n            {icono: 'ios-star-outline',nombre: 'Dexcom',ticker: 'DXCM.US'},\n            {icono: 'ios-star-outline',nombre: 'Discover Financial Services',ticker: 'DFS.US'},\n            {icono: 'ios-star-outline',nombre: 'Diamondback Energy',ticker: 'FANG.US'},\n            {icono: 'ios-star-outline',nombre: 'Discovery Communications',ticker: 'DISCA.US'},\n            {icono: 'ios-star-outline',nombre: 'Dish Network',ticker: 'DISH.US'},\n            {icono: 'ios-star-outline',nombre: 'Dollar General',ticker: 'DG.US'},\n            {icono: 'ios-star-outline',nombre: 'Dominion Energy',ticker: 'D.US'},\n            {icono: 'ios-star-outline',nombre: 'Dominos Pizza',ticker: 'DPZ.US'},\n            {icono: 'ios-star-outline',nombre: 'Downdupont',ticker: 'DWDP.US'},\n            {icono: 'ios-star-outline',nombre: 'Dover',ticker: 'DOV.US'},\n            {icono: 'ios-star-outline',nombre: 'Dr Pepper Snapple Group',ticker: 'DPS.US'},\n            {icono: 'ios-star-outline',nombre: 'Dollar Tree',ticker: 'DLTR.US'},\n            {icono: 'ios-star-outline',nombre: 'Duke Energy',ticker: 'DUK.US'},\n            {icono: 'ios-star-outline',nombre: 'Dxc Technology Company',ticker: 'DXC.US'},\n            // EEEEEEEEEEEEEEEEEEEEEE \n            {icono: 'ios-star-outline',nombre: 'Eaton',ticker: 'ETN.US'},\n            {icono: 'ios-star-outline',nombre: 'Ebay',ticker: 'EBAY.US'},\n            {icono: 'ios-star-outline',nombre: 'Ecolab',ticker: 'ECL.US'},\n            {icono: 'ios-star-outline',nombre: 'Edison International',ticker: 'EIX.US'},\n            {icono: 'ios-star-outline',nombre: 'Edwards Lifesciences',ticker: 'EW.US'},\n            {icono: 'ios-star-outline',nombre: 'Electronic Arts',ticker: 'EA.US'},\n            {icono: 'ios-star-outline',nombre: 'Eli Lilly and Co.',ticker: 'LLY.US'}, {icono: 'ios-star-outline',nombre: 'Emerson Electric',ticker: 'EMR.US'},\n            {icono: 'ios-star-outline',nombre: 'Entergy',ticker: 'ETR.US'}, {icono: 'ios-star-outline',nombre: 'Envision Healthcare Holdings',ticker: 'EVHC.US'}, \n            {icono: 'ios-star-outline',nombre: 'Enterprise Products Partners',ticker: 'EPD.US'}, {icono: 'ios-star-outline',nombre: 'Eog Resources',ticker: 'EOG.US'}, \n            {icono: 'ios-star-outline',nombre: 'EQT',ticker: 'EQT.US'}, {icono: 'ios-star-outline',nombre: 'Equifax',ticker: 'EFX.US'}, {icono: 'ios-star-outline',nombre: 'Equinix',ticker: 'EQIX.US'},\n            {icono: 'ios-star-outline',nombre: 'Equity Residential',ticker: 'EQR.US'}, {icono: 'ios-star-outline',nombre: 'Essex Property Trust',ticker: 'ESS.US'},\n            {icono: 'ios-star-outline',nombre: 'Estee Lauder Companies',ticker: 'EL.US'}, {icono: 'ios-star-outline',nombre: 'Everest Re Group',ticker: 'RE.US'},\n            {icono: 'ios-star-outline',nombre: 'Eversource Energy',ticker: 'ES.US'}, {icono: 'ios-star-outline',nombre: 'Exelon',ticker: 'EXC.US'},\n            {icono: 'ios-star-outline',nombre: 'Exact Sciences',ticker: 'EXAS.US'}, {icono: 'ios-star-outline',nombre: 'Expedia',ticker: 'EXPE.US'},\n            {icono: 'ios-star-outline',nombre: 'Expeditors International ...',ticker: 'EXPD.US'}, {icono: 'ios-star-outline',nombre: 'Express Scripts Holding',ticker: 'ESRX.US'},\n            {icono: 'ios-star-outline',nombre: 'Exxon Mobil',ticker: 'XOM.US'}, {icono: 'ios-star-outline',nombre: 'Extra Space Storage',ticker: 'EXR.US'}, \n            {icono: 'ios-star-outline',nombre: 'ETrade Financial',ticker: 'ETFC.US'},\n            // FFFFFFFFFFFFFFFFFFFFFFF\n            {icono: 'ios-star-outline',nombre: 'F5 Networks',ticker: 'FFIV.US'}, {icono: 'ios-star-outline',nombre: 'Facebook',ticker: 'FB.US'},\n            {icono: 'ios-star-outline',nombre: 'Fastenal Company',ticker: 'FAST.US'}, {icono: 'ios-star-outline',nombre: 'Fifth Third Bancorp',ticker: 'FITB.US'},\n            {icono: 'ios-star-outline',nombre: 'Fedex',ticker: 'FDX.US'}, {icono: 'ios-star-outline',nombre: 'Finisar',ticker: 'FNSR.US'}, {icono: 'ios-star-outline',nombre: 'First Solar',ticker: 'FSLR.US'},\n            {icono: 'ios-star-outline',nombre: 'Fiserv',ticker: 'FISV.US'}, {icono: 'ios-star-outline',nombre: 'Five Below',ticker: 'FIVE.US'},\n            {icono: 'ios-star-outline',nombre: 'Flir Systems',ticker: 'FLIR.US'}, {icono: 'ios-star-outline',nombre: 'Flowserve',ticker: 'FLS.US'},\n            {icono: 'ios-star-outline',nombre: 'Fluor',ticker: 'FLR.US'}, {icono: 'ios-star-outline',nombre: 'FMC',ticker: 'FMC.US'},\n            {icono: 'ios-star-outline',nombre: 'Foot Locker',ticker: 'FL.US'}, {icono: 'ios-star-outline',nombre: 'Fortive',ticker: 'FTV.US'},\n            {icono: 'ios-star-outline',nombre: 'Ford Motor Company',ticker: 'F.US'}, {icono: 'ios-star-outline',nombre: 'FreePort-Mcmoran',ticker: 'FCX.US'},\n            {icono: 'ios-star-outline',nombre: 'Fortune Brands',ticker: 'FBHS.US'}, {icono: 'ios-star-outline',nombre: 'Franklin Resources',ticker: 'BEN.US'},\n            // GGGGGGGGGGGGGGGGGGGGGG \n            {icono: 'ios-star-outline',nombre: 'Gap',ticker: 'GPS.US'}, {icono: 'ios-star-outline',nombre: 'Garmin LTD.',ticker: 'GRMN.US'}, {icono: 'ios-star-outline',nombre: 'General Dynamics',ticker: 'GD.US'},\n            {icono: 'ios-star-outline',nombre: 'Gartner',ticker: 'IT.US'}, {icono: 'ios-star-outline',nombre: 'Genuine Parts',ticker: 'GPC.US'},\n            {icono: 'ios-star-outline',nombre: 'General Electric',ticker: 'GE.US'}, {icono: 'ios-star-outline',nombre: 'General Mills',ticker: 'GIS.US'},\n            {icono: 'ios-star-outline',nombre: 'General Motors',ticker: 'GM.US'}, {icono: 'ios-star-outline',nombre: 'Glaxosmithkline PLC',ticker: 'GSK.US'},\n            {icono: 'ios-star-outline',nombre: 'Gilead Sciences',ticker: 'GILD.US'}, {icono: 'ios-star-outline',nombre: 'GGP',ticker: 'GGP.US'},\n            {icono: 'ios-star-outline',nombre: 'Goldman Sachs',ticker: 'GS.US'}, {icono: 'ios-star-outline',nombre: 'Global Payments',ticker: 'GPN.US'},\n            {icono: 'ios-star-outline',nombre: 'Goodyear Tire Rubber',ticker: 'GT.US'}, \n            // HHHHHHHHHHHHHHHHHHHHHH\n            {icono: 'ios-star-outline',nombre: 'Halliburton',ticker: 'HAL.US'}, {icono: 'ios-star-outline',nombre: 'Hca Healthcare',ticker: 'HCA.US'},\n            {icono: 'ios-star-outline',nombre: 'Hasbro',ticker: 'HAS.US'}, {icono: 'ios-star-outline',nombre: 'HD Supply Holdings',ticker: 'HDS.US'},\n            {icono: 'ios-star-outline',nombre: 'Hanesbrands',ticker: 'HBI.US'}, {icono: 'ios-star-outline',nombre: 'Harley-Davidson',ticker: 'HOG.US'},\n            {icono: 'ios-star-outline',nombre: 'Harris',ticker: 'HRS.US'}, {icono: 'ios-star-outline',nombre: 'Hartford Financial Services Group',ticker: 'HIG.US'},\n            {icono: 'ios-star-outline',nombre: 'HCP',ticker: 'HCP.US'}, {icono: 'ios-star-outline',nombre: 'Helmerich & Payne',ticker: 'HP.US'},\n            {icono: 'ios-star-outline',nombre: 'Henry Schein',ticker: 'HSIC.US'}, {icono: 'ios-star-outline',nombre: 'Himax Technologies',ticker: 'HIMX.US'},\n            {icono: 'ios-star-outline',nombre: 'Hess',ticker: 'HES.US'}, {icono: 'ios-star-outline',nombre: 'Hewlett Packard Enterprise',ticker: 'HPE.US'}, \n            {icono: 'ios-star-outline',nombre: 'Hilton',ticker: 'HLT.US'}, {icono: 'ios-star-outline',nombre: 'Hormel Foods',ticker: 'HRL.US'},\n            {icono: 'ios-star-outline',nombre: 'Home Depot',ticker: 'HD.US'}, {icono: 'ios-star-outline',nombre: 'Host Marriott Financial Trust',ticker: 'HST.US'},\n            {icono: 'ios-star-outline',nombre: 'Hologic',ticker: 'HOLX.US'}, {icono: 'ios-star-outline',nombre: 'Huntington Bancshares',ticker: 'HBAN.US'},\n            {icono: 'ios-star-outline',nombre: 'Honeywell International',ticker: 'HON.US'}, {icono: 'ios-star-outline',nombre: 'HP',ticker: 'HPQ.US'}, \n            {icono: 'ios-star-outline',nombre: 'Humana',ticker: 'HUM.US'}, {icono: 'ios-star-outline',nombre: 'H&R Block',ticker: 'HRB.US'},\n            // IIIIIIIIIIIIIIIIIIIIII\n            {icono: 'ios-star-outline',nombre: 'Illinois Tool Works',ticker: 'ITW.US'}, {icono: 'ios-star-outline',nombre: 'Intercontinental Exchange',ticker: 'ICE.US'},\n            {icono: 'ios-star-outline',nombre: 'International Business Machines (IBM)',ticker: 'IBM.US'}, {icono: 'ios-star-outline',nombre: 'Iac/Interactivecorp',ticker: 'IAC.US'},\n            {icono: 'ios-star-outline',nombre: 'Idexx Laboratories',ticker: 'IDXX.US'}, {icono: 'ios-star-outline',nombre: 'IHS Markit',ticker: 'INFO.US'},\n            {icono: 'ios-star-outline',nombre: 'Illumina',ticker: 'ILMN.US'}, {icono: 'ios-star-outline',nombre: 'Incyte',ticker: 'INCY.US'}, \n            {icono: 'ios-star-outline',nombre: 'Intel',ticker: 'INTC.US'}, {icono: 'ios-star-outline',nombre: 'Intuit',ticker: 'INTU.US'}, \n            {icono: 'ios-star-outline',nombre: 'Intuitive Surgical',ticker: 'ISRG.US'}, {icono: 'ios-star-outline',nombre: 'IPG Photonics',ticker: 'IPGP.US'},\n            {icono: 'ios-star-outline',nombre: 'Irobot',ticker: 'IRBT.US'}, {icono: 'ios-star-outline',nombre: 'Invesco',ticker: 'IVZ.US'},\n            {icono: 'ios-star-outline',nombre: 'International Flavors & Fragances',ticker: 'IFF.US'}, {icono: 'ios-star-outline',nombre: 'International Paper Company',ticker: 'IP.US'}, \n            {icono: 'ios-star-outline',nombre: 'Interpublic Group of Companies',ticker: 'IPG.US'},\n            {icono: 'ios-star-outline',nombre: 'Iqvia Holdings',ticker: 'IQV.US'}, {icono: 'ios-star-outline',nombre: 'Iron Mountain',ticker: 'IRM.US'},\n            // JJJJJJJJJJJJJJJJJJJJJJ\n            {icono: 'ios-star-outline',nombre: 'Johnson & Johnson',ticker: 'JNJ.US'}, {icono: 'ios-star-outline',nombre: 'Johnson Controls International',ticker: 'JCI.US'},\n            {icono: 'ios-star-outline',nombre: 'JP Morgan',ticker: 'JPM.US'}, {icono: 'ios-star-outline',nombre: 'J.B. Hunt Transport Services',ticker: 'JBHT.US'},\n            {icono: 'ios-star-outline',nombre: 'Jack in the box',ticker: 'JACK.US'}, {icono: 'ios-star-outline',nombre: 'JD.COM',ticker: 'JD.US'},\n            {icono: 'ios-star-outline',nombre: 'Jetblue Airways',ticker: 'JBLU.US'}, {icono: 'ios-star-outline',nombre: 'Juno Therapeurtics',ticker: 'JUNO.US'},\n            {icono: 'ios-star-outline',nombre: 'Juniper Networks',ticker: 'JNPR.US'}, {icono: 'ios-star-outline',nombre: 'John Bean',ticker: 'JBT.US'},\n            // KKKKKKKKKKKKKKKKKKKKK\n            {icono: 'ios-star-outline',nombre: 'Kellogg',ticker: 'K.US'}, {icono: 'ios-star-outline',nombre: 'Keycorp',ticker: 'KEY.US'},\n            {icono: 'ios-star-outline',nombre: 'Kimberly-Clark',ticker: 'KMB.US'}, {icono: 'ios-star-outline',nombre: 'Kinder Morgan',ticker: 'KMI.US'},\n            {icono: 'ios-star-outline',nombre: 'Khol',ticker: 'KSS.US'}, {icono: 'ios-star-outline',nombre: 'Kroger',ticker: 'KR.US'},\n            {icono: 'ios-star-outline',nombre: 'Kla-Tencor',ticker: 'KLAC.US'}, {icono: 'ios-star-outline',nombre: 'Kansas City Southern',ticker: 'KSU.US'},\n            {icono: 'ios-star-outline',nombre: 'Kimco Realty',ticker: 'KIM.US'}, {icono: 'ios-star-outline',nombre: 'Kraft Heinz',ticker: 'KHC.US'},\n            // LLLLLLLLLLLLLLLLLLLLLL\n            {icono: 'ios-star-outline',nombre: 'L3 Communications',ticker: 'LLL.US'}, {icono: 'ios-star-outline',nombre: 'Laboratory Corporation of America',ticker: 'LH.US'},\n            {icono: 'ios-star-outline',nombre: 'L Brands',ticker: 'LB.US'}, {icono: 'ios-star-outline',nombre: 'Las Vegas Sands',ticker: 'LVS.US'},\n            {icono: 'ios-star-outline',nombre: 'Lam Research',ticker: 'LRCX.US'}, {icono: 'ios-star-outline',nombre: 'Lendingtree',ticker: 'TREE.US'},\n            {icono: 'ios-star-outline',nombre: 'Leggett & Platt',ticker: 'LEG.US'}, {icono: 'ios-star-outline',nombre: 'Leucadia National',ticker: 'LUK.US'},\n            {icono: 'ios-star-outline',nombre: 'Lennar Corp',ticker: 'LEN.US'}, {icono: 'ios-star-outline',nombre: 'Liberty Broadband',ticker: 'LBRDK.US'},\n            {icono: 'ios-star-outline',nombre: 'Liberty Global PLC',ticker: 'LBTYK.US'}, {icono: 'ios-star-outline',nombre: 'Liberty Interactive',ticker: 'QVCA.US'},\n            {icono: 'ios-star-outline',nombre: 'Lincoln National',ticker: 'LNC.US'}, {icono: 'ios-star-outline',nombre: 'Loews',ticker: 'L.US'},\n            {icono: 'ios-star-outline',nombre: 'Lockheed Martin',ticker: 'LMT.US'}, {icono: 'ios-star-outline',nombre: 'Liberty Media',ticker: 'FWONK.US'},\n            {icono: 'ios-star-outline',nombre: 'Lowe',ticker: 'LOW.US'}, {icono: 'ios-star-outline',nombre: 'Lyondellbasell Industries',ticker: 'LYB.US'},\n            {icono: 'ios-star-outline',nombre: 'LKQ',ticker: 'LKQ.US'}, {icono: 'ios-star-outline',nombre: 'Lululemon Athletica',ticker: 'LULU.US'},\n            {icono: 'ios-star-outline',nombre: 'Lumentum Holdings',ticker: 'LITE.US'},\n            // MMMMMMMMMMMMMMMMMMMMMM\n            {icono: 'ios-star-outline',nombre: 'Macys',ticker: 'M.US'}, {icono: 'ios-star-outline',nombre: 'Marathon Oil',ticker: 'MRO.US'},\n            {icono: 'ios-star-outline',nombre: 'Marathon Petroleum',ticker: 'MPC.US'}, {icono: 'ios-star-outline',nombre: 'Marsh & Mclennan',ticker: 'MMC.US'},\n            {icono: 'ios-star-outline',nombre: 'Marriott',ticker: 'MAR.US'}, {icono: 'ios-star-outline',nombre: 'Marvell Technology Group',ticker: 'MRVL.US'},\n            {icono: 'ios-star-outline',nombre: 'Mastercard',ticker: 'MA.US'}, {icono: 'ios-star-outline',nombre: 'McDonalds',ticker: 'MCD.US'},\n            {icono: 'ios-star-outline',nombre: 'Mattel',ticker: 'MAT.US'}, {icono: 'ios-star-outline',nombre: 'Maxim Integrated Products',ticker: 'MXIM.US'},\n            {icono: 'ios-star-outline',nombre: 'Macerich',ticker: 'MAC.US'}, {icono: 'ios-star-outline',nombre: 'Martin Marietta',ticker: 'MLM.US'}, {icono: 'ios-star-outline',nombre: 'Masco',ticker: 'MAS.US'}, \n            {icono: 'ios-star-outline',nombre: 'McKesson',ticker: 'MCK.US'}, {icono: 'ios-star-outline',nombre: 'Medtronic',ticker: 'MDT.US'},\n            {icono: 'ios-star-outline',nombre: 'Merck & Company',ticker: 'MRK.US'}, {icono: 'ios-star-outline',nombre: 'Metlife',ticker: 'MET.US'},\n            {icono: 'ios-star-outline',nombre: 'Melco Resorts',ticker: 'MLCO.US'}, {icono: 'ios-star-outline',nombre: 'Mercadolibre',ticker: 'MELI.US'},\n            {icono: 'ios-star-outline',nombre: 'Microchip Technology',ticker: 'MCHP.US'}, {icono: 'ios-star-outline',nombre: 'Micron Technology',ticker: 'MU.US'},\n            {icono: 'ios-star-outline',nombre: 'Microsoft',ticker: 'MSFT.US'}, {icono: 'ios-star-outline',nombre: 'Michael Kors',ticker: 'KORS.US'}, \n            {icono: 'ios-star-outline',nombre: 'Momo',ticker: 'MOMO.US'}, {icono: 'ios-star-outline',nombre: 'Mohawk Industries',ticker: 'MHK.US'},\n            {icono: 'ios-star-outline',nombre: 'MGM Resorts',ticker: 'MGM.US'}, {icono: 'ios-star-outline',nombre: 'Monsanto',ticker: 'MON.US'},\n            {icono: 'ios-star-outline',nombre: 'Morgan Stanley',ticker: 'MS.US'}, {icono: 'ios-star-outline',nombre: 'Mondelez',ticker: 'MDLZ.US'},\n            {icono: 'ios-star-outline',nombre: 'Monster Beverage',ticker: 'MNST.US'}, {icono: 'ios-star-outline',nombre: 'Mylan N.V.',ticker: 'MYL.US'},\n            {icono: 'ios-star-outline',nombre: 'Molson Coors',ticker: 'TAP.US'}, {icono: 'ios-star-outline',nombre: 'Moodys',ticker: 'MCO.US'},\n            {icono: 'ios-star-outline',nombre: 'Mosaic',ticker: 'MOS.US'}, {icono: 'ios-star-outline',nombre: 'Motorola',ticker: 'MSI.US'},{icono: 'ios-star-outline',nombre: 'Moderna INC.',ticker: 'MRNA.US'},\n            // NNNNNNNNNNNNNNNNNNNNNN\n            {icono: 'ios-star-outline',nombre: 'Nasdaq',ticker: 'NDAQ.US'}, {icono: 'ios-star-outline',nombre: 'Nektar Therapeutics',ticker: 'NKTR.US'},\n            {icono: 'ios-star-outline',nombre: 'National-Oilwell',ticker: 'NOV.US'}, {icono: 'ios-star-outline',nombre: 'Navient',ticker: 'NAVI.US'},\n            {icono: 'ios-star-outline',nombre: 'Netapp',ticker: 'NTAP.US'}, {icono: 'ios-star-outline',nombre: 'Netease',ticker: 'NTES.US'},\n            {icono: 'ios-star-outline',nombre: 'Netflix',ticker: 'NFLX.US'}, {icono: 'ios-star-outline',nombre: 'Newell Brands',ticker: 'NWL.US'},\n            {icono: 'ios-star-outline',nombre: 'Newmont Mining',ticker: 'NEM.US'}, {icono: 'ios-star-outline',nombre: 'Nextera Energy',ticker: 'NEE.US'},\n            {icono: 'ios-star-outline',nombre: 'NiSource',ticker: 'NI.US'}, {icono: 'ios-star-outline',nombre: 'Noble Energy',ticker: 'NBL.US'},\n            {icono: 'ios-star-outline',nombre: 'Nike',ticker: 'NKE.US'}, {icono: 'ios-star-outline',nombre: 'Northern Trust',ticker: 'NTRS.US'},\n            {icono: 'ios-star-outline',nombre: 'Norfolk Southern',ticker: 'NSC.US'}, {icono: 'ios-star-outline',nombre: 'Northrop Grumman',ticker: 'NOC.US'},\n            {icono: 'ios-star-outline',nombre: 'Nordstrom',ticker: 'JWN.US'}, {icono: 'ios-star-outline',nombre: 'NRG Energy',ticker: 'NRG.US'},\n            {icono: 'ios-star-outline',nombre: 'Nucor',ticker: 'NUE.US'}, {icono: 'ios-star-outline',nombre: 'Nutanix',ticker: 'NTNX.US'}, \n            {icono: 'ios-star-outline',nombre: 'Nvidia',ticker: 'NVDA.US'}, {icono: 'ios-star-outline',nombre: 'NXP Semiconductors',ticker: 'NXPI.US'},\n            // OOOOOOOOOOOOOOOOOOOOOO\n            {icono: 'ios-star-outline',nombre: 'O Reilly Automotiv',ticker: 'ORLY.US'}, {icono: 'ios-star-outline',nombre: 'Old Dominion Freight Line',ticker: 'ODFL.US'}, {icono: 'ios-star-outline',nombre: 'On Semiconductor',ticker: 'ON.US'}, {icono: 'ios-star-outline',nombre: 'Overstock.com',ticker: 'OSTK.US'},\n            {icono: 'ios-star-outline',nombre: 'Occidental Petroleum',ticker: 'OXY.US'}, {icono: 'ios-star-outline',nombre: 'Omnicom Group',ticker: 'OMC.US'}, {icono: 'ios-star-outline',nombre: 'Oracle',ticker: 'ORCL.US'}, {icono: 'ios-star-outline',nombre: 'Oneok',ticker: 'OKE.US'},\n            // PPPPPPPPPPPPPPPPPPPPPP\n            {icono: 'ios-star-outline',nombre: 'Paccar',ticker: 'PCAR.US'}, {icono: 'ios-star-outline',nombre: 'Patterson-uti Energy',ticker: 'PTEN.US'}, {icono: 'ios-star-outline',nombre: 'Paychex',ticker: 'PAYX.US'}, {icono: 'ios-star-outline',nombre: 'Paypal Holdings',ticker: 'PYPL.US'},\n            {icono: 'ios-star-outline',nombre: 'Pacific Gas & Electric',ticker: 'PCG.US'}, {icono: 'ios-star-outline',nombre: 'Pfizer',ticker: 'PFE.US'}, {icono: 'ios-star-outline',nombre: 'Philip Morris',ticker: 'PM.US'}, {icono: 'ios-star-outline',nombre: 'Phillips 66',ticker: 'PSX.US'},\n            {icono: 'ios-star-outline',nombre: 'Pepsico',ticker: 'PEP.US'}, {icono: 'ios-star-outline',nombre: 'Pioneer Natural resources',ticker: 'PXD.US'}, {icono: 'ios-star-outline',nombre: 'PNC Financial Services',ticker: 'PNC.US'},\n            {icono: 'ios-star-outline',nombre: 'Pentair',ticker: 'PNR.US'}, {icono: 'ios-star-outline',nombre: 'Perkinelmer',ticker: 'PKI.US'}, {icono: 'ios-star-outline',nombre: 'Perrigo',ticker: 'PRGO.US'}, {icono: 'ios-star-outline',nombre: 'Pinacle West Capital',ticker: 'PNW.US'},\n            {icono: 'ios-star-outline',nombre: 'PPL',ticker: 'PPL.US'}, {icono: 'ios-star-outline',nombre: 'Praxair',ticker: 'PX.US'}, {icono: 'ios-star-outline',nombre: 'Procter & Gamble',ticker: 'PG.US'}, {icono: 'ios-star-outline',nombre: 'Prudential Financial',ticker: 'PRU.US'},\n            {icono: 'ios-star-outline',nombre: 'Public Service Enterprise Group',ticker: 'PEG.US'}, {icono: 'ios-star-outline',nombre: 'Public Storage',ticker: 'PSA.US'}, {icono: 'ios-star-outline',nombre: 'Puma Biotechnology',ticker: 'PBYI.US'},\n            {icono: 'ios-star-outline',nombre: 'Priceline',ticker: 'PCLN.US'}, {icono: 'ios-star-outline',nombre: 'Pultegroup',ticker: 'PHM.US'},\n            // QQQQQQQQQQQQQQQQQQQQQQ\n            {icono: 'ios-star-outline',nombre: 'Qorvo',ticker: 'QRVO.US'}, {icono: 'ios-star-outline',nombre: 'Qualcomm',ticker: 'QCOM.US'},\n            {icono: 'ios-star-outline',nombre: 'Quanta Services',ticker: 'PWR.US'}, {icono: 'ios-star-outline',nombre: 'Quests Diagnostics',ticker: 'DGX.US'}, \n            // RRRRRRRRRRRRRRRRRRRRRR\n            {icono: 'ios-star-outline',nombre: 'Raytheon',ticker: 'RTN.US'}, {icono: 'ios-star-outline',nombre: 'Ralph Lauren',ticker: 'RL.US'},\n            {icono: 'ios-star-outline',nombre: 'Range Resources',ticker: 'RRC.US'}, {icono: 'ios-star-outline',nombre: 'Raymond James Financial',ticker: 'RJF.US'},\n            {icono: 'ios-star-outline',nombre: 'Realty Income',ticker: 'O.US'}, {icono: 'ios-star-outline',nombre: 'Republic Services',ticker: 'RSG.US'},\n            {icono: 'ios-star-outline',nombre: 'Regeneron Pharmaceuticals',ticker: 'REGN.US'}, {icono: 'ios-star-outline',nombre: 'Riot Blockchain',ticker: 'RIOT.US'},\n            {icono: 'ios-star-outline',nombre: 'Roku',ticker: 'ROKU.US'}, {icono: 'ios-star-outline',nombre: 'Ross Stores',ticker: 'ROST.US'},\n            {icono: 'ios-star-outline',nombre: 'Red Hat',ticker: 'RHT.US'}, {icono: 'ios-star-outline',nombre: 'Regions Financial',ticker: 'RF.US'},\n            {icono: 'ios-star-outline',nombre: 'Resmed',ticker: 'RMD.US'}, {icono: 'ios-star-outline',nombre: 'Robert Half International',ticker: 'RHI.US'},\n            {icono: 'ios-star-outline',nombre: 'Royal Caribbean Cruises',ticker: 'RCL.US'}, {icono: 'ios-star-outline',nombre: 'Royal Dutch Shell',ticker: 'RDS.A.US'},\n            {icono: 'ios-star-outline',nombre: 'Rockwell Automation',ticker: 'ROK.US'}, {icono: 'ios-star-outline',nombre: 'Rockwell Collins',ticker: 'COL.US'},\n            {icono: 'ios-star-outline',nombre: 'Roper Industries',ticker: 'ROP.US'},\n            // SSSSSSSSSSSSSSSSSSSSS\n            {icono: 'ios-star-outline',nombre: 'S&P Global',ticker: 'SPGI.US'}, {icono: 'ios-star-outline',nombre: 'Salesforce.com',ticker: 'CRM.US'},\n            {icono: 'ios-star-outline',nombre: 'Sage Therapeutics',ticker: 'SAGE.US'}, {icono: 'ios-star-outline',nombre: 'Sanderson Farms',ticker: 'SAFM.US'},\n            {icono: 'ios-star-outline',nombre: 'Sarepta Therapeutics',ticker: 'SRPT.US'}, {icono: 'ios-star-outline',nombre: 'SBA Communications',ticker: 'SBAC.US'},\n            {icono: 'ios-star-outline',nombre: 'Scripps Networks Interactive',ticker: 'SNI.US'}, {icono: 'ios-star-outline',nombre: 'Seagate Technology',ticker: 'STX.US'},\n            {icono: 'ios-star-outline',nombre: 'Schlumberger',ticker: 'SLB.US'}, {icono: 'ios-star-outline',nombre: 'Sempra Energy',ticker: 'SRE.US'},\n            {icono: 'ios-star-outline',nombre: 'Servicenow',ticker: 'NOW.US'}, {icono: 'ios-star-outline',nombre: 'Sherwin-Williams',ticker: 'SHW.US'},\n            {icono: 'ios-star-outline',nombre: 'Shire PLC',ticker: 'SHPG.US'}, {icono: 'ios-star-outline',nombre: 'Sina',ticker: 'SINA.US'},\n            {icono: 'ios-star-outline',nombre: 'Sirius XM Holdings',ticker: 'SIRI.US'}, {icono: 'ios-star-outline',nombre: 'Skyworks Solutions',ticker: 'SWKS.US'},\n            {icono: 'ios-star-outline',nombre: 'Splunk',ticker: 'SPLK.US'}, {icono: 'ios-star-outline',nombre: 'Starbucks',ticker: 'SBUX.US'},\n            {icono: 'ios-star-outline',nombre: 'Simon Property Group',ticker: 'SPG.US'}, {icono: 'ios-star-outline',nombre: 'Snap',ticker: 'SNAP.US'},\n            {icono: 'ios-star-outline',nombre: 'Southern Company',ticker: 'SO.US'}, {icono: 'ios-star-outline',nombre: 'Southwest Airlines',ticker: 'LUV.US'},\n            {icono: 'ios-star-outline',nombre: 'Square',ticker: 'SQ.US'}, {icono: 'ios-star-outline',nombre: 'State Street',ticker: 'STT.US'},\n            {icono: 'ios-star-outline',nombre: 'Stryker',ticker: 'SYK.US'}, {icono: 'ios-star-outline',nombre: 'Suntrust Banks',ticker: 'STI.US'},\n            {icono: 'ios-star-outline',nombre: 'Synchrony Financial',ticker: 'SYF.US'}, {icono: 'ios-star-outline',nombre: 'Sysco',ticker: 'SYY.US'},\n            {icono: 'ios-star-outline',nombre: 'Steel Dynamics',ticker: 'STLD.US'}, {icono: 'ios-star-outline',nombre: 'SVB Financial Group',ticker: 'SIVB.US'},\n            {icono: 'ios-star-outline',nombre: 'Symantec',ticker: 'SYMC.US'}, {icono: 'ios-star-outline',nombre: 'Synopsys',ticker: 'SNPS.US'},\n            {icono: 'ios-star-outline',nombre: 'Scana',ticker: 'SCG.US'}, {icono: 'ios-star-outline',nombre: 'SPX',ticker: 'SPXC.US'}, {icono: 'ios-star-outline',nombre: 'Shopify',ticker: 'SHOP.US'},\n            {icono: 'ios-star-outline',nombre: 'Shockwave Medical',ticker: 'SWAV.US'},{icono: 'ios-star-outline',nombre: 'Sigma Lithium',ticker: 'SGML.US'},{icono: 'ios-star-outline',nombre: 'SEA LTD.',ticker: 'SE.US'},\n            // TTTTTT\n            {icono: 'ios-star-outline',nombre: 'Tapestry',ticker: 'TPR.US'}, {icono: 'ios-star-outline',nombre: 'Taiwan Semiconductor',ticker: 'TSM.US'},\n            {icono: 'ios-star-outline',nombre: 'Target',ticker: 'TGT.US'}, {icono: 'ios-star-outline',nombre: 'Te Connectivity',ticker: 'TEL.US'},\n            {icono: 'ios-star-outline',nombre: 'Take-Two Interactive Software',ticker: 'TTWO.US'}, {icono: 'ios-star-outline',nombre: 'TD Ameritrade Holding',ticker: 'AMTD.US'},\n            {icono: 'ios-star-outline',nombre: 'Technipfmc',ticker: 'FTI.US'}, {icono: 'ios-star-outline',nombre: 'Texas Instruments',ticker: 'TXN.US'},\n            {icono: 'ios-star-outline',nombre: 'Textron',ticker: 'TXT.US'}, {icono: 'ios-star-outline',nombre: 'Teva Pharmaceutical',ticker: 'TEVA.US'},\n            {icono: 'ios-star-outline',nombre: 'Thermo Fisher Scientific',ticker: 'TMO.US'}, {icono: 'ios-star-outline',nombre: 'Time Warner',ticker: 'TWX.US'},\n            {icono: 'ios-star-outline',nombre: 'TJX Companies',ticker: 'TJX.US'}, {icono: 'ios-star-outline',nombre: 'Twitter',ticker: 'TWTR.US'},\n            {icono: 'ios-star-outline',nombre: 'Tyson Foods',ticker: 'TSN.US'}, {icono: 'ios-star-outline',nombre: 'T. Rowe Price Group',ticker: 'TROW.US'},\n            {icono: 'ios-star-outline',nombre: 'T-Mobile US',ticker: 'TMUS.US'}, {icono: 'ios-star-outline',nombre: 'The goodyear Tire & Rubber',ticker: 'GT.US'},\n            {icono: 'ios-star-outline',nombre: 'Tesla',ticker: 'TSLA.US'}, {icono: 'ios-star-outline',nombre: 'The Kraft Heinz',ticker: 'KHC.US'},\n            {icono: 'ios-star-outline',nombre: 'The Middleby',ticker: 'MIDD.US'}, {icono: 'ios-star-outline',nombre: 'The Priceline Group',ticker: 'PCLN.US'},\n            {icono: 'ios-star-outline',nombre: 'Tractor Supply',ticker: 'TSCO.US'}, {icono: 'ios-star-outline',nombre: 'Tripadvisor',ticker: 'TRIP.US'},\n            {icono: 'ios-star-outline',nombre: 'Twenty-First Century Fox',ticker: 'FOX.US'}, \n            {icono: 'ios-star-outline',nombre: 'The Aes Corp',ticker: 'AES.US'}, {icono: 'ios-star-outline',nombre: 'Tiffany & Co.',ticker: 'TIF.US'},\n            {icono: 'ios-star-outline',nombre: 'Torchmark',ticker: 'TMK.US'}, {icono: 'ios-star-outline',nombre: 'Total System Services',ticker: 'TSS.US'},\n            // UUUUUU\n            {icono: 'ios-star-outline',nombre: 'U.S. Bancorp',ticker: 'USB.US'}, {icono: 'ios-star-outline',nombre: 'Union Pacific',ticker: 'UNP.US'},\n            {icono: 'ios-star-outline',nombre: 'United Continental Holdings',ticker: 'UAL.US'}, {icono: 'ios-star-outline',nombre: 'United Parcel Service',ticker: 'UPS.US'},\n            {icono: 'ios-star-outline',nombre: 'United Rentals',ticker: 'URI.US'}, {icono: 'ios-star-outline',nombre: 'United States Steel',ticker: 'X.US'},\n            {icono: 'ios-star-outline',nombre: 'United Technologies',ticker: 'UTX.US'}, {icono: 'ios-star-outline',nombre: 'Unitedhealth Group',ticker: 'UNH.US'},\n            {icono: 'ios-star-outline',nombre: 'Ulta Beauty',ticker: 'ULTA.US'}, {icono: 'ios-star-outline',nombre: 'Universal Display',ticker: 'OLED.US'},\n            {icono: 'ios-star-outline',nombre: 'Urban Outfitters',ticker: 'URBN.US'}, {icono: 'ios-star-outline',nombre: 'Under Armour',ticker: 'UAA.US'},\n            // VVVVVV\n            {icono: 'ios-star-outline',nombre: 'V.F.',ticker: 'VFC.US'}, {icono: 'ios-star-outline',nombre: 'Vale S.A.',ticker: 'VALE.US'},\n            {icono: 'ios-star-outline',nombre: 'Valeant Pharmaceuticals',ticker: 'VRX.US'}, {icono: 'ios-star-outline',nombre: 'Valero Energy',ticker: 'VLO.US'},\n            {icono: 'ios-star-outline',nombre: 'Vantiv',ticker: 'VNTV.US'}, {icono: 'ios-star-outline',nombre: 'Verizon Communications',ticker: 'VZ.US'},\n            {icono: 'ios-star-outline',nombre: 'Visa',ticker: 'V.US'}, {icono: 'ios-star-outline',nombre: 'Vmware',ticker: 'VMW.US'}, {icono: 'ios-star-outline',nombre: 'Vedanta',ticker: 'VEDL.US'},\n            {icono: 'ios-star-outline',nombre: 'Vulcan Materials',ticker: 'VMC.US'}, {icono: 'ios-star-outline',nombre: 'Vertex Pharmaceuticals',ticker: 'VRTX.US'},\n            {icono: 'ios-star-outline',nombre: 'Verisign',ticker: 'VRSN.US'}, {icono: 'ios-star-outline',nombre: 'Verisk Analytics',ticker: 'VRSK.US'},\n            {icono: 'ios-star-outline',nombre: 'Viacom',ticker: 'VIAB.US'}, {icono: 'ios-star-outline',nombre: 'Vodafone',ticker: 'VOD.US'},\n            // WWWWWW\n            {icono: 'ios-star-outline',nombre: 'Wal-Mart Stores',ticker: 'WMT.US'}, {icono: 'ios-star-outline',nombre: 'Walt Disney',ticker: 'DIS.US'},\n            {icono: 'ios-star-outline',nombre: 'Wells Fargo',ticker: 'WFC.US'}, {icono: 'ios-star-outline',nombre: 'Walgreens Boots Alliance',ticker: 'WBA.US'},\n            {icono: 'ios-star-outline',nombre: 'Wendys',ticker: 'WEN.US'}, {icono: 'ios-star-outline',nombre: 'Western Digital',ticker: 'WDC.US'},\n            {icono: 'ios-star-outline',nombre: 'Willis Towers Watson Public',ticker: 'WLTW.US'}, {icono: 'ios-star-outline',nombre: 'Workday',ticker: 'WDAY.US'},\n            {icono: 'ios-star-outline',nombre: 'Wynn Resorts',ticker: 'WYNN.US'}, {icono: 'ios-star-outline',nombre: 'Weibo',ticker: 'WB.US'},\n            // XXXXXX\n            {icono: 'ios-star-outline',nombre: 'Xcel Energy',ticker: 'XEL.US'}, {icono: 'ios-star-outline',nombre: 'Xilinx',ticker: 'XLNX.US'},\n            {icono: 'ios-star-outline',nombre: 'Xunlei',ticker: 'XNET.US'}, {icono: 'ios-star-outline',nombre: 'Xerox',ticker: 'XRX.US'},\n            {icono: 'ios-star-outline',nombre: 'XL Company Switzerland',ticker: 'XL.US'}, {icono: 'ios-star-outline',nombre: 'Xylem',ticker: 'XYL.US'},\n            // ZZZZZZ\n            {icono: 'ios-star-outline',nombre: 'Zimmer Biomet Holdings',ticker: 'ZBH.US'}, {icono: 'ios-star-outline',nombre: 'Zions Bancorp',ticker: 'ZION.US'},\n            {icono: 'ios-star-outline',nombre: 'Yandex',ticker: 'YNDX.US'}, {icono: 'ios-star-outline',nombre: 'YY Inc.',ticker: 'YY.US'},\n            {icono: 'ios-star-outline',nombre: 'Yum! brands',ticker: 'YUM.US'}, {icono: 'ios-star-outline',nombre: 'Zoetis',ticker: 'ZTS.US'},\n        ]\n    \n        constructor(private _servicio1 : Servicio1, private _favoritoService : ApiServicio, private _route : ActivatedRoute, private _router : Router\n        // método: this._servicio1.agregarAApi(this.favorito);\n        ) {\n            this.titulo = 'Top EEUU';\n        }\n    \n        ngOnInit() {\n            this\n            ._favoritoService\n            .deletePais('eeuu')\n            .subscribe(result => {\n                console.log(result);\n                if (!result) {\n                    alert('Error al borrar');\n                }\n            },);;\n            console.log('API de EEUU borrada');\n    \n            // Recopilamos datos anual, semestral y mensual\n            for (let stock of this.mercadoAcciones) { \n                this\n                    .sleep(5000)\n                    .then(() => {\n                        this.valor(stock.ticker);\n                    });\n                this\n                    .sleep(150000)\n                    .then(() => {\n                        this.mensual(stock.ticker);\n                    });\n                this\n                    .sleep(300000)\n                    .then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                this\n                    .sleep(450000)\n                    .then(() => {\n                        this.anual(stock.ticker);\n                    });\n    \n                this\n                    .sleep(600000)\n                    .then(() => {\n                        console.log(stock);\n                        this\n                            ._favoritoService\n                            .addPais(stock, 'eeuu')\n                            .subscribe(response => {\n                                if (!response) {\n                                    console.log('error al recibir confirmacion de guardado');\n                                } else {\n                                    console.log('Información de EEUU agregada a base de datos');\n                                }\n                            }, error => {\n                                console.log('Error al guardar datos')\n                            });\n                    });\n            }\n            console.log(this.mercadoAcciones);\n        }\n    \n        sleep(time) {\n            return new Promise((resolve) => setTimeout(resolve, time));\n        }\n    \n        ordenar(value : string) {\n            if (this.order === value) {\n                this.reverse = !this.reverse;\n            }\n            this.order = value;\n        }\n    \n        // Miramos el Anual\n        anual(tickerRecibido) {\n            let resultado;\n            let total;\n            this\n                ._servicio1\n                .getAnual(tickerRecibido)\n                .subscribe(result => {\n                    if (!result) {\n                        alert('No obtenemos resultado en el parseo Anual')\n                    } else {\n                        let hoy = parseFloat(result[0].adjusted_close);\n                        let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                        if (hoy > ayer) {\n                            let cuentaResultado = hoy - ayer;\n                            let comparacion = cuentaResultado / ayer;\n                            total = comparacion * 100;\n                            resultado = parseInt(total);\n                            let anual = resultado;\n    \n                            let datoAnual = this\n                                .mercadoAcciones\n                                .find((p) => {\n                                    return p.ticker === tickerRecibido;\n                                });\n                            datoAnual.anual = anual;\n                            datoAnual.anualD = 'sube';\n                            console.log(datoAnual.nombre);\n                           \n                            \n                            /*if(datoAnual.nombre.indexOf('Square') != -1){\n                            console.log(anual);\n                            console.log(datoAnual.semestral);\n                            console.log(datoAnual.mensual);\n                            if (anual > datoAnual.semestral){\n                                console.log('anual mayor que semestral si')\n                            }\n                            if (datoAnual.semestral > datoAnual.mensual){\n                                console.log('semestral mayor que mensual si')\n                            }\n                            if (anual > 70){\n                                console.log('cumple anual si')\n                            }\n                            if (anual < 300){\n                                console.log('cumple anual si')\n                            }\n                            if (anual < 300){\n                                console.log('cumple semestral si')\n                            }\n                            }\n                            \n                            if(anual > 70 && anual < 500 && datoAnual.semestral < 300 && datoAnual.mensual < 70 && anual > datoAnual.semestral && datoAnual.semestral > datoAnual.mensual){\n                                let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                    response =>{\n                                        if(!response){\n                                            console.log('error al recibir confirmacion de guardado');\n                                        }\n                                        else{\n                                            console.log('Información de Topmundo agregada a base de datos');\n                                        }\n                                    },\n                                    error =>{\n                                        console.log('Error al guardar datos')\n                                    }\n                                );\n                            }*/\n\n                            if(anual > 70 && anual < 500 && datoAnual.semestral < 400){\n\n                                // Aquí metemos el nuevo código del biAnual\n                                this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                    result => {\n                                        if(!result){\n                                            alert('No obtenemos resultado en el parseo BiAnual')\n                                        } else {\n                                        let hoyBi = parseFloat(result[0].adjusted_close);\n                                        let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                            if(hoyBi > ayerBi){\n                                                let cuentaResultado = hoyBi - ayerBi;\n                                                let comparacion = cuentaResultado / ayerBi;\n                                                total = comparacion * 100;\n                                                resultado = parseInt(total);\n                                                let biAnual = resultado;\n\n                                                if(biAnual > 150 && biAnual > anual){\n                                                  let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                                  this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                      response =>{\n                                                          if(!response){\n                                                              console.log('error al recibir confirmacion de guardado');\n                                                          }\n                                                          else{\n                                                              console.log('Información de Topmundo agregada a base de datos');\n                                                          }\n                                                      },\n                                                      error =>{\n                                                          console.log('Error al guardar datos')\n                                                      }\n                                                  );\n                                                }\n                                              }\n                                            }\n                                          }\n                                        )\n                                // Aquí termina el nuevo código del bianual\n                            } \n    \n                        } else if (hoy < ayer) {\n                            let cuentaResultado = ayer - hoy;\n                            let comparacion = cuentaResultado / ayer;\n                            total = comparacion * 100;\n                            resultado = -(parseInt(total));\n                            let anual = resultado;\n    \n                            let datoAnual = this\n                                .mercadoAcciones\n                                .find((p) => {\n                                    return p.ticker === tickerRecibido;\n                                });\n                            datoAnual.anual = anual;\n                            datoAnual.anualD = 'baja';\n    \n                        } else if (hoy == ayer) {\n                            resultado = 0;\n                            let anual = resultado;\n    \n                            let datoAnual = this\n                                .mercadoAcciones\n                                .find((p) => {\n                                    return p.ticker === tickerRecibido;\n                                });\n                            datoAnual.anual = anual;\n                            datoAnual.anualD = 'sube';\n                        }\n                    }\n                },);\n        }\n    \n        // Miramos el Semestral\n        semestral(tickerRecibido) { //base,mercado\n            let resultado;\n            let total;\n            this\n                ._servicio1\n                .getSemestral(tickerRecibido)\n                .subscribe(result => {\n                    if (!result) {\n                        alert('No obtenemos resultado en el parseo Anual')\n                    } else {\n                        let hoy = parseFloat(result[0].adjusted_close);\n                        let ayer = parseFloat(result[result.length - 1].adjusted_close);\n    \n                        if (hoy > ayer) {\n                            let cuentaResultado = hoy - ayer;\n                            let comparacion = cuentaResultado / ayer;\n                            total = comparacion * 100;\n                            resultado = parseInt(total);\n                            let anual = resultado;\n    \n                            let datoAnual = this\n                                .mercadoAcciones\n                                .find((p) => {\n                                    return p.ticker === tickerRecibido;\n                                });\n                            datoAnual.semestral = anual;\n                            datoAnual.semestralD = 'sube';\n    \n                        } else if (hoy < ayer) {\n                            let cuentaResultado = ayer - hoy;\n                            let comparacion = cuentaResultado / ayer;\n                            total = comparacion * 100;\n                            resultado = -(parseInt(total));\n                            let anual = resultado;\n    \n                            let datoAnual = this\n                                .mercadoAcciones\n                                .find((p) => {\n                                    return p.ticker === tickerRecibido;\n                                });\n                            datoAnual.semestral = anual;\n                            datoAnual.semestralD = 'baja';\n    \n                        } else if (hoy == ayer) {\n                            resultado = 0;\n                            let anual = resultado;\n    \n                            let datoAnual = this\n                                .mercadoAcciones\n                                .find((p) => {\n                                    return p.ticker === tickerRecibido;\n                                });\n                            datoAnual.semestral = anual;\n                            datoAnual.semestralD = 'sube';\n                        }\n                    }\n                },);\n        }\n    \n        // Miramos el Anual\n        mensual(tickerRecibido) { //base,mercado\n            let resultado;\n            let total;\n            this\n                ._servicio1\n                .getMensual(tickerRecibido)\n                .subscribe(result => {\n                    if (!result) {\n                        alert('No obtenemos resultado en el parseo Anual')\n                    } else {\n                        let hoy = parseFloat(result[0].adjusted_close);\n                        let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                        if (hoy > 2 && ayer > 2) {\n                            if (hoy > ayer) {\n                                let cuentaResultado = hoy - ayer;\n                                let comparacion = cuentaResultado / ayer;\n                                total = comparacion * 100;\n                                resultado = parseInt(total);\n                                let anual = resultado;\n    \n                                let datoAnual = this\n                                    .mercadoAcciones\n                                    .find((p) => {\n                                        return p.ticker === tickerRecibido;\n                                    });\n                                datoAnual.mensual = anual;\n                                datoAnual.mensualD = 'sube';\n    \n                            } else if (hoy < ayer) {\n                                let cuentaResultado = ayer - hoy;\n                                let comparacion = cuentaResultado / ayer;\n                                total = comparacion * 100;\n                                resultado = -(parseInt(total));\n                                let anual = resultado;\n    \n                                let datoAnual = this\n                                    .mercadoAcciones\n                                    .find((p) => {\n                                        return p.ticker === tickerRecibido;\n                                    });\n                                datoAnual.mensual = anual;\n                                datoAnual.mensualD = 'baja';\n    \n                            } else if (hoy == ayer) {\n                                resultado = 0;\n                                let anual = resultado;\n    \n                                let datoAnual = this\n                                    .mercadoAcciones\n                                    .find((p) => {\n                                        return p.ticker === tickerRecibido;\n                                    });\n                                datoAnual.mensual = anual;\n                                datoAnual.mensualD = 'sube';\n                            }\n                        }\n                    }\n                },);\n        }\n         valor(ticker) {\n            this\n                ._servicio1\n                .seleccionarMas3(ticker)\n                .subscribe(result => {\n                    if (!result) {\n                        alert('No obtenemos resultados de acciones')\n                    } else {\n                        let hoy = parseFloat(result.previousClose);\n                        if (hoy < 3) {\n                            for (let i = this.mercadoAcciones.length - 1; i >= 0; i--) {\n                                if (ticker === this.mercadoAcciones[i].ticker) {\n                                    this\n                                        .mercadoAcciones\n                                        .splice(i, 1); //this is the part where I 'delete' the object\n                                }\n                            }\n                        } else {\n                            let datoAnual = this\n                                .mercadoAcciones\n                                .find((p) => {\n                                    return p.ticker === ticker;\n                                });\n                            datoAnual.valor = hoy;\n                        }\n                        //if(hoy > 3){}\n                    }\n                },);\n        } \n    \n        /*\n        valor(ticker) {\n            this\n                ._servicio1\n                .seleccionarMas3(ticker)\n                .subscribe(result => {\n                    if (!result) {\n                        alert('No obtenemos resultados de acciones')\n                    } else {\n                        let hoy = parseFloat(result.close);\n    \n                        if (hoy < 3) {\n                            for (let i = this.mercadoAcciones.length - 1; i >= 0; i--) {\n                                if (ticker === this.mercadoAcciones[i].ticker) {\n                                    this\n                                        .mercadoAcciones\n                                        .splice(i, 1); //this is the part where I 'delete' the object\n                                }\n                            }\n                        } else if (hoy > 3) {\n                            let datoAnual = this\n                                .mercadoAcciones\n                                .find((p) => {\n                                    return p.ticker === ticker;\n                                });\n                            datoAnual.valor = hoy;\n                        }\n                        //if(hoy > 3){}\n                    }\n                },);\n        } */\n    \n        // Aquí creamos el array de objetos final que luego leemos en el html\n    \n        parseFloat(value) {\n            let decimales = parseFloat(value).toFixed(1);\n            return decimales;\n        }\n    }\n\n    \n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/eeuu.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\n\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-espana',\n    templateUrl: '../vistas/espana.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Espana implements OnInit {\n    \n    //para pipe\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public datosFinales : any[] = [];\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top España';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('espana')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        },);\n        console.log('API de Espana borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('MC').subscribe(\n            result => {\n                this.modelos = result;\n                this.recopilarDatos(result);\n                console.log(this.datosFinales);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(20000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    this.sleep(30000).then(() => {\n                        this.mensual(stock.ticker);\n                    });\n                    this.sleep(70000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                    this.sleep(130000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(160000).then(() => {\n                        console.log(stock, 'Esto es lo que sube');\n                        this._favoritoService.addPais(stock,'espana').subscribe(\n                            response =>{\n                                if(!response){\n                                    console.log('error al recibir confirmacion de guardado');\n                                }\n                                else{\n                                    console.log('Información de España agregada a base de datos');\n                                }\n                            },\n                            error =>{\n                                console.log('Error al guardar datos')\n                            }\n                        );\n                    });\n                }\n            });\n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){ \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n                        \n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            console.log(stock);\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    }   \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n        for (let stock of result) {\n            console.log(stock);\n            console.log('Recopilamos datos del mercado Español');\n            let nombre: string = stock.Name;\n            let ticker: string = stock.Code+'.'+stock.Exchange;\n            // aquí cambio la plataforma Country por Exchange\n            let moneda: string = stock.Currency;\n            let icono = 'ios-star-outline';\n\n            this._servicio1.seleccionarMas3(ticker).subscribe(\n                result => {\n                    if(!result){\n                        alert('No obtenemos resultados de acciones')\n                    } else { \n                    let hoy = parseFloat(result.close); //[0] \n                    if(hoy > 3){\n                        this.datosFinales.push({\n                            \"nombre\": nombre,\n                            \"ticker\": ticker,\n                            \"moneda\": moneda,\n                            \"valor\": hoy,\n                            \"icono\": icono\n                          });   \n                    } else {}\n                    }\n                },\n            );          \n         }\n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/espana.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-francia',\n    templateUrl: '../vistas/francia.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Francia implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Francia';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('francia')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Francia borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('PA').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(350000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(150000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(300000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(500000).then(() => {\n                        this._favoritoService.addPais(stock,'francia').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Francia agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            });\n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado Francés'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/francia.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-holanda',\n    templateUrl: '../vistas/holanda.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Holanda implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Holanda';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('holanda')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,); \n        console.log('API de Holanda borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('AS').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                this.sleep(120000).then(() => {\n                    for (let stock of this.datosFinales) {                 \n                        this.mensual(stock.ticker); \n                    this.sleep(120000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(200000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(300000).then(() => {\n                        this._favoritoService.addPais(stock,'holanda').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Holanda agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado Holandés'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/holanda.ts","import {Component, OnInit} from '@angular/core';\nimport {ApiServicio} from '../servicios/api';\n// Importamos servicio y modelo\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n/* barchart\nimport * as fs from 'fs';\nimport * as csvParser from 'csv-parser'; */\n\n@Component({\n    selector: 'etiqueta-home',\n    templateUrl: '../vistas/home.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [ApiServicio, Servicio1],\n})\n\nexport class Home implements OnInit {\n    public title: string;\n    \n\n    constructor(private _servicio1: Servicio1, private _apiServicio: ApiServicio) {\n        this.title = 'Aplicación Parseadora de Bolsa';\n        \n        /* Actúa como programador. Trabajando en entorno Angular/CLI:1.4 y escribiendo el código en TYPESCRIPT. Quiero que el código lea datos contenidos en 3 archivos CSV. Datos que se distribuyen acumulados en una sola celda por cada fila con esta estructura \"\",\"\",\"\",\"\",\"\". Primero leemos el primer archivo CSV y creamos un array que contenga los tres primeros datos \"\",\"\",\"\" de cada celda de este CSV. Si en el siguiente CSV leído encontramos la misma coincidencia en el primer parámetro que en el primer parámetro de cada registro de nuestro array le agregamos el tercer parámetro de la celda de este CSV como un cuarto parámetro al registro del array en la cuarta posición: \"\",\"\",\"\",\"\". Luego leemos el tercer CSV y si encontramos coincidencia en el primer parámetro del CSV con cada primer parámetro del registro de nuestro array, le agregamos un quinto parámetro al array con el tercer parámetro de la celda del CSV leído: \"\",\"\",\"\",\"\",\"\". Finalmente los registros en el array que hayan recibido datos de los 3 CSV los imprimimos con un CONSOLE.LOG() \n        interface Record {\n            firstParam: string;\n            secondParam: string;\n            thirdParam: string;\n            fourthParam?: string;\n            fifthParam?: string;\n          }\n          \n          let records: Record[] = [];\n          \n          // Leemos el primer archivo CSV y creamos el array\n          fs.createReadStream('archivo1.csv')\n            .pipe(csvParser())\n            .on('data', (data: any) => {\n              // Obtenemos los tres primeros parámetros de cada celda\n              let firstParam : string = data['']?.split(',')[0].trim();\n              let secondParam : string = data['']?.split(',')[1].trim();\n              let thirdParam : string = data['']?.split(',')[2].trim();\n              records.push({ firstParam, secondParam, thirdParam });\n            })\n            .on('end', () => {\n              // Leemos el segundo archivo CSV y agregamos el cuarto parámetro al array\n              fs.createReadStream('archivo2.csv')\n                .pipe(csvParser())\n                .on('data', (data: any) => {\n                  let firstParam : string = data['']?.split(',')[0].trim();\n                  let thirdParam : string = data['']?.split(',')[2].trim();\n                  records.forEach((record) => {\n                    if (record.firstParam === firstParam) {\n                      record.fourthParam = thirdParam;\n                    }\n                  });\n                })\n                .on('end', () => {\n                  // Leemos el tercer archivo CSV y agregamos el quinto parámetro al array\n                  fs.createReadStream('archivo3.csv')\n                    .pipe(csvParser())\n                    .on('data', (data: any) => {\n                      let firstParam : string = data['']?.split(',')[0].trim();\n                      let thirdParam : string= data['']?.split(',')[2].trim();\n                      records.forEach((record) => {\n                        if (record.firstParam === firstParam) {\n                          record.fifthParam = thirdParam;\n                        }\n                      });\n                    })\n                    .on('end', () => {\n                      // Imprimimos los registros que tienen los 5 parámetros\n                      records\n                        .filter(\n                          (record) =>\n                            record.fourthParam !== undefined && record.fifthParam !== undefined\n                        )\n                        .forEach((record) => {\n                          console.log(record);\n                        });\n                    });\n                });\n            });*/\n        \n    }\n\n    ngOnInit() {\n    }\n\n    \n\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/home.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-india',\n    templateUrl: '../vistas/india.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class India implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top India';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('india')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de India borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('NSE').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(120000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(120000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(200000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(300000).then(() => {\n                        this._favoritoService.addPais(stock,'india').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de India agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        \n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'DolarIndio', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado indio'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/india.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n /* // Busca en el array y borra el resultado\n for (let i = this.datosFinales.length - 1; i >= 0; i--) {\n    if (ticker === this.datosFinales[i].ticker) {\n        this.datosFinales.splice(i, 1);   //this is the part where I 'delete' the object\n    }\n  } */\n\n@Component({\n    selector: 'etiqueta-italia',\n    templateUrl: '../vistas/italia.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Italia implements OnInit {\n    \n    //para pipe\n    // para contador de bucle\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Italia';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('italia')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Italia borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('MI').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(210000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(120000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(300000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(500000).then(() => {\n                        this._favoritoService.addPais(stock,'italia').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Italia agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado Italiano'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/italia.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n@Component({\n    selector: 'etiqueta-mexico',\n    templateUrl: '../vistas/mexico.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Mexico implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Mexico';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('mexico')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Mexico borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('MX').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(300000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(150000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(300000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(450000).then(() => {\n                        this._favoritoService.addPais(stock,'mexico').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Mexico agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            });\n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        \n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'DolarMexicano', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'DolarMexicano', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado mexicano'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/mexico.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n@Component({\n    selector: 'etiqueta-noruega',\n    templateUrl: '../vistas/noruega.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Noruega implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Noruega';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('noruega')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Noruega borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('OL').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                this.sleep(80000).then(() => {\n                    for (let stock of this.datosFinales) {                 \n                        this.mensual(stock.ticker); \n                    this.sleep(80000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(160000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(230000).then(() => {\n                        this._favoritoService.addPais(stock,'noruega').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Noruega agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado noruego'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/noruega.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n@Component({\n    selector: 'etiqueta-portugal',\n    templateUrl: '../vistas/portugal.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Portugal implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Portugal';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('portugal')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Portugal borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('LS').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                this.sleep(10000).then(() => {\n                    for (let stock of this.datosFinales) {                 \n                        this.mensual(stock.ticker); \n                    this.sleep(10000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(20000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(30000).then(() => {\n                        this._favoritoService.addPais(stock,'portugal').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Portugal agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado portugués'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/portugal.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {RecomendadasModelo} from '../modelos/recomendadas';\n\n@Component({\n    selector: 'etiqueta-recomendadas',\n    templateUrl: '../vistas/recomendadas.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Recomendadas implements OnInit {\n    \n    public titulo;\n    public ticker;\n    public imagen;\n    public favorito: RecomendadasModelo;\n    public errorMen;\n    public accionesTraidas;\n    public confirmado;\n\n\n    constructor(\n        private _favoritoService: ApiServicio,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ){\n        this.titulo = 'Recomendadas';\n        this.getAcciones();\n        \n    }\n\n    ngOnInit(){\n       this.favorito = new RecomendadasModelo(\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"); \n    }\n\n    getAcciones(){\n        this._favoritoService.getAcciones().subscribe(\n            result => {\n                console.log(result);\n                this.accionesTraidas = result.acciones;\n                console.log('Recomendadas: ');\n                console.log(this.accionesTraidas);\n                if(!this.accionesTraidas){\n                    alert('Error en el servidor');\n                }\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log('Error en la petición');\n                }\n            }\n        );\n    }\n\n    onBorraraccion(id){\n        this._favoritoService.deleteAccion(id).subscribe(\n            result => {\n                if(!result.message){\n                    alert('Error en la petición');\n                }\n                this.getAcciones();\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error borrando accion');\n                }\n            }\n        )\n    }\n\n    public onSubmit(){\n        console.log(this.favorito);\n        this._favoritoService.addAcciones(this.favorito).subscribe(\n            response => {\n                if(!response){\n                    alert('Error en el servidor');\n                } else{\n                    this.favorito = response;\n                    console.log(response);\n                    this._router.navigate(['/recomendadas']);\n                    alert('Nueva acción añadida, actualice el navegador para verla');\n                }\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error guardando datos en base de datos');\n                }\n            }\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/recomendadas.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n@Component({\n    selector: 'etiqueta-rusia',\n    templateUrl: '../vistas/rusia.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Rusia implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Rusia';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('rusia')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Rusia borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('MCX').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(200000).then(() => {\n                    // Recopilamos datos anual, semetral y mensual\n                    for (let stock of this.datosFinales) {                 \n                    //this.sleep(100000).then(() => {\n                        this.mensual(stock.ticker); \n                    //});\n                    this.sleep(120000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(240000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(360000).then(() => {\n                        this._favoritoService.addPais(stock,'rusia').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Rusia agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'ZAR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'ZAR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado ruso'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/rusia.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n@Component({\n    selector: 'etiqueta-suecia',\n    templateUrl: '../vistas/suecia.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Suecia implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Suecia';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('suecia')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Suecia borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('ST').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                this.sleep(300000).then(() => {\n                    for (let stock of this.datosFinales) {                 \n                        this.mensual(stock.ticker); \n                    this.sleep(150000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(300000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(450000).then(() => {\n                        this._favoritoService.addPais(stock,'suecia').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Suecia agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado sueco'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/suecia.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n@Component({\n    selector: 'etiqueta-suiza',\n    templateUrl: '../vistas/suiza.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class Suiza implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top Suiza';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('suiza')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de Suiza borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('SW').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(350000).then(() => {\n                    for (let stock of this.datosFinales) {                 \n                        this.mensual(stock.ticker); \n                    this.sleep(120000).then(() => {\n                        this.semestral(stock.ticker);\n                    });                   \n                    this.sleep(240000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(360000).then(() => {\n                        this._favoritoService.addPais(stock,'suiza').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de Suiza agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            }); \n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,4).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,2).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado suizo'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/suiza.ts","import {Component, OnInit} from '@angular/core';\nimport { Pipi} from '../servicios/pipe';\nimport { Router, ActivatedRoute, Params } from '@angular/router'; // fundamental para funcionar con router\nimport 'rxjs/add/operator/debounceTime';\n// Importamos servicio y modelo \nimport {ApiServicio} from '../servicios/api';\nimport {Servicio1} from '../servicios/servicio1';\nimport {Modelo1} from '../modelos/modelo1';\n\n@Component({\n    selector: 'etiqueta-uk',\n    templateUrl: '../vistas/uk.html',\n    styleUrls: ['../css/styles.css'],\n    providers: [Servicio1, Pipi, ApiServicio],\n})\n\nexport class UK implements OnInit {\n\n    isDesc: boolean = false;\n    column: String = 'anual';\n    direction: number;\n\n    public titulo: string;\n    reverse : boolean = false;\n    order : String = 'anual';\n    public errorMen;\n    public modelos: Modelo1[];\n    public datosFinales : any[] = [];\n    public diarioArray: Modelo1[];\n    public acciones: Modelo1[];\n    public terminoMensual : boolean = false;\n    public terminoAnual : boolean = false;\n    public terminoSemestral : boolean = false;\n\n    // ejemplo chorra\n    public arrayEjemplo: Array<string>;\n    public arrayVisible: boolean;\n\n    constructor(\n        private _servicio1: Servicio1,\n        private _favoritoService : ApiServicio, \n        private _route : ActivatedRoute, \n        private _router : Router\n    ){\n        this.titulo = 'Top UK';\n        this.arrayVisible = false;\n    }\n\n    ngOnInit(){\n        this\n        ._favoritoService\n        .deletePais('uk')\n        .subscribe(result => {\n            console.log(result);\n            if (!result) {\n                alert('Error al borrar');\n            }\n        }\n        ,);\n        console.log('API de UK borrada');\n        // Aquí le pasamos el mercado que queremos parsear\n        this._servicio1.getModelos('LSE').subscribe(\n            result => { \n                this.modelos = result;\n                this.recopilarDatos(result);\n                // Esperamos que seleccione los mayores de 3\n                this.sleep(450000).then(() => {\n                    for (let stock of this.datosFinales) {                 \n                        this.mensual(stock.ticker); \n                    this.sleep(170000).then(() => {\n                        this.semestral(stock.ticker);\n                    });\n                                       \n                    this.sleep(340000).then(() => {\n                        this.anual(stock.ticker);\n                    });\n                    this.sleep(500000).then(() => {\n                        this._favoritoService.addPais(stock,'uk').subscribe(\n                        response =>{\n                            if(!response){\n                                console.log('error al recibir confirmacion de guardado');\n                            } else{\n                                console.log('Información de UK agregada a base de datos');\n                                }\n                            },\n                        error =>{\n                            console.log('Error al guardar datos')\n                        }\n                        );\n                    });\n                }                             \n            });\n                console.log(this.datosFinales); \n                \n                if(!this.modelos){alert('Error en la petición de datos de este mercado')}\n            },\n            error => {\n                this.errorMen = <any>error;\n                if(this.errorMen != null){\n                    console.log(this.errorMen);\n                    alert('Error en la peticion2');\n                }\n            }\n        );\n    }\n    \n    sleep (time) {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    ordenar(value : string) {\n        if (this.order === value) {\n          this.reverse = !this.reverse;\n        }\n        this.order = value;\n      }\n\n      formatearNombre(valor){\n        let nombreBien;\n          nombreBien = valor.split(' ').slice(0,3).join(' ');\n          return nombreBien;\n      }\n\n    // Miramos el Anual\n    anual(tickerRecibido){\n        console.log('Empieza anual'); \n        let resultado;\n        let total;\n        this._servicio1.getAnual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else { \n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube';\n\n                        if(anual > 70 && anual < 400){\n\n                            // Aquí metemos el nuevo código del biAnual\n                            this._servicio1.getbiAnual(tickerRecibido).subscribe(\n                                result => {\n                                    if(!result){\n                                        alert('No obtenemos resultado en el parseo BiAnual')\n                                    } else {\n                                    let hoyBi = parseFloat(result[0].adjusted_close);\n                                    let ayerBi = parseFloat(result[result.length - 1].adjusted_close);\n                                        if(hoyBi > ayerBi){\n                                            let cuentaResultado = hoyBi - ayerBi;\n                                            let comparacion = cuentaResultado / ayerBi;\n                                            total = comparacion * 100;\n                                            resultado = parseInt(total);\n                                            let biAnual = resultado;\n\n                                            if(biAnual > 150 && biAnual > anual){\n                                              let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'EUR', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                                              this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                                  response =>{\n                                                      if(!response){\n                                                          console.log('error al recibir confirmacion de guardado');\n                                                      }\n                                                      else{\n                                                          console.log('Información de Topmundo agregada a base de datos');\n                                                      }\n                                                  },\n                                                  error =>{\n                                                      console.log('Error al guardar datos')\n                                                  }\n                                              );\n                                            }\n                                          }\n                                        }\n                                      }\n                                    )\n                            // Aquí termina el nuevo código del bianual\n                        }\n                        /*if(anual > 80 && anual < 300){\n                            let stock ={nombre: datoAnual.nombre, ticker: tickerRecibido, moneda: 'LIBRAS', valor: datoAnual.valor, anual: anual,semestral: datoAnual.semestral,mensual: datoAnual.mensual};\n                            this._favoritoService.addPais(stock,'topmundo').subscribe(\n                                response =>{\n                                    if(!response){\n                                        console.log('error al recibir confirmacion de guardado');\n                                    }\n                                    else{\n                                        console.log('Información de Topmundo agregada a base de datos');\n                                    }\n                                },\n                                error =>{\n                                    console.log('Error al guardar datos')\n                                }\n                            );\n                        }*/\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.anual=anual;\n                        datoAnual.anualD='sube'; \n                    } \n                }\n            },\n        );\n    }\n    \n    // Miramos el Semestral\n    semestral(tickerRecibido){ //base,mercado\n        console.log('Empieza Semestral'); \n        let resultado;\n        let total;\n        this._servicio1.getSemestral(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                \n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.semestral=anual;\n                        datoAnual.semestralD='sube';\n                    } \n                }\n            },\n        );\n    }\n\n    // Miramos el Anual\n    mensual(tickerRecibido){ //base,mercado\n        console.log('Empieza mensual');\n        let resultado;\n        let total;\n        this._servicio1.getMensual(tickerRecibido).subscribe(\n            result => {\n                if(!result){\n                    alert('No obtenemos resultado en el parseo Anual')\n                } else {\n                let hoy = parseFloat(result[0].adjusted_close);\n                let ayer = parseFloat(result[result.length - 1].adjusted_close);\n                if(hoy > 2 && ayer > 2){\n                    if(hoy > ayer){\n                        let cuentaResultado = hoy - ayer;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = parseInt(total);\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n\n                    } else if(hoy < ayer){\n                        let cuentaResultado = ayer - hoy;\n                        let comparacion = cuentaResultado / ayer;\n                        total = comparacion * 100;\n                        resultado = -(parseInt(total));\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='baja';\n                        \n                    } else if(hoy == ayer){\n                        resultado = 0;\n                        let anual = resultado;\n\n                        let datoAnual = this.datosFinales.find((p) => {\n                            return p.ticker === tickerRecibido;\n                        });\n                        datoAnual.mensual=anual;\n                        datoAnual.mensualD='sube';\n                    }\n                }\n                }\n            },\n        );\n    }\n    valor(ticker){\n       \n}\n    // Aquí creamos el array de objetos final que luego leemos en el html\n    recopilarDatos(result){ // mirar aquí y descartar acciones con precios bajos\n    let arrayComprueba = [];         \n        for (let stock of result) {\n            let nombreComprobar = stock.Name.split(' ').slice(0,1).join(' ');\n            if (arrayComprueba.indexOf(nombreComprobar) === -1) {\n                arrayComprueba.push(nombreComprobar);\n\n                console.log('Recopilamos datos del mercado inglés'); \n                let nombre: string = stock.Name;\n                let ticker: string = stock.Code+'.'+stock.Country;\n                let moneda: string = stock.Currency;\n                this._servicio1.seleccionarMas3(ticker).subscribe(\n                    result => {\n                        if(!result){\n                            alert('No obtenemos resultados de acciones')\n                        } else { \n                        let hoy = parseFloat(result.close); //[0] \n                        if(hoy > 3){\n                            this.datosFinales.push({\n                                \"nombre\": nombre,\n                                \"ticker\": ticker,\n                                \"moneda\": moneda,\n                                \"valor\": hoy\n                              });   \n                        }\n                    }\n                    });\n            }\n            \n                }                 \n    }\n\n    parseFloat(value) {\n        let decimales = parseFloat(value).toFixed(1);\n        return decimales;\n    }\n\n    mostrarArray(){\n        this.arrayVisible = true;\n    }\n\n    ocultarArray(){\n        this.arrayVisible = false;\n    } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/componentes/uk.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n}\\n\\n.bordeNegro {\\n    border: 5px solid black;\\n}\\n\\n.bordeVerde {\\n    border: 5px solid green;\\n}\\n\\n.rojo {\\n    color: red;\\n}\\n\\n.verde {\\n    color: green;\\n}\\n\\n.izquierda {\\n    float: left;\\n    width: 48%;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    max-width: 48%;\\n    text-transform: uppercase;\\n}\\n\\n.derecha {\\n    float: right;\\n    text-align: left;\\n    width: 49%;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    text-transform: uppercase;\\n}\\n\\n#customers {\\n    font-family: \\\"Trebuchet MS\\\", Arial, Helvetica, sans-serif;\\n    border-collapse: collapse;\\n    width: 100%;\\n}\\n\\n#customers td, #customers th {\\n    border: 1px solid #ddd;\\n    text-align: left;\\n    padding: 8px;\\n    width: 49%;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    text-transform: uppercase;\\n}\\n\\n#customers tr:nth-child(even){background-color: #f2f2f2}\\n\\n#customers tr:hover {background-color: #ddd;}\\n\\n#customers th {\\n    padding-top: 12px;\\n    padding-bottom: 12px;\\n    background-color: #4CAF50;\\n    color: white;\\n}\\n\\n.contenedor {\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n    width: 100%;\\n    margin: 0 auto;\\n    height: 100%;\\n    font-size: 11px;\\n}\\n\\n.pointer {\\n    cursor: pointer;\\n}\\n\\n.centrar {\\n    width: 50%;\\n    margin: 0 auto;\\n}\\n\\n.clearfix {\\n    float: none;\\n    clear: both;\\n    text-decoration: none;\\n    list-style: none;\\n}\\n\\n.container {\\n    margin: 0 auto;\\n    background: #eee;\\n}\\n\\n/* Código según gpt para un div recortarlo en 300px y terminar las letras con ... */\\n.accor{\\n    font-weight: bold;\\n    \\n}\\n.asesor {\\n    width: 100%;\\n    float: none;\\n    clear: both;\\n}\\n\\n#content {\\n    width: 100%;\\n    padding-left: 5%;\\n    padding-right: 5%;\\n    margin: 0px auto;\\n    /*margin-top: 20px;\\n    /*border: 1px solid #ccc;\\n    border-radius: 5px;\\n    box-shadow: 0px 0px 5px #ddd;\\n    */\\n    background: #eee;\\n}\\n\\nheader {\\n    padding: 15px;\\n    background: #229138;\\n}\\n\\nheader .title-subtitle {\\n    border-bottom: 1px solid white;\\n    border-top: 1px solid white;\\n    color: white;\\n    padding: 7px;\\n}\\n\\nheader h1,\\nheader p {\\n    margin: 0px;\\n    margin-left: 15px;\\n    color: white;\\n}\\n\\nheader .title-subtitle a {\\n    text-decoration: none;\\n    color: white;\\n}\\n\\nheader .title-subtitle a:hover {\\n    text-decoration: underline;\\n}\\n\\nheader p {\\n    color: #ddd;\\n}\\n\\nheader #logo {\\n    width: 50px;\\n    display: block;\\n    float: left;\\n    margin-top: 25px;\\n}\\n\\n.btn {\\n    font-size: 13px;\\n    border: 1px solid #ccc;\\n    border-color: #1976d2;\\n    border-radius: 4px;\\n    box-shadow: 0px 0px 5px #ddd;\\n    padding: 5px;\\n    text-decoration: none;\\n    color: white;\\n    background: #0074d9;\\n    cursor: pointer;\\n    margin-left: 5px;\\n}\\n\\n.btn-editar {\\n    background: #0A0;\\n    border-color: #59a600;\\n}\\n\\n.btn-eliminar {\\n    background: rgb(170, 0, 0);\\n    border-color: #a6001c;\\n}\\n\\n.btn-ver {\\n    background: black;\\n    border-color: black;\\n}\\n\\n#acciones-list {\\n    padding: 0px;\\n    margin: 0 px;\\n}\\n\\n.accion-item {\\n    list-style: none;\\n    width: 31%;\\n    border: 1px solid #ddd;\\n    float: left;\\n    padding-top: 20px;\\n    padding-bottom: 20px;\\n    padding-left: 5px;\\n    color: gray;\\n    background: #eee;\\n    margin: 10px;\\n}\\n\\n.recomendadas {\\n    padding: 1%;\\n}\\n\\n.accion-cabecera {\\n    list-style: none;\\n    width: 47%;\\n    border: 1px solid #ddd;\\n    float: left;\\n    padding-top: 20px;\\n    padding-left: 5px;\\n    padding-bottom: 20px;\\n    color: gray;\\n    background: rgb(212, 244, 204);\\n    margin: 10px;\\n}\\n\\n.accion-item .content-data .accion-cabecera {\\n    float: left;\\n    margin-left: 20px;\\n}\\n\\n.mayusculas {\\n    font-weight: bold;\\n    text-transform: uppercase;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/css/styles.css\n// module id = ../../../../../src/app/css/styles.css\n// module chunks = 1","export class RecomendadasModelo {\n    constructor(\n        public _id: string,\n        public alto: string,\n        public stop: string,\n        public nombre: string,\n        public ticker: string,\n        public imagen: string,\n\n        public espanol: string,\n        public gallego: string,\n        public catalan: string,\n        public vasco: string,\n\n        public ingles: string,\n        public chino: string,\n        public arabe: string,\n        public italiano: string,\n        public aleman: string,\n        public frances: string,\n        public portugues: string,\n        public ruso: string,\n        public hindi: string,\n        public japones: string\n    ){}\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/modelos/recomendadas.ts","import {Injectable} from '@angular/core';\nimport {Http, Response, Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport {Observable} from 'rxjs/Observable';\nimport {Modelo1} from '../modelos/modelo1';\nimport {RecomendadasModelo} from '../modelos/recomendadas';\n\n@Injectable()\nexport class ApiServicio{\n\n    public url: string;\n    public acciones : Modelo1[];\n\n    constructor(private _http: Http){\n        this.url = 'http://207.154.253.101:3678/api/'; \n        // si tengo que hacer pruebas en local: this.url = 'http://localhost:3678/api/';\n        // para subirlo al ssh de ocean: http://207.154.253.101:3678/api/\n    }\n\n    getAcciones(){\n        return this._http.get(this.url+'acciones').map(res => res.json());\n    }\n\n    getAccion(id: String){\n        return this._http.get(this.url+'accion/'+id).map(res => res.json());\n    }\n\n    deleteAccion(id: String){\n        return this._http.delete(this.url+'accion/'+id).map(res => res.json());\n    }\n\n    addAcciones(recomendadas: RecomendadasModelo){\n        let json = JSON.stringify(recomendadas);\n        let params = json;\n        let headers = new Headers({'Content-Type':'application/json'});\n\n        return this._http.post(this.url+'accion',params,{headers: headers}).map(res => res.json());\n    }\n\n    getPais(pais){\n        return this._http.get(this.url+pais).map(res => res.json());\n    }\n\n    addPais(acciones, pais){\n        let json = JSON.stringify(acciones);\n        let params = json;\n        let headers = new Headers({'Content-Type':'application/json'});\n\n        return this._http.post(this.url+pais,params,{headers: headers}).map(res => res.json());\n    }\n\n    deletePais(pais){\n\n        return this._http.delete(this.url+pais).map(res => res.json());\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/servicios/api.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderBy'\n})\n\nexport class Pipi implements PipeTransform {\n \n  transform(value: any[], expression?: any, reverse?: boolean): any {\n    if (!value) {\n      return value;\n    }\n\n    let array: any[] = value.sort((a: any, b: any) => a[expression] > b[expression] ? 1 : -1)\n\n    if (reverse) {\n      return array.reverse();\n    } \n\n    return array;\n  } \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/servicios/pipe.ts","import {Injectable} from '@angular/core';\nimport {Http, Response, Headers} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/retryWhen';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/take';\nimport {Observable} from 'rxjs/Observable';\nimport {Modelo1} from '../modelos/modelo1';\n\n@Injectable()\nexport class Servicio1{\n    public url: string;\n\n    constructor(private _http: Http){\n    }\n\n    getModelos(mercado){\n        return this._http.get('https://eodhistoricaldata.com/api/exchanges/'+mercado+'?api_token=5a307d03efdb0&fmt=json').map(res => res.json());\n    }\n\n    seleccionarMas3(ticker){\n        return this._http.get('https://eodhistoricaldata.com/api/real-time/'+ticker+'?api_token=5a307d03efdb0&fmt=json').map(res => res.json()).retryWhen(errors => \n        errors.delay(60000).take(100));\n    }\n\n    getDiario(ticker){\n        return this._http.get('http://eodhistoricaldata.com/api/real-time/'+ticker+'?api_token=5a307d03efdb0&fmt=json').map(res => res.json());\n    }\n\n    //Anual\n    getAnual(ticker){\n        let hoy = new Date().toISOString().split('T')[0];\n        let calculoAno = Date.now() + -365 * 24 * 3600 * 1000;\n        var anoPasado = new Date(calculoAno).toISOString().split('T')[0];\n        return this._http.get('https://eodhistoricaldata.com/api/eod/'+ticker+'?api_token=5a307d03efdb0&period=d&fmt=json&order=d&from='+anoPasado+'&to='+hoy).map(res => res.json()).retryWhen(errors => \n        errors.delay(60000).take(100));\n    }\n    \n      //2Anual\n      getbiAnual(ticker){\n        let hoy = new Date().toISOString().split('T')[0];\n        let calculoAno = Date.now() + -730 * 24 * 3600 * 1000;\n        var ano2Pasado = new Date(calculoAno).toISOString().split('T')[0];\n        return this._http.get('https://eodhistoricaldata.com/api/eod/'+ticker+'?api_token=5a307d03efdb0&period=d&fmt=json&order=d&from='+ano2Pasado+'&to='+hoy).map(res => res.json()).retryWhen(errors =>\n        errors.delay(60000).take(100));\n    }\n\n    getDatoGrafica1(ticker){\n        let hoy = new Date().toISOString().split('T')[0];\n        let calculoAno = Date.now() + -547 * 24 * 3600 * 1000;\n        var ano2Pasado = new Date(calculoAno).toISOString().split('T')[0];\n        return this._http.get('https://eodhistoricaldata.com/api/eod/'+ticker+'?api_token=5a307d03efdb0&period=d&fmt=json&order=d&from='+ano2Pasado+'&to='+hoy).map(res => res.json()).retryWhen(errors =>\n        errors.delay(60000).take(100));\n    }\n\n    getDatoGrafica2(ticker){\n        let hoy = new Date().toISOString().split('T')[0];\n        let calculoAno = Date.now() + -912 * 24 * 3600 * 1000;\n        var ano2Pasado = new Date(calculoAno).toISOString().split('T')[0];\n        return this._http.get('https://eodhistoricaldata.com/api/eod/'+ticker+'?api_token=5a307d03efdb0&period=d&fmt=json&order=d&from='+ano2Pasado+'&to='+hoy).map(res => res.json()).retryWhen(errors =>\n        errors.delay(60000).take(100));\n    }\n\n        //3Anual\n      getriAnual(ticker){\n        let hoy = new Date().toISOString().split('T')[0];\n        let calculoAno = Date.now() + -1100 * 24 * 3600 * 1000;\n        var ano2Pasado = new Date(calculoAno).toISOString().split('T')[0];\n        return this._http.get('https://eodhistoricaldata.com/api/eod/'+ticker+'?api_token=5a307d03efdb0&period=d&fmt=json&order=d&from='+ano2Pasado+'&to='+hoy).map(res => res.json()).retryWhen(errors =>\n        errors.delay(60000).take(100));\n    }\n\n    getSemestral(ticker){\n        let hoy = new Date().toISOString().split('T')[0];\n        let calculoAno = Date.now() + -180 * 24 * 3600 * 1000;\n        var semestrePasado = new Date(calculoAno).toISOString().split('T')[0];\n        return this._http.get('https://eodhistoricaldata.com/api/eod/'+ticker+'?api_token=5a307d03efdb0&period=d&fmt=json&order=d&from='+semestrePasado+'&to='+hoy).map(res => res.json()).retryWhen(errors => \n        errors.delay(60000).take(100));\n    }\n\n    getMensual(ticker){\n        let hoy = new Date().toISOString().split('T')[0];\n        let calculoAno = Date.now() + -30 * 24 * 3600 * 1000;\n        var semestrePasado = new Date(calculoAno).toISOString().split('T')[0];\n        return this._http.get('https://eodhistoricaldata.com/api/eod/'+ticker+'?api_token=5a307d03efdb0&period=d&fmt=json&order=d&from='+semestrePasado+'&to='+hoy).map(res => res.json()).retryWhen(errors => \n        errors.delay(60000).take(100));\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/servicios/servicio1.ts","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/alemania.html\n// module id = ../../../../../src/app/vistas/alemania.html\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <!-- --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('topmundo')\\\">Borrar datos de la API del Top Mundo</button> --- -->\\n        <HR><b>TOP MUNDO</b>   \\n        <button (click)=\\\"ordenar('col8')\\\">3 años</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col7')\\\">2 años</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col6')\\\">1 año</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        \\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of topmundo | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\">\\n                \\n                <b>\\n                3a:\\n                <span *ngIf=\\\"datos.col8 > -1\\\">\\n                                                                                <span class=\\\"verde\\\"><b>+{{datos.col8}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col8 < 0\\\">\\n                                                                                <span class=\\\"rojo\\\"><b>{{datos.col8}}%</b></span>\\n                \\n                </span>\\n                / 2a:\\n                <span *ngIf=\\\"datos.col7 > -1\\\">\\n                                                                                <span class=\\\"verde\\\"><b>+{{datos.col7}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col7 < 0\\\">\\n                \\n                </span>                                                                 <span class=\\\"rojo\\\"><b>{{datos.col7}}%</b></span>\\n                / 1A:\\n                <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / 6m:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / 1m:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                \\n                \\n                </span>\\n            </div>\\n        </div>\\n        -\\n        <HR><b>Cryptomonedas</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('crypto')\\\">Borrar datos de la API de Crypto</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of crypto | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>ESPAÑA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('espana')\\\">Borrar datos de la API de España</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of espana | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                            <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>ALEMANIA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('alemania')\\\">Borrar datos de la API de Alemania</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of alemania | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                    <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                        <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                        <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                        <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                        <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                        <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                        <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>AUSTRALIA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('australia')\\\">Borrar datos de la API de Australia</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of australia | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                        <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                            <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                            <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                            <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                            <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                            <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                            <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>AUSTRIA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('austria')\\\">Borrar datos de la API de Austria</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of austria | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                            <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>BÉLGICA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('belgica')\\\">Borrar datos de la API de Bélgica</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of belgica | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>BRASIL</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('brasil')\\\">Borrar datos de la API de Brasil</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of brasil | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                    <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                        <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                        <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                        <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                        <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                        <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                        <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>CANADÁ</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('canada')\\\">Borrar datos de la API de Canadá</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of canada | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                        <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                            <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                            <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                            <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                            <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                            <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                            <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>CHINA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('china')\\\">Borrar datos de la API de China</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of china | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                            <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>DINAMARCA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('dinamarca')\\\">Borrar datos de la API de Dinamarca</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of dinamarca | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                                <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>EEUU</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('eeuu')\\\">Borrar datos de la API de EEUU</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of eeuu | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                                    <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                        <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                        <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                        <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                        <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                        <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                        <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>FRANCIA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('francia')\\\">Borrar datos de la API de Francia</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of francia | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                                            <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>HOLANDA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('holanda')\\\">Borrar datos de la API de Holanda</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of holanda | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                                                <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>INDIA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('india')\\\">Borrar datos de la API de India</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of india | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                                            <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n\\n\\n        -\\n        <HR><b>ITALIA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('italia')\\\">Borrar datos de la API de Italia</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of italia | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n\\n        -\\n        <HR><b>MEXICO</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('mexico')\\\">Borrar datos de la API de Mexico</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of mexico | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                        <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                            <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                            <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                            <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                            <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                            <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                            <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>NORUEGA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('noruega')\\\">Borrar datos de la API de Noruega</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of noruega | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                            <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>PORTUGAL</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('portugal')\\\">Borrar datos de la API de Portugal</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of portugal | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                                <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>RUSIA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('rusia')\\\">Borrar datos de la API de Rusia</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of rusia | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                                    <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                        <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                        <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                        <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                        <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                        <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                        <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>SUECIA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('suecia')\\\">Borrar datos de la API de Suecia</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of suecia | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                                        <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                            <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                            <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                            <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                            <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                            <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                            <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>SUIZA</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('suiza')\\\">Borrar datos de la API de Suiza</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of suiza | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                                            <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>UK</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('uk')\\\">Borrar datos de la API de UK</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of uk | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                                                <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                                    <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                                    <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n        -\\n        <HR><b>Japon</b> --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('japon')\\\">Borrar datos de la API de Japon</button> ---\\n        <button (click)=\\\"ordenar('col6')\\\">Anual</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of japon | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.col1)}}</span> ({{datos.col0}}) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>Anual:\\n                                                                                                            <span *ngIf=\\\"datos.col6 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col6}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col6 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col6}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.col5 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col5}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col5 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col5}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.col4 > -1\\\">\\n                                                                                                                <span class=\\\"verde\\\"><b>+{{datos.col4}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.col4 < 0\\\">\\n                                                                                                                <span class=\\\"rojo\\\"><b>{{datos.col4}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/api.html\n// module id = ../../../../../src/app/vistas/api.html\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <!-- --- <button class=\\\"pointer\\\" (click)=\\\"borrarPais('topmundo')\\\">Borrar datos de la API del Top Mundo</button> --- -->\\n        <HR><b>TOP MUNDO</b>.<!--<i> (Última actualización: {{datos.col9}})</i>. -->\\n        <button (click)=\\\"ordenar('col8')\\\">3 años</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col7')\\\">2 años</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col6')\\\">1 año</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col5')\\\">Semestral</button>\\n        <button class=\\\"pointer\\\" (click)=\\\"ordenar('col4')\\\">Mensual</button>\\n        <HR>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        \\n        <table id=\\\"customers\\\">\\n            <tr>\\n                <th>Nombre, ticker y valor</th>\\n                <th>3 años / 2 años / 1 año / 6 meses / 1 mes</th>\\n            </tr>\\n            <tr *ngFor=\\\"let datos of topmundo | orderBy:order:reverse; let i = index\\\">\\n                <td>{{i+1}}. <img src=\\\"{{bandera(datos.col0)}}\\\" width=\\\"17\\\" height=\\\"12\\\"> {{formatearNombre(datos.col1)}} (<span class=\\\"accor\\\">{{datos.col0}}</span>) - <i>Valor: <b>{{datos.col2}}</b></i></td>\\n                <td><b>3a:<span *ngIf=\\\"datos.col8 > -1\\\"><span class=\\\"verde\\\">+{{datos.col8}}%</span></span>\\n                    <span *ngIf=\\\"datos.col8 < 0\\\"><span class=\\\"rojo\\\">{{datos.col8}}%</span></span>\\n              / 2a:<span *ngIf=\\\"datos.col7 > -1\\\"><span class=\\\"verde\\\">+{{datos.col7}}%</span></span>\\n               <span *ngIf=\\\"datos.col7 < 0\\\"><span class=\\\"rojo\\\">{{datos.col7}}%</span></span>\\n              / 1a:<span *ngIf=\\\"datos.col6 > -1\\\"><span class=\\\"verde\\\">+{{datos.col6}}%</span></span>\\n               <span *ngIf=\\\"datos.col6 < 0\\\"><span class=\\\"rojo\\\">{{datos.col6}}%</span></span></b>\\n               \\n               <b>/ 6m:</b><span *ngIf=\\\"datos.col5 > -1\\\"><span class=\\\"verde\\\">+{{datos.col5}}%</span></span>\\n              <span *ngIf=\\\"datos.col5 < 0\\\"><span class=\\\"rojo\\\">{{datos.col5}}%</span></span>\\n              <b>/ 1m:</b>\\n              <span *ngIf=\\\"datos.col4 > -1\\\"><span class=\\\"verde\\\">+{{datos.col4}}%</span></span>\\n              <span *ngIf=\\\"datos.col4 < 0\\\"><span class=\\\"rojo\\\">{{datos.col4}}%</span></span></td>\\n            </tr>          \\n        </table>\\n        <!--\\n        <div *ngFor=\\\"let datos of topmundo | orderBy:order:reverse; let i = index\\\">\\n\\n                <div class=\\\"izquierda\\\">{{i+1}}. <img src=\\\"{{bandera(datos.col0)}}\\\" width=\\\"17\\\" height=\\\"12\\\"> {{formatearNombre(datos.col1)}} (<span class=\\\"accor\\\">{{datos.col0}}</span>) - <i>Valor: <b>{{datos.col2}}</b></i></div>\\n                <div class=\\\"derecha\\\">\\n                    <b>3a:<span *ngIf=\\\"datos.col8 > -1\\\"><span class=\\\"verde\\\">+{{datos.col8}}%</span></span>\\n                          <span *ngIf=\\\"datos.col8 < 0\\\"><span class=\\\"rojo\\\">{{datos.col8}}%</span></span>\\n                    / 2a:<span *ngIf=\\\"datos.col7 > -1\\\"><span class=\\\"verde\\\">+{{datos.col7}}%</span></span>\\n                     <span *ngIf=\\\"datos.col7 < 0\\\"><span class=\\\"rojo\\\">{{datos.col7}}%</span></span>\\n                    / 1a:<span *ngIf=\\\"datos.col6 > -1\\\"><span class=\\\"verde\\\">+{{datos.col6}}%</span></span>\\n                     <span *ngIf=\\\"datos.col6 < 0\\\"><span class=\\\"rojo\\\">{{datos.col6}}%</span></span></b>\\n                     \\n                     <b>/ 6m:</b><span *ngIf=\\\"datos.col5 > -1\\\"><span class=\\\"verde\\\">+{{datos.col5}}%</span></span>\\n                    <span *ngIf=\\\"datos.col5 < 0\\\"><span class=\\\"rojo\\\">{{datos.col5}}%</span></span>\\n                    <b>/ 1m:</b>\\n                    <span *ngIf=\\\"datos.col4 > -1\\\"><span class=\\\"verde\\\">+{{datos.col4}}%</span></span>\\n                    <span *ngIf=\\\"datos.col4 < 0\\\"><span class=\\\"rojo\\\">{{datos.col4}}%</span></span>\\n                </div>    \\n        </div>-->\\n\\n\\n\\n        <div class=\\\"asesor\\\"><br>\\n        <HR><b>ASESOR: </b>\\n        <HR>\\n        \\n            <form (submit)=\\\"calcular()\\\">\\n                <label>Precio máximo:</label>\\n                <input type=\\\"number\\\" [(ngModel)]=\\\"num1\\\" name=\\\"num1\\\"><br><br>\\n              \\n                <label>Precio mínimo:</label>\\n                <input type=\\\"number\\\" [(ngModel)]=\\\"num2\\\" name=\\\"num2\\\"><br><br>\\n              \\n                <label>Riesgo a asumir:</label>\\n                <input type=\\\"number\\\" [(ngModel)]=\\\"num3\\\" name=\\\"num3\\\"><br><br>\\n              \\n                <button type=\\\"submit\\\">Calcular</button>\\n              </form>\\n              \\n              <p>{{resultado}}</p></div>\\n        \\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/api2023.html\n// module id = ../../../../../src/app/vistas/api2023.html\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    {{title}}\\n    <div class=\\\"contenedor\\\">\\n        <HR><b>TOP MUNDO</b> --- <span class=\\\"verde\\\">{{contadorTopmundo}}</span> títulos.\\n        <HR><b>AUSTRALIA</b> --- <span class=\\\"verde\\\">{{contadorAustralia}}</span> títulos.\\n        <HR><b>ESPAÑA</b> --- <span class=\\\"verde\\\">{{contadorEspana}}</span> títulos.\\n        <HR><b>FRANCIA</b> --- <span class=\\\"verde\\\">{{contadorFrancia}}</span> títulos.\\n        <HR><b>ALEMANIA</b> --- <span class=\\\"verde\\\">{{contadorAlemania}}</span> títulos.\\n        <HR><b>DINAMARCA</b> --- <span class=\\\"verde\\\">{{contadorDinamarca}}</span> títulos.\\n        <HR><b>AUSTRIA</b> --- <span class=\\\"verde\\\">{{contadorAustria}}</span> títulos.\\n        <HR><b>BÉLGICA</b> --- <span class=\\\"verde\\\">{{contadorBelgica}}</span> títulos.\\n        <HR><b>SUECIA</b> --- <span class=\\\"verde\\\">{{contadorSuecia}}</span> títulos.\\n        <HR><b>SUIZA</b> --- <span class=\\\"verde\\\">{{contadorSuiza}}</span> títulos.\\n        <HR><b>UK</b> --- <span class=\\\"verde\\\">{{contadorUk}}</span> títulos.\\n        <HR><b>MEXICO</b> --- <span class=\\\"verde\\\">{{contadorMexico}}</span> títulos.\\n        <HR><b>PORTUGAL</b> --- <span class=\\\"verde\\\">{{contadorPortugal}}</span> títulos.\\n        <HR><b>HOLANDA</b> --- <span class=\\\"verde\\\">{{contadorHolanda}}</span> títulos.\\n        <HR><b>ITALIA</b> --- <span class=\\\"verde\\\">{{contadorItalia}}</span> títulos.\\n        <HR><b>NORUEGA</b> --- <span class=\\\"verde\\\">{{contadorNoruega}}</span> títulos.\\n        <HR><b>RUSIA</b> --- <span class=\\\"verde\\\">{{contadorRusia}}</span> títulos.\\n        <HR><b>IRLANDA</b> --- <span class=\\\"verde\\\">{{contadorBrasil}}</span> títulos.\\n        <HR><b>CANADÁ</b> --- <span class=\\\"verde\\\">{{contadorCanada}}</span> títulos.\\n        <HR><b>CHINA</b> --- <span class=\\\"verde\\\">{{contadorChina}}</span> títulos.\\n        <HR><b>INDIA</b> --- <span class=\\\"verde\\\">{{contadorIndia}}</span> títulos.\\n        <HR><b>EEUU</b> --- <span class=\\\"verde\\\">{{contadorEEUU}}</span> títulos.\\n        <HR><b>CRYPTO</b> --- <span class=\\\"verde\\\">{{contadorCrypto}}</span> títulos.\\n        <HR><b>JAPON</b> --- <span class=\\\"verde\\\">{{contadorJapon}}</span> títulos.\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/apiRobot.html\n// module id = ../../../../../src/app/vistas/apiRobot.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/australia.html\n// module id = ../../../../../src/app/vistas/australia.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/austria.html\n// module id = ../../../../../src/app/vistas/austria.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/belgica.html\n// module id = ../../../../../src/app/vistas/belgica.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/brasil.html\n// module id = ../../../../../src/app/vistas/brasil.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/canada.html\n// module id = ../../../../../src/app/vistas/canada.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/china.html\n// module id = ../../../../../src/app/vistas/china.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/dinamarca.html\n// module id = ../../../../../src/app/vistas/dinamarca.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of mercadoAcciones | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{datos.nombre}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/eeuu.html\n// module id = ../../../../../src/app/vistas/eeuu.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{datos.nombre}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/espana.html\n// module id = ../../../../../src/app/vistas/espana.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/francia.html\n// module id = ../../../../../src/app/vistas/francia.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/holanda.html\n// module id = ../../../../../src/app/vistas/holanda.html\n// module chunks = 1","module.exports = \"<!-- mostramos otro componente -->\\n<!-- <etiqueta-espana></etiqueta-espana> -->\\n\\n\\n<!--<link rel=\\\"stylesheet\\\" href=\\\"../css/styles.css\\\" />-->\\n\\n<strong>{{title}}</strong>\\n\\n\\n<ul>\\n    <li class=\\\"accion-cabecera\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>API</h4>\\n            <p>Ver lo que hay en la API</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/api']\\\" target=\\\"_blank\\\" class=\\\"btn btn-editar\\\">\\n                                    Ver datos en API\\n                        </a>\\n                <a [routerLink]=\\\"['/apiRobot']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                    Cargar API y Robot Parseador de Mercados\\n                                </a><a [routerLink]=\\\"['/api2023']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                    Top Mundo y Calculadora\\n                                                </a>\\n                <!-- <a href=\\\"{{accion.col0}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-ver\\\">\\n                                        Coger datos\\n                                    </a>\\n                                    <a href=\\\"{{accion.col0}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-editar\\\">\\n                                            Editar de Api\\n                                        </a>\\n                                    <a href=\\\"{{accion.col0}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-eliminar\\\">\\n                                                Eliminar datos en API\\n                                            </a> -->\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-cabecera\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>RECOMENDADAS</h4>\\n            <p>Gestión de recomendadas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/recomendadas']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                            Gestionar recomendadas\\n                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>España</h4>\\n            <p>API y parseo de acciones españolas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/espana']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                            Cargar API y Robot Parseador\\n                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Alemania</h4>\\n            <p>API y parseo de acciones alemanas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/alemania']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n                <!-- <a href=\\\"{{accion.col0}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-ver\\\">\\n                                    Coger datos\\n                                </a>\\n                                <a href=\\\"{{accion.col0}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-editar\\\">\\n                                        Editar de Api\\n                                    </a>\\n                                <a href=\\\"{{accion.col0}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-eliminar\\\">\\n                                            Eliminar datos en API\\n                                        </a> -->\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Australia</h4>\\n            <p>API y parseo de acciones australianas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/australia']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Austria</h4>\\n            <p>API y parseo de acciones austriacas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/austria']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Belgica</h4>\\n            <p>API y parseo de acciones belgas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/belgica']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Brasil</h4>\\n            <p>API y parseo de acciones brasileñas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/brasil']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Canadá</h4>\\n            <p>API y parseo de acciones canadienses</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/canada']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>China</h4>\\n            <p>API y parseo de acciones chinas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/china']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Dinamarca</h4>\\n            <p>API y parseo de acciones danesas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/dinamarca']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>EEUU</h4>\\n            <p>API y parseo de acciones americanas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/eeuu']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Francia</h4>\\n            <p>API y parseo de acciones francesas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/francia']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Holanda</h4>\\n            <p>API y parseo de acciones holandesas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/holanda']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>India</h4>\\n            <p>API y parseo de acciones indias</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/india']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Italia</h4>\\n            <p>API y parseo de acciones italianas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/italia']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                    Cargar API y Robot Parseador\\n                                    </a>\\n                <!-- <a href=\\\"{{accion.col0}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-ver\\\">\\n                                        Coger datos\\n                                    </a>\\n                                    <a href=\\\"{{accion.col0}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-editar\\\">\\n                                            Editar de Api\\n                                        </a>\\n                                    <a href=\\\"{{accion.col0}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-eliminar\\\">\\n                                                Eliminar datos en API\\n                                            </a> -->\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>México</h4>\\n            <p>API y parseo de acciones mexicanas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/mexico']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Noruega</h4>\\n            <p>API y parseo de acciones noruegas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/noruega']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Portugal</h4>\\n            <p>API y parseo de acciones portuguesas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/portugal']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Rusia</h4>\\n            <p>API y parseo de acciones rusas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/rusia']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Suecia</h4>\\n            <p>API y parseo de acciones suecas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/suecia']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Suiza</h4>\\n            <p>API y parseo de acciones suizas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/suiza']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>UK</h4>\\n            <p>API y parseo de acciones inglesas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/uk']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n    <li class=\\\"accion-item\\\">\\n        <div class=\\\"content-data\\\">\\n            <h4>Crypto</h4>\\n            <p>API y parseo de cryptomonedas</p>\\n            <p class=\\\"buttons\\\">\\n                <a [routerLink]=\\\"['/crypto']\\\" target=\\\"_blank\\\" class=\\\"btn btn-default\\\">\\n                                Cargar API y Robot Parseador\\n                                </a>\\n            </p>\\n        </div>\\n    </li>\\n\\n\\n\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/home.html\n// module id = ../../../../../src/app/vistas/home.html\n// module chunks = 1","module.exports = \"<div id=\\\"content\\\">\\n    <header>\\n        <div class=\\\"title-subtitle\\\">\\n            <a href=\\\"#\\\">\\n                <h1>{{titulo}}</h1>\\n            </a>\\n            <p>{{descripcion}}</p>\\n        </div>\\n    </header>\\n\\n\\n\\n    <!-- mostramos otro componente -->\\n    <router-outlet></router-outlet>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/index.html\n// module id = ../../../../../src/app/vistas/index.html\n// module chunks = 1","module.exports = \"<body>\\n    {{titulo}}\\n\\n    <div class=\\\"container\\\">\\n\\n        <div class=\\\"contenedor\\\">\\n            <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n                <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n                <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n            <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n            <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n                <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n                <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                    </span>\\n                    <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                    </span>\\n                    </b> / - Semestral:\\n                    <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                    </span>\\n                    <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                    </span>\\n                    / - Mensual:\\n                    <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                    </span>\\n                    <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/india.html\n// module id = ../../../../../src/app/vistas/india.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/italia.html\n// module id = ../../../../../src/app/vistas/italia.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/mexico.html\n// module id = ../../../../../src/app/vistas/mexico.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/noruega.html\n// module id = ../../../../../src/app/vistas/noruega.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/portugal.html\n// module id = ../../../../../src/app/vistas/portugal.html\n// module chunks = 1","module.exports = \"{{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div *ngFor=\\\"let datos of accionesTraidas; let i = index\\\">\\n        <br>\\n        <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{datos.nombre}} ({{datos.ticker}}) </span> Imagen: <b>{{datos.imagen}}</b>, Alto: <b>{{datos.alto}}</b> - <i>Stop Loss: <b>{{datos.stop}}</b></i></div>\\n        <div class=\\\"derecha\\\"><button (click)=\\\"onBorraraccion(datos._id)\\\">Eliminar</button></div>\\n\\n        - Español: {{datos.espanol}}<br> -- Gallego: {{datos.gallego}}<br> -- Vasco: {{datos.vasco}}<br> -- Catalán: {{datos.catalan}}<br> - Inglés: {{datos.ingles}}<br> - Chino: {{datos.chino}}<br> - Árabe: {{datos.arabe}}<br> - Italiano: {{datos.italiano}}<br>        - Alemán: {{datos.aleman}}<br> - Francés: {{datos.frances}}<br> - Portugués: {{datos.portugues}}<br> - Ruso: {{datos.ruso}}<br> - Indi: {{datos.hindi}}<br> - Japonés: {{datos.japones}}<br>\\n        <br>\\n    </div>\\n\\n    <hr>\\n    <div class=\\\"recomendadas\\\">\\n        <form #formFavorito=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <br><b>- DATOS PRINCIPALES</b><br><br>\\n            <label>Nombre:</label>\\n            <p>\\n                <input type=\\\"text\\\" name=\\\"nombre\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.nombre\\\" required/>\\n            </p>\\n            <label>Ticker:</label>\\n            <p>\\n                <input type=\\\"text\\\" name=\\\"ticker\\\" #ticker=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.ticker\\\" required/>\\n            </p>\\n            <label>Imagen: (\\\"http://www.midastop.com/correcciones/BABA.jpg\\\")</label>\\n            <p>\\n                <input type=\\\"text\\\" name=\\\"imagen\\\" #imagen=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.imagen\\\" required/>\\n            </p>\\n            <label>Alto:</label>\\n            <p>\\n                <input type=\\\"text\\\" name=\\\"alto\\\" #alto=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.alto\\\" required/>\\n            </p>\\n            <label>Stop Loss:</label>\\n            <p>\\n                <input type=\\\"text\\\" name=\\\"stop\\\" #stop=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.stop\\\" required/>\\n            </p>\\n            <!-- Valores principales arriba, idiomas españoles abajo -->\\n            <br><b>- IDIOMAS ESPAÑA</b><br><br>\\n            <label>Espanol:</label>\\n            <p>\\n                <textarea name=\\\"espanol\\\" #espanol=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.espanol\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Gallego:</label>\\n            <p>\\n                <textarea name=\\\"gallego\\\" #gallego=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.gallego\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Catalán:</label>\\n            <p>\\n                <textarea name=\\\"catalan\\\" #catalan=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.catalan\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Vasco:</label>\\n            <p>\\n                <textarea name=\\\"vasco\\\" #vasco=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.vasco\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <!-- Idiomas internacionales -->\\n            <br><b>- IDIOMAS INTERNACIONALES</b><br><br>\\n            <label>Inglés:</label>\\n            <p>\\n                <textarea name=\\\"ingles\\\" #ingles=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.ingles\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Chino:</label>\\n            <p>\\n                <textarea name=\\\"chino\\\" #chino=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.chino\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Árabe:</label>\\n            <p>\\n                <textarea name=\\\"arabe\\\" #arabe=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.arabe\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Italiano:</label>\\n            <p>\\n                <textarea name=\\\"italiano\\\" #italiano=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.italiano\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Alemán:</label>\\n            <p>\\n                <textarea name=\\\"aleman\\\" #aleman=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.aleman\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Francés:</label>\\n            <p>\\n                <textarea name=\\\"frances\\\" #frances=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.frances\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Portugués:</label>\\n            <p>\\n                <textarea name=\\\"portugues\\\" #portugues=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.portugues\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Ruso:</label>\\n            <p>\\n                <textarea name=\\\"ruso\\\" #ruso=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.ruso\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Indi:</label>\\n            <p>\\n                <textarea name=\\\"hindi\\\" #hindi=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.hindi\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n            <label>Japonés:</label>\\n            <p>\\n                <textarea name=\\\"japones\\\" #japones=\\\"ngModel\\\" [(ngModel)]=\\\"favorito.japones\\\" cols=\\\"100\\\" rows=\\\"5\\\"></textarea>\\n            </p>\\n\\n            <input type=\\\"submit\\\" value=\\\"Añadir nueva acción recomendada\\\">\\n            <hr>\\n        </form>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/recomendadas.html\n// module id = ../../../../../src/app/vistas/recomendadas.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/rusia.html\n// module id = ../../../../../src/app/vistas/rusia.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/suecia.html\n// module id = ../../../../../src/app/vistas/suecia.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/suiza.html\n// module id = ../../../../../src/app/vistas/suiza.html\n// module chunks = 1","module.exports = \" {{titulo}}\\n\\n<div class=\\\"container\\\">\\n\\n    <div class=\\\"contenedor\\\">\\n        <div class=\\\"centrar\\\"><button (click)=\\\"ordenar('anual')\\\">\\n                        Anual\\n\\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('semestral')\\\">\\n                        Semestral\\n                       \\n                    </button>\\n            <button class=\\\"pointer\\\" (click)=\\\"ordenar('mensual')\\\">\\n                        Mensual\\n                        \\n                    </button></div>\\n        <!--    Diario: {{datos.mensual}} {{datos.semestral}}{{muestraDiario(modelo.Code,modelo.Country)}} | slice:0:3;-->\\n        <div *ngFor=\\\"let datos of datosFinales | orderBy:order:reverse; let i = index\\\">\\n\\n            <div class=\\\"izquierda\\\">{{i+1}}. <span class=\\\"mayusculas\\\">{{formatearNombre(datos.nombre)}}</span> ({{datos.ticker}}) - <i>Valor: <b>{{datos.valor}}</b></i></div>\\n            <div class=\\\"derecha\\\"><b>- Anual:\\n                                                <span *ngIf=\\\"datos.anualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.anual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.anualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.anual}}%</b></span>\\n                </span>\\n                </b> / - Semestral:\\n                <span *ngIf=\\\"datos.semestralD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.semestral}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.semestralD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.semestral}}%</b></span>\\n                </span>\\n                / - Mensual:\\n                <span *ngIf=\\\"datos.mensualD === 'sube'\\\">\\n                                                    <span class=\\\"verde\\\"><b>+{{datos.mensual}}%</b></span>\\n                </span>\\n                <span *ngIf=\\\"datos.mensualD === 'baja'\\\">\\n                                                    <span class=\\\"rojo\\\"><b>{{datos.mensual}}%</b></span>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/app/vistas/uk.html\n// module id = ../../../../../src/app/vistas/uk.html\n// module chunks = 1","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/zined/Desktop/Programación/MidasTop/ParseadorProduccion/client_dev/src/main.ts"],"sourceRoot":"webpack:///"}